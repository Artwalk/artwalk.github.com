<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LeiHao&#39;s Blog</title>
  
  
  <link href="/ar/atom.xml" rel="self"/>
  
  <link href="https://leihao0.github.io/ar/"/>
  <updated>2021-03-22T16:00:09.311Z</updated>
  <id>https://leihao0.github.io/ar/</id>
  
  <author>
    <name>LeiHao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>🇯🇵-1-1.</title>
    <link href="https://leihao0.github.io/ar/japan-1-1/"/>
    <id>https://leihao0.github.io/ar/japan-1-1/</id>
    <published>2021-03-15T16:24:10.000Z</published>
    <updated>2021-03-22T16:00:09.311Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ألف-الطيور"><a href="#ألف-الطيور" class="headerlink" title="ألف الطيور"></a>ألف الطيور</h2><p>اتضح أن هذا يسمى الآلاف من الطيور. </p><p>تسلق<br>وقال ماجي الصغير إنه لا يزال قادما، من الأفضل أن يصعد إلى قمة الجبل.<br>لكنها ليست صغيرة.<br>نظرت إلى أسفل الخريطة، وكانت الألف الطيور صغيرة تقريبا، ورأى ماجى قليلا الكثير من الصورة.<br>يبدو أنه لا يزال في منتصف الجبل، إذا تسلقت لائق، أخشى أن تؤخر خط سير الرحلة المتبقية.<br>لذلك فقط النزول إلى أسفل الجبل. </p><p>عدت لاحقا، لقد تعلمت أنه لا توجد مسافة كبيرة.<br>لأن الطائر هو حقا، كلما كان أقل </p><a id="more"></a><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-02.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-04.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-11.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-10.webp" alt=""></div></div></div><p>الجميع هو غسل اليدين من Qingquan<br>سيد صغير غسله بواسطة الهاتف المحمول.<br>أخشى عندما أريد أن آتي.<br>أنا لا أعرف ما إذا كان هناك أي سعادة<br>لا يزال عدم انفجار من قبل الناس حول الناس </p><p>الخيزران </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-17.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-16.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-15.webp" alt=""></div></div></div><p>العشاء، نبيذ البيت، هو المكان الذي يتحدث فيه الشخص المحلي والاسترخاء.<br>مقارنة مع النبيذ، لا يزال مشروبا جيدا.<br>بجانب محلات السوبر ماركت العديد من المجلات الهزلي للبيع معا </p><h2 id="كينوساكي-Onsen-♨♨"><a href="#كينوساكي-Onsen-♨♨" class="headerlink" title="كينوساكي Onsen ♨♨."></a>كينوساكي Onsen ♨♨.</h2><p>في اليوم التالي، قم بالقطار الصغير للذهاب إلى مدينة المدينة.<br>السيد الصغير لم يزعج الينابيع الساخنة.<br>ومع ذلك، كشمالي، أريد أن آتي والحمام الكبير ليس أكثر من اللازم. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-20.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-21.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-22.webp" alt=""></div></div></div><h2 id="onsen-shinual-♨♨"><a href="#onsen-shinual-♨♨" class="headerlink" title="onsen shinual ♨♨."></a>onsen shinual ♨♨.</h2><p>ومع ذلك، فإن الحقيقة هي وراء الخيال </p><p>بادئ ذي بدء، فإن الينابيع الساخنة لديها هواء مفتوح، هناك بركة، أوراق الرياح الخريف، بالإضافة إلى الثلج<br>فقاعة في مياه الربيع الدافئة، لا تكون سعيدا جدا </p><p>أجبرت القليل من ماجي القليل من الركسي القليل ألف طيور قبل وصولهم.<br>آلام erthrophert يمكن الزحف فقط على حصير </p><p>بعد الينابيع الحارة، اتضح أن تكون سحرية. </p><p>ليس فقط تنهد<br>يمكن أن تستحم الماء المرجل كاذب<br>والسبا الحقيقي يمكن أن يعود الدم </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-25.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-26.webp" alt=""></div></div></div><p>بسبب نوفمبر، بالقرب من الربيع، البخار<br>هناك أيضا بيض الربيع الحار على جانب الطريق، يمكنك أيضا شرائه في الربيع الساخن ♨️ في 20 دقيقة.<br>خلعها هي البيض القلبي للسكر </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-52.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-55.webp" alt=""></div></div></div><p>الماء واضح أو الأسماك<br>هناك أيضا مجموعة متنوعة من السرطانات الكبيرة<br>الحافلة 🚌 هنا مثل سنغافورة<br>قبل الحصول على الحافلة، اضغط على الزر صغير قبل النزول من الحافلة. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-24.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-27.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-28.webp" alt=""></div></div></div><h2 id="اليوم-والساحل-الجبل"><a href="#اليوم-والساحل-الجبل" class="headerlink" title="اليوم والساحل الجبل"></a>اليوم والساحل الجبل</h2><p>على عكس سان فرانسيس، فإنه مختلف، البحر هنا نظيف، لا توجد رائحة شيء<br>ومع ذلك، فقد تغير الطقس في لحظة، فقط لا يزال الرياح وجميلة، المطر فجأة، بارد سوبر<br>إخفاء الحوض بجوار، ولعب كوب من القهوة الساخنة والاستماع إلى المطر دافئ </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-30.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-29.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-33.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-35.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-32.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-49.webp" alt=""></div></div></div><h2 id="قوس-المطر"><a href="#قوس-المطر" class="headerlink" title="قوس المطر"></a>قوس المطر</h2><p>رأى الحياة لأول مرة القوس قزح<br>تعال إلى تشانغ دا تو للاحتفال </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-37.webp" alt=""></p><h2 id="حوض-سمك"><a href="#حوض-سمك" class="headerlink" title="حوض سمك"></a>حوض سمك</h2><p>لا أستطيع شرائه.<br>أكثر من 100 يوان، 7 سمات يمكن رؤيتها<br>أكثر من حوض السمك في طوكيو من قبل<br>بسبب البحر، المكان كبير<br>رأيت فرص البحر ضخمة<br>بجانبك يمكنك أيضا قياس وزن الجسم، 21 حرفا صغيرا == هذا فرس البحر<br>أخيرا، هناك أداء مائي صغير لدولفين صغير. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-38.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-39.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-41.webp" alt=""></div></div></div><h2 id="معبد-الربيع-الساخن"><a href="#معبد-الربيع-الساخن" class="headerlink" title="معبد الربيع الساخن"></a>معبد الربيع الساخن</h2><p>هناك تل بجانبها، يمكنك القيام بسيارة التلفريك.<br>الجبل ليس مرتفعا، ولكن هناك تساقط الثلوج بالفعل.<br>تصميم الطنف جيد جدا، والثلوج لن تظهر حولها. </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-57.webp" alt=""></p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-64.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-68.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-56.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-59.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-61.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-67.webp" alt=""></div></div></div><p>البلاط على البلاط<br>عندما أعود إلى الفندق، وجدت مركز الطرق في الرش.<br>سحرية للغاية، لا أفهم لماذا تريد هذا التصميم </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-71.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-73.webp" alt=""></div></div></div><p>معبأة الأمتعة مرة أخرى إلى أوساكا </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-75.webp" alt=""></div></div></div><h2 id="سلطعون-ليفي"><a href="#سلطعون-ليفي" class="headerlink" title="سلطعون ليفي"></a>سلطعون ليفي</h2><h2 id="بلويلد-واحد"><a href="#بلويلد-واحد" class="headerlink" title="بلويلد واحد"></a>بلويلد واحد</h2><p>شارع الذواقة<br>سلطعون الموسيقى، تحتاج إلى تحديد موعد مقدما، أو المتجر ليس مقعد.<br>يمكن لعبها على ذلك، ولكن هذا النوع من المشقة أمر صعب للغاية، لذلك هناك مقعد يتم تجويفه لتظاهر التاتامي. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-78.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-1-82.webp" alt=""></div></div></div><hr><p><a href="https://twitter.com/leihao0">اتبعني على Twitter</a> </p><hr><p>Translated by Google</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ألف-الطيور&quot;&gt;&lt;a href=&quot;#ألف-الطيور&quot; class=&quot;headerlink&quot; title=&quot;ألف الطيور&quot;&gt;&lt;/a&gt;ألف الطيور&lt;/h2&gt;&lt;p&gt;اتضح أن هذا يسمى الآلاف من الطيور. &lt;/p&gt;
&lt;p&gt;تسلق&lt;br&gt;وقال ماجي الصغير إنه لا يزال قادما، من الأفضل أن يصعد إلى قمة الجبل.&lt;br&gt;لكنها ليست صغيرة.&lt;br&gt;نظرت إلى أسفل الخريطة، وكانت الألف الطيور صغيرة تقريبا، ورأى ماجى قليلا الكثير من الصورة.&lt;br&gt;يبدو أنه لا يزال في منتصف الجبل، إذا تسلقت لائق، أخشى أن تؤخر خط سير الرحلة المتبقية.&lt;br&gt;لذلك فقط النزول إلى أسفل الجبل. &lt;/p&gt;
&lt;p&gt;عدت لاحقا، لقد تعلمت أنه لا توجد مسافة كبيرة.&lt;br&gt;لأن الطائر هو حقا، كلما كان أقل &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ar/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ar/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/ar/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/ar/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>🇯🇵-1-0.</title>
    <link href="https://leihao0.github.io/ar/japan-1-0/"/>
    <id>https://leihao0.github.io/ar/japan-1-0/</id>
    <published>2021-03-14T02:38:19.000Z</published>
    <updated>2021-03-14T11:21:52.904Z</updated>
    
    <content type="html"><![CDATA[<h1 id="كيوتو"><a href="#كيوتو" class="headerlink" title="كيوتو"></a>كيوتو</h1><p>عاد أحد عشر عطلة عاد من 🇮🇹<br>ربما لأن بطاقة الائتمان مصنوعة نحى، أرسل بنك التجار الصين إلى Zhang Premium </p><p>بعد يوم واحد من نصف شهر، يتم إرسال ماجى صغيرة إلى اليابان لرؤية ورقة القيقب.<br>يشير إلى أن تخطيط المسار قد تم<br>Kyoto-&gt; Nara-&gt; Kinosaki-&gt; أوساكا<br>إذا لم تكن جيدا في النظام، فالرجاء مزيف، حتى تتمكن من طلب التذاكر فقط في بداية نوفمبر، وآمل أن أمسك ذيل موسم أوراق القيقب. </p><p>سيد صغير يراقب منطقة كانساي، لم أكن هناك.<br>على الفور، فإن يونيو هو تأشيرة رحلة مستديرة لمدة ثلاث سنوات.<br>يمكنك أيضا أن تذهب معا </p><p>على الرغم من أنها أسبوعين فقط، فإن الوقت أكثر إلحاحا<br>لحسن الحظ، شراء تذاكر، مجنون، افعل أسبوعين، أكمل المهمة مقدما<br>بعد تقديم الكود إلى المنظمة، بدأت اليابانية الثانية </p><p>ما زلت لا أعرف كيفية مشاهدته.<br>عندما وصلت إلى المطار، كنت غبيا عندما رأيت هذه الطائرة الصغيرة واحدة.<br>انها مجرد بوينغ 737<br>على الرغم من أن الأحداث القصوى لم تحدث بعد<br>ولكن لا يزال قلقا من أن يطير إلى حيث يسقط في البحر.<br>افتح الخط الرئيسي المفقود </p><a id="more"></a><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-01.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-02.webp" alt=""></div></div></div><h2 id="محطة-مترو-كيوتو"><a href="#محطة-مترو-كيوتو" class="headerlink" title="محطة مترو كيوتو"></a>محطة مترو كيوتو</h2><p>آخر مرة في طوكيو في نفس النظام الأساسي 🚉، إلخ. </p><p>لا تزال Mage الصغيرة في المرة الأولى، محطة مترو الأنفاق هي مركز تجاري ضخم.<br>ما مجموعه 7 طوابق، وتناول المزيد والمزيد<br>على الرغم من أنه كان فقط في بداية نوفمبر، فقد تم ملء عيد الميلاد. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-05.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-06.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-08.webp" alt=""></div></div></div><h2 id="معبد-الجناح-الذهبي"><a href="#معبد-الجناح-الذهبي" class="headerlink" title="معبد الجناح الذهبي"></a>معبد الجناح الذهبي</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-14.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-12.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-10.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-11.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-13.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-15.webp" alt=""></div></div></div><h2 id="كيوتو-gyoen"><a href="#كيوتو-gyoen" class="headerlink" title="كيوتو gyoen"></a>كيوتو gyoen</h2><p>هناك شجرة ورقة صفراء خاصة بين الأخضر الأحمر </p><blockquote><p>بلا رأس </p></blockquote><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-22.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-23.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-19.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-24.webp" alt=""></div></div></div><p>الوقت القادم، لا أحد </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-18.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-20.webp" alt=""></div></div></div><h2 id="shimizuji"><a href="#shimizuji" class="headerlink" title="shimizuji."></a>shimizuji.</h2><p>مشاهدة أخت كيمونو </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-26.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-28.webp" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-31.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-32.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-33.webp" alt=""></div></div></div><h2 id="معبد"><a href="#معبد" class="headerlink" title="معبد"></a>معبد</h2><p>لمس عائلة في إطلاق النار الزفاف </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-34.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-35.webp" alt=""></div></div></div><p>غروب الشمس وصنبور غريب </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-36.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-38.webp" alt=""></div></div></div><p>رؤية أن الكثير من الناس يبحثون عن إله العبادة بوذا<br>الركيزة الصغيرة سوف يلقي أيضا صخرة العملة.<br>آمل أن يكون التطبيق عبر الإنترنت، لا تحطم 🙏 </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-40.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-41.webp" alt=""></div></div></div><h2 id="Lushan-قطار-صغير"><a href="#Lushan-قطار-صغير" class="headerlink" title="Lushan قطار صغير"></a>Lushan قطار صغير</h2><p>في صباح اليوم التالي، ذهبت إلى قطار لوشان الصغير في الصباح الباكر. يقال إن المشهد خلابيا.<br>ومع ذلك، تأكد من شراء جانب الجبل، وإلا فإنني سوف أستمع فقط إلى السياح الآخرين “واو”، لا أستطيع رؤية أي شيء. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-45.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-46.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-47.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-48.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-49.webp" alt=""></div></div></div><h2 id="غابة-تشينو-الخيزران-القطر-الصغيرة"><a href="#غابة-تشينو-الخيزران-القطر-الصغيرة" class="headerlink" title="غابة تشينو الخيزران القطر الصغيرة"></a>غابة تشينو الخيزران القطر الصغيرة</h2><p>فاجأ </p><p>هذه هي غابة الخيزران التي شوهدت في كثير من الأحيان في كتيب كيوتو. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-50.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-51.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-57.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-58.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-53.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-52.webp" alt=""></div></div></div><blockquote><p>الخلفية في الغابة العميقة، انسخ الطحلب </p></blockquote><p>الطحلب هنا رائع، مرة واحدة خلفية الهاتف المحمول ماجي صغير </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-55.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-92.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-93.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-54.webp" alt=""></div></div></div><p>يحول </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-62.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-63.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-64.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-65.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-66.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-67.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-68.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-69.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-70.webp" alt=""></div></div></div><p>قصيدة تشو انلياي رئيس الوزراء </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-72.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-73.webp" alt=""></div></div></div><p>يمكنك أيضا القيام سيارة بشرية. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-74.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-78.webp" alt=""></div></div></div><p>على الرغم من أنها الكثير من الذيل<br>حتى لو كان هذا الوحيد الأحمر هو أيضا جميل، فإنه لا يفوز. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-76.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-77.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-79.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-80.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-81.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-82.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-83.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-84.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-85.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-86.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-87.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-88.webp" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-89.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-90.webp" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ja-1-0-91.webp" alt=""></div></div></div><p>على عكس المناظر الطبيعية في المدينة من طوكيو </p><p>المناظر الطبيعية هنا في كيوتو هي أيضا انفجار. </p><p>في المرة القادمة، سوف آخذ ورقة أخت معا.<br>سيد صغير هو التفكير </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;كيوتو&quot;&gt;&lt;a href=&quot;#كيوتو&quot; class=&quot;headerlink&quot; title=&quot;كيوتو&quot;&gt;&lt;/a&gt;كيوتو&lt;/h1&gt;&lt;p&gt;عاد أحد عشر عطلة عاد من 🇮🇹&lt;br&gt;ربما لأن بطاقة الائتمان مصنوعة نحى، أرسل بنك التجار الصين إلى Zhang Premium &lt;/p&gt;
&lt;p&gt;بعد يوم واحد من نصف شهر، يتم إرسال ماجى صغيرة إلى اليابان لرؤية ورقة القيقب.&lt;br&gt;يشير إلى أن تخطيط المسار قد تم&lt;br&gt;Kyoto-&amp;gt; Nara-&amp;gt; Kinosaki-&amp;gt; أوساكا&lt;br&gt;إذا لم تكن جيدا في النظام، فالرجاء مزيف، حتى تتمكن من طلب التذاكر فقط في بداية نوفمبر، وآمل أن أمسك ذيل موسم أوراق القيقب. &lt;/p&gt;
&lt;p&gt;سيد صغير يراقب منطقة كانساي، لم أكن هناك.&lt;br&gt;على الفور، فإن يونيو هو تأشيرة رحلة مستديرة لمدة ثلاث سنوات.&lt;br&gt;يمكنك أيضا أن تذهب معا &lt;/p&gt;
&lt;p&gt;على الرغم من أنها أسبوعين فقط، فإن الوقت أكثر إلحاحا&lt;br&gt;لحسن الحظ، شراء تذاكر، مجنون، افعل أسبوعين، أكمل المهمة مقدما&lt;br&gt;بعد تقديم الكود إلى المنظمة، بدأت اليابانية الثانية &lt;/p&gt;
&lt;p&gt;ما زلت لا أعرف كيفية مشاهدته.&lt;br&gt;عندما وصلت إلى المطار، كنت غبيا عندما رأيت هذه الطائرة الصغيرة واحدة.&lt;br&gt;انها مجرد بوينغ 737&lt;br&gt;على الرغم من أن الأحداث القصوى لم تحدث بعد&lt;br&gt;ولكن لا يزال قلقا من أن يطير إلى حيث يسقط في البحر.&lt;br&gt;افتح الخط الرئيسي المفقود &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ar/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ar/tags/littlemaster/"/>
    
      <category term="Japan" scheme="https://leihao0.github.io/ar/tags/japan/"/>
    
      <category term="🇯🇵" scheme="https://leihao0.github.io/ar/tags/%F0%9F%87%AF%F0%9F%87%B5/"/>
    
  </entry>
  
  <entry>
    <title>🇮🇹-0-2.</title>
    <link href="https://leihao0.github.io/ar/italy-0-2/"/>
    <id>https://leihao0.github.io/ar/italy-0-2/</id>
    <published>2021-02-12T16:00:00.000Z</published>
    <updated>2017-09-30T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="الفاتيكان"><a href="#الفاتيكان" class="headerlink" title="الفاتيكان"></a>الفاتيكان</h2><p>الفاتيكان الأصلي في إيطاليا<br>المنطقة أقل من الكليات والجامعات المحلية<br>الأراضي ليست مفتوحة<br>بالإضافة إلى المتاحف </p><a id="more"></a><h3 id="مصرية"><a href="#مصرية" class="headerlink" title="مصرية"></a>مصرية</h3><p>رأيت أن المومياء تشعر بالمروعة.<br>يجرؤ على التقاط الصور<br>أخشى أن أطارد الروح </p><p>هناك أيضا Nosbis </p><p>إذا كنت تلعب عقيد القاتل: الأصل<br>سوف نرى الكثير من العناصر المألوفة </p><h3 id="البطل-الأسطوري"><a href="#البطل-الأسطوري" class="headerlink" title="البطل الأسطوري"></a>البطل الأسطوري</h3><p>لسوء الحظ، لم يصل Mage الصغير إلى المستوى المقابل في زراعة الفن.<br>رأيت فن هذه الكتب المدرسية، والنتائج لم تكن تعرف من هو.<br>عيب عليك </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-11.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-06.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-07.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-05.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-08.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-10.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-12.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-14.jpg" alt=""></div></div></div><h3 id="حديقة-فن-الصنوبر-والارض-المكسورة"><a href="#حديقة-فن-الصنوبر-والارض-المكسورة" class="headerlink" title="حديقة فن الصنوبر والارض المكسورة"></a>حديقة فن الصنوبر والارض المكسورة</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-19.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-17.jpg" alt=""></div></div></div><h3 id="ثقب-العليا-وابنه"><a href="#ثقب-العليا-وابنه" class="headerlink" title="ثقب العليا وابنه"></a>ثقب العليا وابنه</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-23.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-28.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-24.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-25.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-26.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-27.jpg" alt=""></div></div></div><h3 id="قاعة-المعارض-الدائرية"><a href="#قاعة-المعارض-الدائرية" class="headerlink" title="قاعة المعارض الدائرية"></a>قاعة المعارض الدائرية</h3><p>المركز المركزي هو بيديت المستخدمة من قبل نيرو، نيرو. </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-29.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-30.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-31.jpg" alt=""></div></div></div><h3 id="جدارية"><a href="#جدارية" class="headerlink" title="جدارية"></a>جدارية</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-35.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-36.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-37.jpg" alt=""></div></div></div><h3 id="رافائيل-الطلاء-الغرفة"><a href="#رافائيل-الطلاء-الغرفة" class="headerlink" title="رافائيل الطلاء الغرفة"></a>رافائيل الطلاء الغرفة</h3><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-39.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-38.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-40.jpg" alt=""></div></div></div><h3 id="سيستين-تشابل"><a href="#سيستين-تشابل" class="headerlink" title="سيستين تشابل"></a>سيستين تشابل</h3><p>المحاكمة النهائية وجديدة Michelangelo<br>غير مسموح به لالتقاط الصور<br>يمكنك البقاء فقط لمدة 15 دقيقة للشخص الواحد. </p><p>القرن الأصلي الذي يراه عادة هو في الواقع الأكثر وسيطة، في الواقع، ما مجموعه تسعة فصول<br>الظلام، اليوم الإبداعي، الشهر، العشب، Semland، خلق آدم، خلق حواء، الخطيئة الأصلية - eden، نواصل نوح، فيضان كبيرة، ناهيرون </p><h3 id="درج-حلزوني"><a href="#درج-حلزوني" class="headerlink" title="درج حلزوني"></a>درج حلزوني</h3><p>يستمر التصدير بالصدمة<br>اتضح أن تكون هنا </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-41.jpg" alt=""></div></div></div><h3 id="الكأس-المقدسة"><a href="#الكأس-المقدسة" class="headerlink" title="الكأس المقدسة"></a>الكأس المقدسة</h3><p>مصير البقاء ليلة </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-42.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-44.jpg" alt=""></div></div></div><h2 id="سانت-بيتر-سكوير"><a href="#سانت-بيتر-سكوير" class="headerlink" title="سانت بيتر سكوير"></a>سانت بيتر سكوير</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-45.jpg" alt=""></div></div></div><h2 id="قلعة-الملاك"><a href="#قلعة-الملاك" class="headerlink" title="قلعة الملاك"></a>قلعة الملاك</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-47.jpg" alt=""></div></div></div><p>فجأة عقيدة القاتل </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-46.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-52.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-53.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-54.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-55.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-56.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-57.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-58.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-59.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-60.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-61.jpg" alt=""></div></div></div><h2 id="غروب-الشمس"><a href="#غروب-الشمس" class="headerlink" title="غروب الشمس"></a>غروب الشمس</h2><p>المرة الأولى مشاهدة غروب الشمس </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-62.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-66.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-67.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-69.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-68.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-70.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-71.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-73.jpg" alt=""></div></div><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-74.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-76.jpg" alt=""></div></div></div><h2 id="في-اليوم-التالي"><a href="#في-اليوم-التالي" class="headerlink" title="في اليوم التالي"></a>في اليوم التالي</h2><p>على الطريق، يأتي أخي صغير أن يوصي بحافلة جولة في اليوم<br>تلقى المال للحصول على التذاكر، ثم اختفى الناس<br>عندما اعتقدت أنه كان كاذبا، عاد أخي الصغير مع صوتين.<br>حلقة، يمكنك النزول في الحافلة في جميع الأوقات، أو جيدة جدا </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-78.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-79.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-82.jpg" alt=""></div></div></div><h2 id="بانثيون"><a href="#بانثيون" class="headerlink" title="بانثيون"></a>بانثيون</h2><p>هناك الكثير من الناس، وقد رأيت عينا في الخارج. </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-80.jpg" alt=""></p><h2 id="الوحش-القتال-الروماني"><a href="#الوحش-القتال-الروماني" class="headerlink" title="الوحش القتال الروماني"></a>الوحش القتال الروماني</h2><p>العقرب، آخر مرة رأيت الوحش، والقليل من ماجى لعب عقيدة القاتل: الوحي<br>تسلق الوحش، انظر غروب الشمس<br>لقد صدمت لفترة طويلة.<br>لم أكن أتوقع أن أراها في العالم ثلاثي الأبعاد.<br>هل هو لا يصدق؟ </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-92.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-86.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-91.jpg" alt=""></div></div></div><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-89.jpg" alt=""></div></div></div><h2 id="قوس-دي-triomphe"><a href="#قوس-دي-triomphe" class="headerlink" title="قوس دي triomphe."></a>قوس دي triomphe.</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-87.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-88.jpg" alt=""></div></div></div><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-90.jpg" alt=""></p><h2 id="هيرميس-محفظة-صغيرة"><a href="#هيرميس-محفظة-صغيرة" class="headerlink" title="هيرميس محفظة صغيرة"></a>هيرميس محفظة صغيرة</h2><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-94.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-95.jpg" alt=""></div></div></div><p>العودة إلى CBD Building Street Street<br>اللطفة الموصى بها لشراء حقيبة الحب ما شي<br>قل ما هو في الفخامة، وهو أيضا وجود أعلى </p><p>لم تسمع Mage الصغير هيرميس قبل إطلاق Apple الشريط.<br>بطبيعة الحال لا تصدق<br>أريد أن أقرأ أقل، لا تكذب علي.<br>الذهاب إلى Google “هيرميس ليس فاخرا”<br>مندهش للعثور على أن قد يكون صحيحا حقا </p><p>فرشاة عليه، اشتريت حزمة من الجراء.<br>كن حذرا من المربع الفارغ<br>تحقق لرؤية صندوق لا تضخم ضخم في كومة القمامة بجانبه. </p><h2 id="مطار"><a href="#مطار" class="headerlink" title="مطار"></a>مطار</h2><p>التعبير طوال الطريق، لقد عدت أخيرا.<br>على عكس اليابان، يمكن لأوروبا استرداد في المطار<br>في احسن الاحوال </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-97.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/ita-0-2-98.jpg" alt=""></div></div></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;الفاتيكان&quot;&gt;&lt;a href=&quot;#الفاتيكان&quot; class=&quot;headerlink&quot; title=&quot;الفاتيكان&quot;&gt;&lt;/a&gt;الفاتيكان&lt;/h2&gt;&lt;p&gt;الفاتيكان الأصلي في إيطاليا&lt;br&gt;المنطقة أقل من الكليات والجامعات المحلية&lt;br&gt;الأراضي ليست مفتوحة&lt;br&gt;بالإضافة إلى المتاحف &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Travel" scheme="https://leihao0.github.io/ar/tags/travel/"/>
    
      <category term="LittleMaster" scheme="https://leihao0.github.io/ar/tags/littlemaster/"/>
    
      <category term="Italy" scheme="https://leihao0.github.io/ar/tags/italy/"/>
    
      <category term="🇮🇹" scheme="https://leihao0.github.io/ar/tags/%F0%9F%87%AE%F0%9F%87%B9/"/>
    
  </entry>
  
  <entry>
    <title>العودة إلى الصين في ظل فيروس كورونا</title>
    <link href="https://leihao0.github.io/ar/fly-back-to-china-under-covid-19/"/>
    <id>https://leihao0.github.io/ar/fly-back-to-china-under-covid-19/</id>
    <published>2020-12-20T07:52:43.000Z</published>
    <updated>2020-12-22T00:32:16.907Z</updated>
    
    <content type="html"><![CDATA[<p>لم يتحسن الوضع الوبائي العالمي في المتاحف الجديدة في نهاية عام 2020<br>ومع حلول فصل الشتاء ، تظهر تدريجياً علامات على اندلاع جديد<br>لكن مؤخرًا يحتاج الساحر الصغير للعودة إلى المنزل<br>على الرغم من أنه تم تطعيم العديد من اللقاحات حول العالم </p><table><thead><tr><th>الشركة</th><th>النوع</th><th>الجرعة</th><th>الفعالية</th><th>التخزين ℃</th></tr></thead><tbody><tr><td>BioNTech / Pfizer</td><td>مرنا</td><td>x2</td><td>95٪</td><td>-70</td></tr><tr><td>حديث</td><td>مرنا</td><td>x2</td><td>95٪</td><td>-20</td></tr><tr><td>أكسفورد / أسترازينيكا</td><td>ناقل الفيروسات الغدية</td><td>x2</td><td>62-90٪</td><td>0</td></tr></tbody></table><p>لكنها لا تزال تتطلب 14 يومًا من العزلة للعودة إلى المنزل </p><a id="more"></a><h2 id="جاهز"><a href="#جاهز" class="headerlink" title="جاهز"></a>جاهز</h2><p>قم بزيارة السفارة المحلية للحصول على معلومات الدخول<br>لنأخذ سنغافورة كمثال ، وفقًا لـ <a href="http://www.chinaembassy.org.sg/chn/lsfw/zytzs/t1838128.htm">السفارة في نيوزيلندا</a> </p><p>من المحتمل أن يمر الصعود بعد شهر أكتوبر بعدة مراحل ، مع التشديد خطوة بخطوة </p><ol><li>اختبار تضخيم الحمض النووي </li><li>الحمض النووي + مصل الدم IgM شهادة سلبية مزدوجة </li><li>يجب عليك التقدم للحصول على الكود الصحي للوقاية من الأوبئة في برنامج WeChat المصغر </li></ol><h2 id="اختبار-تضخيم-الحمض-النووي"><a href="#اختبار-تضخيم-الحمض-النووي" class="headerlink" title="اختبار تضخيم الحمض النووي"></a>اختبار تضخيم الحمض النووي</h2><p>تحتاج إلى تحديد موعد للاختبار في تشرين الثاني (نوفمبر) ، ولست بحاجة إلى تحديد موعد في شهر كانون الأول (ديسمبر). يمكنك إجراء الاختبار مباشرة عندما تجد مستشفى معتمدًا<br>توجد عيادة بجوار الشقة حيث يعيش الساحر الصغير امش لمدة 5 دقائق<br>بسبب عدم وجود مواعيد ، هناك الكثير من الناس وانتظرت قرابة الساعة<br>سحب الدم وطعن أنفه<br>لقد كنت خائفًا من هذا الاختبار من قبل ، لكن الأطباء السنغافوريين أكثر لطفًا ولا يرتاحون كثيرًا </p><p>إليك تذكير بأنه يجب عليك الضغط لفترة من الوقت بعد سحب الدم. يسحب الأخ الصغير الدم أمام الدم ولم يستخدم الضمادة بعناية 🩹 اضغط عليها<br>بالنتيجة كان الدم يتدفق في النهر والثياب على الأرض مغطاة بالدماء ، كان الأمر فظيعًا </p><h2 id="كود-الصحة"><a href="#كود-الصحة" class="headerlink" title="كود الصحة"></a>كود الصحة</h2><p>تم استلام إثبات مزدوج عن طريق الرسائل القصيرة والبريد الإلكتروني في صباح اليوم التالي<br>لكن التطبيق الصغير WeChat لا يمكنه تقديم المستندات<br>بصفته ساحرًا ، خمن الساحر الصغير بجرأة أنها كانت مشكلة في حل DNS<br>لم يقم Cloudflare بإرجاع عنوان IP الخاص بخادم التطبيق الصغير بشكل صحيح.<br>قم بتغيير الهاتف 📱 DNS إلى 114.114.114.114 وسيكون الأمر مذهلاً<br>لا تنهد فقط ماذا تفعل مع Muggles </p><p>استلمت الرمز الصحي بعد حوالي ساعة<br>حفظ لقطات فقط في حالة </p><h2 id="دعوى-البيوكيميائية"><a href="#دعوى-البيوكيميائية" class="headerlink" title="دعوى البيوكيميائية"></a>دعوى البيوكيميائية</h2><p>كنت خائفة من الأشخاص العائدين إلى ديارهم بالبدلات البيوكيميائية في المطار.<br>كانت الساحرة الصغيرة تهتز واشترت مجموعة + حفاضات للكبار<br>كان من غير المريح تجربته سرا<br>بالنظر إلى أن النصف الشمالي من الكرة الأرضية يكون في الشتاء في نهاية العام ، فإن ركوب الطائرة بقميص استوائي والنزول من الطائرة بدون ملابس سيصاب بالتأكيد بنزلة برد شديدة في الحال. </p><p>يصبح ارتداء البدلات البيوكيميائية وإضافة الملابس مشكلة كبيرة </p><p>بعد قراءة CDC مرارًا وتكرارًا <a href="https://chinese.cdc.gov/coronavirus/2019-ncov/travelers/travel-during-covid19.html">السفر المحلي أثناء وباء COVID-19</a> ، اختتم السيد الصغير </p><ul><li>الطائرة لها هواء نقي </li><li>البس قناعا </li><li>ليست عيون وأنف ناعمة </li></ul><p>الطريق الرئيسي لعدوى التاج الجديد هو الجهاز التنفسي. يشعر الساحر الصغير أن ارتداء ** N95 + قناع جراحي + نظارات واقية ** يجب أن يكون مريحًا </p><h2 id="رحلة-العودة"><a href="#رحلة-العودة" class="headerlink" title="رحلة العودة"></a>رحلة العودة</h2><p>لا توجد حاليا رحلات مباشرة من سنغافورة إلى بكين<br>يمكنك فقط اختيار الذهاب إلى شنغهاي أولاً ، ثم الانتقال بعد 14 عزلة </p><p>هناك ثلاث رحلات مباشرة فقط من سنغافورة إلى شنغهاي في الأسبوع<br>الخطوط الجوية السنغافورية يوم الاثنين ، والخطوط الجوية الشرقية يوم الخميس ، والخطوط الجوية جونياو ليلة الجمعة </p><p>يمكن لشركة Eastern Airlines فحص قطعة واحدة فقط من الأمتعة ، ويجب شراء أمتعة إضافية ، قطعة واحدة 500 يوان صيني<br>20٪ خصم على الشراء المسبق على التطبيق </p><p>بالإضافة إلى الرمز الصحي قبل الصعود مباشرة ، تحتاج أيضًا إلى استخدام البرنامج المصغر للجمارك للمسافرين لملء معلومات الدخول </p><h2 id="الخطوط-الجوية-الشرقية"><a href="#الخطوط-الجوية-الشرقية" class="headerlink" title="الخطوط الجوية الشرقية"></a>الخطوط الجوية الشرقية</h2><p>03:00 </p><p>في انتظار بوابة الصعود إلى الطائرة ، ارتدى حوالي نصف الأشخاص بدلات كيميائية حيوية وقاموا بتغطيتها بإحكام.<br>في الواقع ، أثناء الفحص الأمني ​​الأمامي ، كان الأمر محرجًا للغاية ، لأن بعض الأشخاص اضطروا إلى أخذ نصف خدمة الكيمياء الحيوية بسبب الحزام وأسباب أخرى.<br>في هذه الحالة ، ألا ينقطع العمل؟ ما هو الأثر الوقائي؟ </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-01.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-02.jpg" alt=""></div></div></div><p>يرتدي الطاقم أيضًا أقنعة مزدوجة الطبقة + نظارات واقية </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-03.jpg" alt=""></p><p>بعد صعود الطائرة ، تم توصيل البركه الصغير بشبكة Wi-Fi الفضائية واستمر في إطلاع عائلته على تحديثات الأخبار حتى لا داعي للقلق. </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-05.jpg" alt=""></p><p>على الرغم من انتشار الوباء ، لا تزال هناك وجبات تقدم<br>ليس هناك الكثير من الركاب ، والساحر الصغير في المنتصف ، ولا أحد على أي من الجانبين.<br>لذلك لم أنتظر الذروة الخاطئة لتناول الطعام ، ولم أستطع الانتظار لتناولها بعد تلقي الوجبة الخفيفة. </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-04.jpg" alt=""></p><p>قامت أخت كبيرة على اليسار بجوار النافذة بلفها بإحكام ، ولم تأكل أو تشرب أو تذهب إلى الحمام طوال الرحلة.<br>عظيم أيضا </p><h2 id="الكشف-عن-الحمض-النووي-الصعب"><a href="#الكشف-عن-الحمض-النووي-الصعب" class="headerlink" title="الكشف عن الحمض النووي الصعب"></a>الكشف عن الحمض النووي الصعب</h2><p>21:30 مساءً </p><p>تحقق من رمز الاستجابة السريعة قبل النزول<br>ثم نكز أنفه مرة أخرى لاختبار الحمض النووي<br>قال الساحر الصغير أن لديه خبرة بالفعل.<br>قالت ملكة جمال الأخت أن الصين أكثر صرامة ، لذلك أحاول أن أكون أخف </p><p>ثم طعنته في عمق أعمق من سنغافورة ، ثم قلبت أعواد القطن عدة مرات<br>اعتقد الساحر الصغير أن الأمر قد انتهى ، وقام بإيماءة جيدة<br>بشكل غير متوقع ، بعد الانتظار لبضع ثوان ، عادت الآنسة الأخت عدة مرات<br>ثم كسر قطعة القطن ووضعها في أنبوب الاختبار<br>كانت الساحرة الصغيرة على وشك التحدث ، وأخذت الأخت الصغيرة قطعة قطن أخرى<br>واجه فتحة الأنف اليمنى في اتجاه عقارب الساعة ، توقف ، عكس اتجاه عقارب الساعة ، افعل الشيء نفسه </p><p>سحبت الساحرة الصغيرة دموعها وقالت شكرا 🙏<br>بعد كل شيء ، الوقت متأخر من الليل ، الجميع يعمل بجد </p><h2 id="دخول"><a href="#دخول" class="headerlink" title="دخول"></a>دخول</h2><p>22:10 مساءً </p><p>تحقق من استمارة الدخول ، جواز السفر </p><p>انقلب الأخ الصغير على الحدود عبر تأشيرات الساحر الصغير وغير فصلاً.<br>ثم نذكرك بعدم وضع بطاقة الهوية الخاصة بك مع جواز سفرك لأنه قد يكون ممغنطًا </p><p>22:20 مساءً </p><p>لا تنسى العربة أثناء الفحص الأمني </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-06.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-07.jpg" alt=""></div></div></div><p>22:30 مساء </p><p>شنغهاي التحويل والعزلة المحلية والأجنبية </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-13.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-08.jpg" alt=""></div></div></div><h2 id="كابوس"><a href="#كابوس" class="headerlink" title="كابوس"></a>كابوس</h2><p>هذا هو كابوس الرحلة بأكملها<br>نظرًا لوجود عدد كبير جدًا من الرحلات الجوية اليوم ، فإن الحافلة معزولة - عدم التحضير الكافي<br>بدأت انتظار طويل ⌛️ </p><p>00:40 صباحًا<br>تسجيل جواز السفر </p><p>انتظر وانتظر ، الجو بارد في شنغهاي في وقت متأخر من الليل<br>لحسن الحظ ، ساعد صديق من جامعة سنغافورة الوطنية قبل مغادرته في شراء مجموعة من المعدات الدافئة<br>ارتدى الساحر الصغير سترة دافئة ونام واقفا </p><p>2:33 صباحًا<br>انتظر ، استقل الحافلة ، يذكر الموظفون أنه سيتم إعادة جواز السفر إليك في الفندق </p><p>الاهتزاز والاهتزاز في السيارة على السرعة العالية<br>النوم مع المدفأة<br>نزلت من السيارة عالية السرعة وتوقفت ، واستيقظت ووجدت أنه كان علي أن أنتظر في وقت متأخر من الليل 10000 ضوء أحمر. </p><p>توقف وانطلق ، معاناة </p><p>نظرًا لأنه يتم تعيين فندق العزلة بشكل عشوائي ، فإن الفنادق الجيدة باهظة الثمن رخيصة<br>لكن هذه المرة لم يعد بإمكان الساحر الصغير توفير المال ، مجرد التفكير </p><p>يا الله من فضلك خصني فندق أفضل </p><h2 id="انترناشيونال-سبا"><a href="#انترناشيونال-سبا" class="headerlink" title="انترناشيونال سبا"></a>انترناشيونال سبا</h2><p>4:50 صباحا </p><p>وصل أخيرًا إلى فندق العزل<br>نظر الساحر الصغير إلى الأعلى ورأى أنه مبنى مرتفع ، ومن البديهي أن هذا الفندق جيد. </p><p>فتحت الخريطة ووجدتها خمس نجوم<br>منتجع صحي عالمي في شنغهاي </p><p>سرًا سعيدًا<br>لا يوجد ذيل قطب </p><p>لكن الأوزة ما زالت لا تستطيع النزول<br>بحاجة إلى انتظار الحافلات القليلة الأولى لتسجيل الوصول </p><p>5:50 صباحا </p><p>أخيرًا انزل<br>تسجيل معرف جواز السفر </p><ul><li>فندق 350 في اليوم ، يمكنك استخدام Alipay و WeChat و UnionPay وطرق أخرى لتحويل الأموال </li><li>ثلاث وجبات 100 يوم في اليوم ، ولكنها ليست طعام فندق ، ولكنها صندوق غداء خارجي </li><li>يمكنك أيضًا طلب الوجبات الجاهزة بنفسك ، وتوصيل الطعام في الساعة 12 والساعة 6 صباحًا كل يوم. </li><li>يمكن لشركة الشحن استلام البريد فقط وليس البريد </li><li>قم بقياس درجة الحرارة مرتين في اليوم </li><li>يتم غلق أكياس القمامة ووضعها خارج الباب ، وينظف الموظفون الذين يرتدون بدلات كيميائية حيوية لكامل الجسم بانتظام </li></ul><h2 id="تحقق-في"><a href="#تحقق-في" class="headerlink" title="تحقق في"></a>تحقق في</h2><p>6:10 صباحا </p><p>ثم بدأ الساحر الصغير حياة الحجر الصحي لمدة 14 يومًا<br>كانت أمي قلقة من أن يمل الساحر الصغير إذا لم يستطع الخروج<br>ومع ذلك ، كان الساحر الصغير في الأصل منزلًا ، والآن ليس عليه مقابلة أشخاص وفقًا للقانون ، لذلك فهو سعيد جدًا<br>بالإضافة إلى ذلك ، يبدو أنه فندق M الذي أقمت فيه عندما ذهبت لأول مرة إلى سنغافورة </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-09.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/fly-back-to-china-under-covid-19-12.jpg" alt=""></div></div></div><h2 id="الحجر-الصحي-لمدة-14-يوم"><a href="#الحجر-الصحي-لمدة-14-يوم" class="headerlink" title="الحجر الصحي لمدة 14 يوم"></a>الحجر الصحي لمدة 14 يوم</h2><p>بالطبع لا يمكنك أن تأخذ الأمر على محمل الجد أثناء العزلة<br>مقارنة بالسياح الذين قدموا من نفس البلد على طول الطريق بشهادة مزدوجة الين<br>في الفندق المعزول ، سيواجه الناس من مختلف البلدان </p><ul><li>على سبيل المثال ، في 20 كانون الأول (ديسمبر) <a href="https://www.zaobao.com.sg/znews/singapore/story20201220-1110087">تم قبول 13 شخصًا في العزل وتأكيد الإصابة بمرض الشريان التاجي</a> </li><li>هناك أيضًا 14 شخصًا يصابون بالمرض في اليوم السادس عشر بعد انتهاء الحجر الصحي </li><li>14 + 7 المراقبة الطبية في بكين </li><li>70٪ زيادة في العدوى من المتغيرات الجديدة لفيروس كورونا البريطاني </li><li>… </li></ul><p>لذلك من ناحية ، افتح النوافذ - التهوية لضمان دوران الهواء وتقليل تركيز الفيروس<br>بالمقابل اغسل يديك بشكل متكرر 🧽 ، لا تلين عينيك وأنفك 👀👃 ، ارتدي الكمامة بصدق </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;لم يتحسن الوضع الوبائي العالمي في المتاحف الجديدة في نهاية عام 2020&lt;br&gt;ومع حلول فصل الشتاء ، تظهر تدريجياً علامات على اندلاع جديد&lt;br&gt;لكن مؤخرًا يحتاج الساحر الصغير للعودة إلى المنزل&lt;br&gt;على الرغم من أنه تم تطعيم العديد من اللقاحات حول العالم &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;الشركة&lt;/th&gt;
&lt;th&gt;النوع&lt;/th&gt;
&lt;th&gt;الجرعة&lt;/th&gt;
&lt;th&gt;الفعالية&lt;/th&gt;
&lt;th&gt;التخزين ℃&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;BioNTech / Pfizer&lt;/td&gt;
&lt;td&gt;مرنا&lt;/td&gt;
&lt;td&gt;x2&lt;/td&gt;
&lt;td&gt;95٪&lt;/td&gt;
&lt;td&gt;-70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;حديث&lt;/td&gt;
&lt;td&gt;مرنا&lt;/td&gt;
&lt;td&gt;x2&lt;/td&gt;
&lt;td&gt;95٪&lt;/td&gt;
&lt;td&gt;-20&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;أكسفورد / أسترازينيكا&lt;/td&gt;
&lt;td&gt;ناقل الفيروسات الغدية&lt;/td&gt;
&lt;td&gt;x2&lt;/td&gt;
&lt;td&gt;62-90٪&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;لكنها لا تزال تتطلب 14 يومًا من العزلة للعودة إلى المنزل &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Covid" scheme="https://leihao0.github.io/ar/tags/covid/"/>
    
  </entry>
  
  <entry>
    <title>كيفية فتح حساب في الأسهم الأمريكية</title>
    <link href="https://leihao0.github.io/ar/how-to-buy-us-stocks/"/>
    <id>https://leihao0.github.io/ar/how-to-buy-us-stocks/</id>
    <published>2020-11-05T15:00:03.000Z</published>
    <updated>2020-12-22T00:32:16.907Z</updated>
    
    <content type="html"><![CDATA[<p>إحالة الرمز “0CM1QE” </p><p>الانتخابات الأمريكية في هذين اليومين<br>ككرات ، لا تشاركها بسبب فارق التوقيت.<br>استيقظ في منتصف الليل وأقطع اللحم<br>الآن نرى 🚀 يرتفع بشكل عام ، ولكن لا يجرؤ على دخول السوق بالحرج </p><p>ما عليك سوى مشاركة الرحلة المحزنة لفتح حساب في ذلك الوقت </p><a id="more"></a><h2 id="الوساطة-في-الولايات-المتحدة"><a href="#الوساطة-في-الولايات-المتحدة" class="headerlink" title="الوساطة في الولايات المتحدة"></a>الوساطة في الولايات المتحدة</h2><p>نظرًا لأن العديد من شركات السمسرة الأمريكية معفاة من العمولات ، لذلك انظر أولاً </p><ul><li>Robinhood (واجهة مستخدم أفضل) </li><li>TD Ameritrade (علامة تجارية قديمة) </li><li>Firstrade (خدمة العملاء الصينية) </li></ul><p>Robinhood نظرًا لأنه يمكن للطرفين إرسال الأسهم عند دعوتي ، فقد طلبت من أصدقائي في الولايات المتحدة الحصول على الرمز ، ثم ذهبت إلى الموقع الرسمي ووجدت أنه لا يمكن تقديمه إلا داخل الولايات المتحدة …<br>لدى TD Ameritrade SG وموقعًا إلكترونيًا ، لكنني لا أعرف كيف أعلق في الخطوة الأخيرة بعد إرسال المعلومات. لم يراجع أحد البريد الإلكتروني في الماضي.<br>Firstrade ، غير الأمريكيين ساعدوا تلقائيًا في إرسال نموذج الإعفاء الضريبي. بعد إرسال المعلومات ، تم فتح الحساب أخيرًا بعد بضعة أيام عمل ، ثم اكتشفوا أن الإيداع يمكن أن يكون فقط ACH ، شيك ، Wire Trannsfer </p><p>يحتاج كل من ACH و Check إلى تحويل الأموال إلى حسابي المصرفي بالولايات المتحدة ، لذلك بالتأكيد لا<br>هناك رسوم أخرى على Wire Trannsfer </p><h2 id="الوساطة-في-سنغافورة"><a href="#الوساطة-في-سنغافورة" class="headerlink" title="الوساطة في سنغافورة"></a>الوساطة في سنغافورة</h2><p>ثم بحثت في سنغافورة ووجدت أن هؤلاء الأشخاص قد ذهبوا بالفعل إلى حساب تداول بنك UOB أو DBS<br>سمعت فقط أن رسوم المناولة باهظة الثمن ولا تستحق ذلك </p><h2 id="السمسرة-المحلية"><a href="#السمسرة-المحلية" class="headerlink" title="السمسرة المحلية"></a>السمسرة المحلية</h2><p>حسنًا ، ذهبت في الجوار وعدت … </p><ul><li>نمر Xiaomi </li><li>فوتو تينسنت </li><li>كرة الثلج </li></ul><p>أنا سعيد 🐯 دعم فتح حساب سنغافورة ، نعم </p><ul><li>الأسهم الأمريكية ، أسهم هونج كونج ، الأسهم السنغافورية ، الأسهم الأسترالية … </li><li>دعم ما قبل السوق ، والعقود الآجلة </li><li>رافعة </li></ul><p>لقد خططت في الأصل لتحميل جواز السفر ومعلومات أخرى ، على أي حال أعددتها من قبل<br>اتضح أن مصادقة Singpass مدعومة ، وقمت بالنقر والقفز ذهابًا وإيابًا ، وتمت مصادقتها … </p><p>علم الله أن الأمر سهل للغاية<br>هل فتحته العام الماضي؟ </p><p>خلاف ذلك ، فقد سبق عدة مرات<br>أو قفزت بالفعل من السطح </p><h2 id="رسوم-التحويل"><a href="#رسوم-التحويل" class="headerlink" title="رسوم التحويل"></a>رسوم التحويل</h2><p>لأنني لا (أجرؤ) على شراء الخيارات<br>هناك ثلاث نفقات إضافية للتداول العادي </p><ul><li>شراء 2 \ $ </li><li>0.1٪ من إجمالي المخزون </li><li>بيع 2 \ دولار </li></ul><p>لذلك حتى لو كنت ترافق كل ملابسك الداخلية ، ستكون 🐯 ممتلئة </p><h2 id="إحالة-الكود"><a href="#إحالة-الكود" class="headerlink" title="إحالة الكود"></a>إحالة الكود</h2><p>يمكنك استخدام الكود الخاص بي “0CM1QE” </p><p>أعتقد أن النشاط الحالي هو كلا الجانبين </p><ul><li>5 عمولات مجانية </li><li>اشحن 2000SGD لتحصل على 30SGD ، 3W لتحصل على 100SGD </li></ul><p>حسنًا ، ليست هناك رغبة في الرجوع على الإطلاق<br>أتذكر أنني كنت أتخلى عن حصة من أسهم علي ، فهل يمكن أن تكون مرتفعة للغاية الآن؟ </p><h2 id="نسخة-طبق-الأصل"><a href="#نسخة-طبق-الأصل" class="headerlink" title="نسخة طبق الأصل"></a>نسخة طبق الأصل</h2><p>دعونا نلقي نظرة على طفرة سوق الأسهم العالمية في اليومين الماضيين ، كنت خائفة في الليل خوفا من عدم القدرة على النوم. كان لدي بطاقة تقرير بعد العملية الشرسة. </p><p><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/how-to-buy-us-stocks.jpeg" alt=""></p><p>إذن ماذا تنتظر ، قم بالتسجيل </p><p>أنا في انتظارك على السطح <del>~</del> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;إحالة الرمز “0CM1QE” &lt;/p&gt;
&lt;p&gt;الانتخابات الأمريكية في هذين اليومين&lt;br&gt;ككرات ، لا تشاركها بسبب فارق التوقيت.&lt;br&gt;استيقظ في منتصف الليل وأقطع اللحم&lt;br&gt;الآن نرى 🚀 يرتفع بشكل عام ، ولكن لا يجرؤ على دخول السوق بالحرج &lt;/p&gt;
&lt;p&gt;ما عليك سوى مشاركة الرحلة المحزنة لفتح حساب في ذلك الوقت &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Stock" scheme="https://leihao0.github.io/ar/tags/stock/"/>
    
      <category term="Broker" scheme="https://leihao0.github.io/ar/tags/broker/"/>
    
  </entry>
  
  <entry>
    <title>ما هو الغرض من بايثون</title>
    <link href="https://leihao0.github.io/ar/What-is-Python-Used-for/"/>
    <id>https://leihao0.github.io/ar/What-is-Python-Used-for/</id>
    <published>2020-09-15T03:17:56.000Z</published>
    <updated>2020-12-22T00:32:16.906Z</updated>
    
    <content type="html"><![CDATA[<h1 id="كيفية-استخدام-بايثون-في-العالم-الحقيقي"><a href="#كيفية-استخدام-بايثون-في-العالم-الحقيقي" class="headerlink" title="كيفية استخدام بايثون في العالم الحقيقي"></a>كيفية استخدام بايثون في العالم الحقيقي</h1><p>** Python ** هي واحدة من أشهر لغات البرمجة في العالم. </p><p>حتى أن معظم الجامعات الأمريكية الكبرى تستخدم لغة Python في دورات الترميز التمهيدية الخاصة بها: قم بتعليم الطلاب استخدام Python لإنشاء ألعاب بسيطة ، وتحليل المعلومات من صفحات الويب ، وحتى إجراء معالجة اللغة! </p><p>ومع ذلك ، غالبًا ما يرغب العديد من الآباء والطلاب في معرفة كيفية استخدام Python فعليًا في الشركة أو في مجالات مختلفة؟ </p><p>تابع القراءة للتعرف على كيفية قيام ** Python ** بإدارة ** الصناعة الرائدة اليوم وتلعب دورًا مهمًا في العديد من تخصصات علوم الكمبيوتر. ** </p><a id="more"></a><h2 id="لماذا-تختار-بايثون؟"><a href="#لماذا-تختار-بايثون؟" class="headerlink" title="لماذا تختار بايثون؟"></a>لماذا تختار بايثون؟</h2><p>[Python](<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjm_mxTource=">https://junilearning.com/blog/guide/what-is-python-101-for-students/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjm_mxTource=</a> ** و ** لغة الترميز العالمية ** - هذا يعني أنه من الأسهل فهمها ويمكن استخدامها لحل مجموعة متنوعة من المشكلات! </p><p>من خلال تركيبها البسيط وقابليتها العالية للقراءة واستخدامها على نظام التشغيل بالكامل ، تعد Python لغة قيمة يمكن استخدامها للتعلم والاستخدام في تطبيقات مختلفة. </p><p>! <a href="https://images.ctfassets.net/mrop88jh71hl/70P7f6p7J1Bk4VY8GDzm95/58d544a1044609e94a001523d9583f22/python-code-application.jpeg">كود بايثون على الشاشة. </a> </p><p>مثال على كود Python على شاشة المهندس. </p><p>لذلك ، ليس من المستغرب أن بايثون ليست فقط منتشرة في سوق العمل اليوم ، ولكن أيضًا في التقنيات الشائعة التي نستخدمها كل يوم. </p><p>** برمجة Python ** هي مهارة يمكن استخدامها في أي صناعة تقريبًا ، ويتجاوز دورها تطوير البرامج. من صناعات مثل ** التمويل والرعاية الصحية ** و ** التأمين ** ، مثل المجال ** الطيران ** إلى ** الترفيه ** - [التكنولوجيا المستندة إلى Python](<a href="https://appdevelopermagazine.com/ten">https://appdevelopermagazine.com/ten</a> -industries-using-python-programme /) لتعزيز ** الابتكار والحلول الجديدة **. </p><p>في دليل “<a href="https://junilearning.com/blog/guide/what-is-python-101-for-students/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBUcllDiUMXX9ACqjMEHBUcllDiUMXX9ACqjMEHBXFX9">ما هو Python 101”</a> ، قدمنا ​​Python وبعض المجالات التي تستخدمها Python ، مثل ** التكنولوجيا ** و ** التمويل ** و ** التكنولوجيا الحيوية **. لكن في هذه المقالة ، سوف نتعمق أكثر في مجموعة واسعة من استخدامات Python - خاصة في المجالات التالية: </p><ul><li><strong>تطوير الشبكة</strong> </li><li>** علم البيانات ** </li><li><strong>التعلم الالي</strong> </li><li><strong>الذكاء الاصطناعي</strong> </li></ul><h2 id="تطبيقات-بايثون"><a href="#تطبيقات-بايثون" class="headerlink" title="تطبيقات بايثون"></a>تطبيقات بايثون</h2><h3 id="تطوير-الشبكة"><a href="#تطوير-الشبكة" class="headerlink" title="تطوير الشبكة"></a>تطوير الشبكة</h3><p>على الرغم من أن HTML و CSS و Javascript قد تكون أدوات شائعة ** لتطوير الويب ** ، إلا أن Python تعد أيضًا خيارًا جيدًا. </p><p>[تطوير الويب](<a href="https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before">https://careerfoundry.com/en/blog/web-development/what-does-it-take-to-become-a-web-developer-everything-you-need-to-know-before</a> -getting-started /) يشير إلى بناء مواقع الويب على الإنترنت من صفحات النص العادي الثابت إلى مواقع التجارة الإلكترونية الديناميكية وتطبيقات الإنترنت التفاعلية. </p><p>يعد الترميز ضروريًا لتطوير الويب لبناء وظائف الموقع وتحسين تجربة المستخدم والتأكد من تنظيم المعلومات بشكل صحيح. أصبحت أطر عمل الويب مثل Python’s ** Django ** و ** Flask ** اختيارات شائعة لتطوير مواقع الويب. </p><p>! <a href="https://images.ctfassets.net/mrop88jh71hl/6prH9NRKgybllrNcEqeCBy/c7fbc7b6960e8f94efb9eaa0b70a97d2/python-web-development-applications.png">تُستخدم بايثون لإنشاء صفحات الويب. </a> </p><p>تعد Python اختيارًا ممتازًا لتطوير الويب الخلفي وتستخدمها الآن العديد من الشركات. </p><p>تمكّن أطر عمل المصدر المفتوح هذه المستخدمين من إنشاء تطبيقات الويب بشكل أكثر كفاءة لأن Python لديها القدرة على معالجة كميات كبيرة من البيانات وأتمتة المهام. في الواقع ، ** Instagram ** و ** Pinterest ** و ** Google ** كلها في [تطوير الويب الخلفي](<a href="https://learn.onemonth.com/10-famous-websites-built">https://learn.onemonth.com/10-famous-websites-built</a> -using-python /) يستخدم Python. </p><h3 id="علم-البيانات"><a href="#علم-البيانات" class="headerlink" title="علم البيانات"></a>علم البيانات</h3><p>في [Data Science](<a href="https://junilearning.com/blog/guide/coding-and-data-science/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCj=&amp;MxTgc؟utm_utm">https://junilearning.com/blog/guide/coding-and-data-science/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCj=&amp;MxTgc؟utm_utm</a> analysis and data_utm_utm analysis and data ](<a href="https://junilearning.com/blog/guide/coding-and-data-science/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc؟">https://junilearning.com/blog/guide/coding-and-data-science/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc؟</a> </p><p>في عصر ** البيانات الكبيرة ** ، كثيرًا ما نتعامل مع البيانات في الحياة اليومية من خلال التنقل (GPS) والتسوق عبر الإنترنت واستخدام الطاقة والأجهزة القابلة للارتداء مثل الساعات الذكية. </p><p>في المتوسط ​​، تحتوي كل أسرة على [11 جهازًا](<a href="https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should">https://variety.com/2019/digital/news/us-households-have-an-average-of-11-connected-devices-and-5g-should</a> -دفع-that-even-above-1203431225 /) وهذا الرقم قد يزيد في المستقبل! مع وجود العديد من الأجهزة ، تحتاج الشركات إلى معالجة كميات كبيرة من البيانات لتقديم الخدمات. </p><p>! <a href="https://images.ctfassets.net/mrop88jh71hl/3XS43f9pqDhRuft9GdnvZq/2d0513d9f0079c572923a49cd214add5/python-data-analysis-applications.png">وصف عملية بايثون لتحليل البيانات</a> </p><p>غالبًا ما تُستخدم الأدوات المستندة إلى Python لتصور كميات كبيرة من البيانات ومعالجتها وتحليلها. </p><p>** علم البيانات ** يتضمن معالجة البيانات واستنتاج الاتجاهات ** - Python ** مفيدة جدًا في هذا المجال لأنها تحتوي على حزم كثيفة مثل ** scipy ** و ** numpy ** و ** pandas **. </p><p>بالإضافة إلى ذلك ، يمكن استخدام حزمة البرامج ** matplotlib ** لإنشاء تصورات للبيانات. هذا يجعل Python خيارًا شائعًا في مجالات مثل ** المعلوماتية الحيوية ** ، والتي تتضمن أيضًا كميات كبيرة من البيانات والنمذجة. </p><p>أصبحت هذه الأدوات المستندة إلى Python شائعة بسبب سهولة استخدامها وقابليتها للتوسع. على سبيل المثال ، تستخدم <a href="https://www.edureka.co/blog/how-netflix-uses-python/#hownetflixusespython">Netflix</a> ** scipy ** و ** numpy ** للحسابات الرقمية لإدارة المستخدمين عبر الأنظمة الأساسية تدفق. </p><p>▶ ** جرب: ** [Advanced Data Science and Python Tutorial](<a href="https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcll">https://junilearning.com/blog/coding-projects/python-data-science-monte-carlo-simulations/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcll</a> = gf &amp; utm_medium = what_is_python_used_for &amp; utm_campaign = outreach) </p><h3 id="التعلم-الالي"><a href="#التعلم-الالي" class="headerlink" title="التعلم الالي"></a>التعلم الالي</h3><p>من خلال تحليل كمية كبيرة من البيانات ، ** التعلم الآلي ** [الخوارزمية](<a href="https://junilearning.com/blog/guide/what-are-algorithms/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXTfCj">https://junilearning.com/blog/guide/what-are-algorithms/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXTfCj</a> هل تم العثور على beJMx9ACqjMEHBXTfCj؟ نمط وتطبيقه على السلوك المستقبلي. </p><p>الاستخدام الأكثر وضوحًا للتعلم الآلي في المنتجات هو أنظمة التوصية. تجمع شركات مثل ** Netflix ** و ** Spotify ** و ** Youtube ** سلوك المستخدم للتنبؤ بقوائم التشغيل ومقاطع الفيديو واقتراحها. </p><p>** Scikit-Learn ** و ** Tensorflow ** هما مكتبات Python التي يمكن استخدامها للخوارزميات لتصنيف مجموعات البيانات الكبيرة وتجميعها وانحدارها. إن الأداء العالي والمجموعة الواسعة من وظائف هذه المكتبات تجعلها ضرورية في أي استكشاف للتعلم الآلي. </p><p>▶ ** اعرف المزيد: ** [أهمية خوارزميات الأطفال](<a href="https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXTX">https://junilearning.com/blog/guide/importance-of-algorithms-for-kids/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXTX</a> what_is_python_used_for &amp; utm_campaign = outreach) </p><h3 id="الذكاء-الاصطناعي"><a href="#الذكاء-الاصطناعي" class="headerlink" title="الذكاء الاصطناعي"></a>الذكاء الاصطناعي</h3><p>التعلم الآلي هو في الواقع جانب واحد فقط من ** الذكاء الاصطناعي **. يشير AI إلى ذكاء الآلات وتطوير أنظمة الكمبيوتر لأداء المهام الموجهة نحو الإنسان مثل الإدراك أو اتخاذ القرار. </p><p>من الأمثلة البارزة على الذكاء الاصطناعي تطبيقات حجز الركاب ، مثل ** Uber ** و ** Lyft **. </p><p>! <a href="https://images.ctfassets.net/mrop88jh71hl/dlvfPv6HAIV4YaMb1TRCl/88739612a93476c94733255a94a567d7/python-artstract-intelligence-in-ride-sharing.png">بيثون توضيح للذكاء الاصطناعي المستخدم في تطبيقات استخدام السيارات. </a> </p><p>تُستخدم لغة Python في الذكاء الاصطناعي لتطبيقات مثل Lyft أو Uber. يمكن لنظام الذكاء الاصطناعي بعد ذلك التنبؤ بأشياء مثل احتياجات المستخدم والوقت المقدر للوصول. </p><p>تستخدم Uber الذكاء الاصطناعي ** للتنبؤ باحتياجات المستخدم ** و ** الوقت المقدر للوصول ** (وميزات أخرى) ، ومعظمها من خلال [Python](<a href="https://eng.uber.com/uber-ai-blog">https://eng.uber.com/uber-ai-blog</a> -2019 /) اكتمل. </p><p>بالإضافة إلى بعض مكتبات Python المذكورة أعلاه ، يمكن أيضًا استخدام مكتبات أخرى مثل ** keras ** و ** pytorch ** لإنشاء وظائف الذكاء الاصطناعي (مثل النماذج التنبؤية والشبكات العصبية). </p><h2 id="بايثون-في-كل-مكان"><a href="#بايثون-في-كل-مكان" class="headerlink" title="بايثون في كل مكان!"></a>بايثون في كل مكان!</h2><p>من بين لغات البرمجة الشائعة ، تعد Python واحدة من أكثر اللغات تنوعًا في تطبيقاتها. بالإضافة إلى ذلك ، فقد تم دمجها بعمق معنا ومع الشركات الرائدة اليوم. </p><p>تشمل المهن التي تتضمن Python ** مهندس برمجيات ، مطور ويب ، عالم بيانات ، مدير منتج ، محلل أعمال ** ، إلخ. بغض النظر عن الصناعة ، تعتمد الشركات في هذا العصر التكنولوجي على اتخاذ القرارات التي تعتمد على البيانات ، و Python هي الأداة المثالية للقيام بذلك. </p><p>إذا كنت أنت أو أطفالك مهتمين بالمجالات أو الأدوار المذكورة أعلاه ، فإن تعلم بايثون يعد اختيارًا جيدًا! </p><h2 id="تريد-أن-تصبح-مبرمج-بايثون؟"><a href="#تريد-أن-تصبح-مبرمج-بايثون؟" class="headerlink" title="تريد أن تصبح مبرمج بايثون؟"></a>تريد أن تصبح مبرمج بايثون؟</h2><p>تتمثل إحدى أكبر مزايا Python في مساعدة المبرمجين الجدد على تعلم المفاهيم الأساسية والتعرف على البرمجة! للمبرمجين الجدد من جميع الأعمار ، هناك أيضًا العديد من الموارد لتعلم Python على نطاق واسع. </p><h3 id="دروس-بايثون-للأطفال"><a href="#دروس-بايثون-للأطفال" class="headerlink" title="دروس بايثون للأطفال"></a>دروس بايثون للأطفال</h3><p>! <a href="https://images.ctfassets.net/mrop88jh71hl/2dK37wFC5SF8HNKm4nGmqr/c256e7002d196ea54e4c10817a68f8a7/learning-python-with-juni.png">مدرب جوني يستخدم بايثون. </a> </p><p>يقوم المدرب جوني بتدريس لغة بايثون الأساسية لطالب صغير. </p><p>في Juni Learning ، بمساعدة معلمي البرمجة ذوي الخبرة ، سنعلم المبرمجين الشباب [تدريس لغة Python](<a href="https://junilearning.com/coding/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACutjMEHBXfCjJMxT=">https://junilearning.com/coding/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACutjMEHBXfCjJMxT=</a> gf &amp; utm_medium = what_is_python_used_for &amp; utm_campaign = outreach). من ** ترسيخ أساس الترميز إلى بناء الخوارزميات وتحليل مجموعات البيانات ** ، تستكشف هذه الدورات العديد من التطبيقات المختلفة لبايثون وتعلم الطلاب كيفية إنشاء مشاريع الترميز الخاصة بهم. </p><p>اقرأ المزيد عن [الترميز بالطبع](<a href="https://junilearning.com/coding/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc؟utm_source=gf&amp;utm_medium=ed_is=_python_us">https://junilearning.com/coding/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc؟utm_source=gf&amp;utm_medium=ed_is=_python_us</a> ومزيد من المعلومات حول الوصول إلى [HTTPS: // حملة] [<a href="https://junilearning.com/coding/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc؟">https://junilearning.com/coding/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc؟</a> انضم.junilearning.com/) تعرف على الدورة التدريبية الأفضل لرحلة البرمجة لطفلك مع فريق القبول لدينا. </p><hr><p><em>This</em> <a href="https://junilearning.com/blog/guide/what-is-python-used-for-major-industries/؟fbclid=IwAR2B-DsUCsJJo8_VkKQ87k0iyQeXJhBUcllDiUMXX9ACqjMEHBXfCjJMxTc؟utm_source=gf&utm_medium=what_is_python_used_for&utm_campaign=outreach"> <em>article</em> </a> ظهر <em>originally on</em> <a href="https://junilearning.com/؟utm_source=gf&utm_medium=what_is_python_used_for&utm_campaign=outreach"> <em>junilearning.com</em></a>. </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;كيفية-استخدام-بايثون-في-العالم-الحقيقي&quot;&gt;&lt;a href=&quot;#كيفية-استخدام-بايثون-في-العالم-الحقيقي&quot; class=&quot;headerlink&quot; title=&quot;كيفية استخدام بايثون في العالم الحقيقي&quot;&gt;&lt;/a&gt;كيفية استخدام بايثون في العالم الحقيقي&lt;/h1&gt;&lt;p&gt;** Python ** هي واحدة من أشهر لغات البرمجة في العالم. &lt;/p&gt;
&lt;p&gt;حتى أن معظم الجامعات الأمريكية الكبرى تستخدم لغة Python في دورات الترميز التمهيدية الخاصة بها: قم بتعليم الطلاب استخدام Python لإنشاء ألعاب بسيطة ، وتحليل المعلومات من صفحات الويب ، وحتى إجراء معالجة اللغة! &lt;/p&gt;
&lt;p&gt;ومع ذلك ، غالبًا ما يرغب العديد من الآباء والطلاب في معرفة كيفية استخدام Python فعليًا في الشركة أو في مجالات مختلفة؟ &lt;/p&gt;
&lt;p&gt;تابع القراءة للتعرف على كيفية قيام ** Python ** بإدارة ** الصناعة الرائدة اليوم وتلعب دورًا مهمًا في العديد من تخصصات علوم الكمبيوتر. ** &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://leihao0.github.io/ar/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>كيفية تنظيف الغبار والمراوح لجهاز MacBook</title>
    <link href="https://leihao0.github.io/ar/How-to-Clean-MacBook-Dust-Fan/"/>
    <id>https://leihao0.github.io/ar/How-to-Clean-MacBook-Dust-Fan/</id>
    <published>2020-09-10T08:46:44.000Z</published>
    <updated>2020-12-22T00:32:16.906Z</updated>
    
    <content type="html"><![CDATA[<h2 id="إذا-كان-kernel-task-يستخدم-نسبة-كبيرة-من-وحدة-المعالجة-المركزية-لنظام-Mac"><a href="#إذا-كان-kernel-task-يستخدم-نسبة-كبيرة-من-وحدة-المعالجة-المركزية-لنظام-Mac" class="headerlink" title="إذا كان kernel_task يستخدم نسبة كبيرة من وحدة المعالجة المركزية لنظام Mac"></a>إذا كان kernel_task يستخدم نسبة كبيرة من وحدة المعالجة المركزية لنظام Mac</h2><p>لقد لاحظت من قبل أن “kernel_task” سيكون عالقًا بنسبة 100٪ عند كل منعطف ، ولكنه عملية “نظام” ، ولا توجد طريقة </p><p>根据  的 文档 <a href="https://support.apple.com/en-us/HT207359">إذا كان kernel_task يستخدم نسبة كبيرة من وحدة المعالجة المركزية لنظام التشغيل Mac الخاص بك</a> </p><blockquote><p>بمعنى آخر ، يستجيب kernel_task للظروف التي تتسبب في جعل ** وحدة المعالجة المركزية الخاصة بك شديدة السخونة ** ، حتى لو لم يكن جهاز Mac الخاص بك يشعر بالسخونة. لا يسبب في حد ذاته تلك الظروف. عندما تنخفض درجة حرارة وحدة المعالجة المركزية ، فإن kernel_task يقلل نشاطها تلقائيًا. </p></blockquote><p>هذا لأن وحدة المعالجة المركزية ساخنة جدًا حتى لو كنت تعتقد أنها ليست ساخنة 🥶 … </p><p>بالإضافة إلى ذلك ، “kernel_task” ليس الجاني. عندما لا تكون وحدة المعالجة المركزية ساخنة ، سينخفض ​​معدل الإشغال تلقائيًا … </p><a id="more"></a><p>لقد وجدت أيضًا أنه لا ينبغي أن يكون على اليسار الشحن 🔋 ، صدق ذلك </p><h3 id="إليك-سبب-عدم-شحن-MacBook-Pro-على-الجانب-الأيسر-https-www-digitaltrends-com-computing-why-you-shouldnt-charge-macbook-pro-left-side-text-بينما٪-20charging٪-20the٪-20MacBook٪-20Pro-،-استخدم٪-20the٪-20right٪-2Dhand٪-20ports"><a href="#إليك-سبب-عدم-شحن-MacBook-Pro-على-الجانب-الأيسر-https-www-digitaltrends-com-computing-why-you-shouldnt-charge-macbook-pro-left-side-text-بينما٪-20charging٪-20the٪-20MacBook٪-20Pro-،-استخدم٪-20the٪-20right٪-2Dhand٪-20ports" class="headerlink" title="[إليك سبب عدم شحن MacBook Pro على الجانب الأيسر](https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text = بينما٪ 20charging٪ 20the٪ 20MacBook٪ 20Pro ، استخدم٪ 20the٪ 20right٪ 2Dhand٪ 20ports.)"></a>[إليك سبب عدم شحن MacBook Pro على الجانب الأيسر](<a href="https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text">https://www.digitaltrends.com/computing/why-you-shouldnt-charge-macbook-pro-left-side/#:~:text</a> = بينما٪ 20charging٪ 20the٪ 20MacBook٪ 20Pro ، استخدم٪ 20the٪ 20right٪ 2Dhand٪ 20ports.)</h3><blockquote><p>أثناء شحن جهاز MacBook Pro وتوصيل الأجهزة الطرفية بالمنافذ اليسرى ، يمكن أن تصبح منافذ الجهاز ساخنة ؛ لسبب ما ، يمكن أن يؤدي هذا إلى جعل kernel_task يتحول إلى حد ما واستخدام قدر كبير من موارد النظام. </p></blockquote><p>ولكن بعد التبديل إلى “الشحن” الصحيح بعد بضعة أيام ، أصبحت النسبة 100٪ بعد فترة </p><p>اليأس… </p><p>تساءلت فجأة عما إذا كان ذلك بسبب الحاجة إلى التنظيف </p><h2 id="كيفية-تنظيف-MacBook-Dust-amp-Fan"><a href="#كيفية-تنظيف-MacBook-Dust-amp-Fan" class="headerlink" title="كيفية تنظيف MacBook Dust &amp; Fan"></a>كيفية تنظيف MacBook Dust &amp; Fan</h2><p>استغرق الأمر من Google لمعرفة أنه يمكنك تفكيكها بنفسك<br>ماين عبارة عن دفتر ملاحظات مدته 16 عامًا ، وهو مضمون<br>不然 根据 <a href="https://www.apple.com/legal/warranty/products/embedded-mac-warranty-rest-of-apac-english.html">ضمان Mac</a><br>إذا قمت بتفكيكها بنفسك ، يجب أن تفقدها </p><blockquote><p>لا يسري هذا الضمان: </p><ul><li>(ج) الضرر الناجم عن استخدام مكون أو منتج تابع لجهة خارجية لا يتوافق مع مواصفات منتج Apple </li></ul></blockquote><h3 id="أدوات-🔧"><a href="#أدوات-🔧" class="headerlink" title="أدوات 🔧"></a>أدوات 🔧</h3><ul><li>برغي خماسي ، سكين </li><li>كرة السخام ، فرشاة صغيرة </li><li>بطاقة ائتمان مهجورة 💳 </li></ul><h3 id="خطوة"><a href="#خطوة" class="headerlink" title="خطوة"></a>خطوة</h3><ol><li>انفك </li><li>قم بعمل شق صغير على الجانب </li><li>أدخل بطاقة الائتمان غير المستخدمة وحركها في اتجاه السهم الأزرق <ol><li>سوف تسمع نقرة </li><li>في الشكل 2 يمكنك أن ترى أن هناك أربعة أبازيم في الخط الأفقي الأوسط </li><li>بدلاً من كسر شيء ما (أتمنى ذلك 😓) </li></ol></li><li>استخدم بشكل متماثل على اليمين للشريحة </li><li>ثم اضغط على السهم الأحمر لسحبه أفقيًا <ol><li>الشكل 2 يمكن رؤية فتحة البطاقة فوق المروحة </li><li>القوة أفقيًا ، اسحب اليسار واليمين ↔️ قليلاً بشكل متماثل </li></ol></li><li>الغطاء الخلفي مفتوح </li></ol><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-3.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-0.jpg" alt=""></div></div></div><p>حقا قذرة </p><div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-1.jpg" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/clean-macbook-2.jpg" alt=""></div></div></div><p>بعد تنظيف الغبار ، لا تظهر “kernel_task” كثيرًا ، ويتم إحياء 💻 أيضًا<br>أشعر على الفور أن الكمبيوتر المحمول لمدة 16 عامًا يمكن استخدامه لمدة 5 سنوات </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;إذا-كان-kernel-task-يستخدم-نسبة-كبيرة-من-وحدة-المعالجة-المركزية-لنظام-Mac&quot;&gt;&lt;a href=&quot;#إذا-كان-kernel-task-يستخدم-نسبة-كبيرة-من-وحدة-المعالجة-المركزية-لنظام-Mac&quot; class=&quot;headerlink&quot; title=&quot;إذا كان kernel_task يستخدم نسبة كبيرة من وحدة المعالجة المركزية لنظام Mac&quot;&gt;&lt;/a&gt;إذا كان kernel_task يستخدم نسبة كبيرة من وحدة المعالجة المركزية لنظام Mac&lt;/h2&gt;&lt;p&gt;لقد لاحظت من قبل أن “kernel_task” سيكون عالقًا بنسبة 100٪ عند كل منعطف ، ولكنه عملية “نظام” ، ولا توجد طريقة &lt;/p&gt;
&lt;p&gt;根据  的 文档 &lt;a href=&quot;https://support.apple.com/en-us/HT207359&quot;&gt;إذا كان kernel_task يستخدم نسبة كبيرة من وحدة المعالجة المركزية لنظام التشغيل Mac الخاص بك&lt;/a&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;بمعنى آخر ، يستجيب kernel_task للظروف التي تتسبب في جعل ** وحدة المعالجة المركزية الخاصة بك شديدة السخونة ** ، حتى لو لم يكن جهاز Mac الخاص بك يشعر بالسخونة. لا يسبب في حد ذاته تلك الظروف. عندما تنخفض درجة حرارة وحدة المعالجة المركزية ، فإن kernel_task يقلل نشاطها تلقائيًا. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;هذا لأن وحدة المعالجة المركزية ساخنة جدًا حتى لو كنت تعتقد أنها ليست ساخنة 🥶 … &lt;/p&gt;
&lt;p&gt;بالإضافة إلى ذلك ، “kernel_task” ليس الجاني. عندما لا تكون وحدة المعالجة المركزية ساخنة ، سينخفض ​​معدل الإشغال تلقائيًا … &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Macbook" scheme="https://leihao0.github.io/ar/tags/macbook/"/>
    
  </entry>
  
  <entry>
    <title>Python vs Java للأطفال</title>
    <link href="https://leihao0.github.io/ar/Python-vs-Java-for-Kids/"/>
    <id>https://leihao0.github.io/ar/Python-vs-Java-for-Kids/</id>
    <published>2020-08-12T05:33:04.000Z</published>
    <updated>2020-12-22T00:32:16.906Z</updated>
    
    <content type="html"><![CDATA[<p><em>The</em> <a href="https://junilearning.com/blog/guide/python-vs-java/"><em>Article</em></a> _ ظهرت في الأصل في _ <a href="https://junilearning.com/"><em>junilearning.com</em></a> </p><h1 id="Python-و-Java-الاستخدام-والأداء-والتعلم"><a href="#Python-و-Java-الاستخدام-والأداء-والتعلم" class="headerlink" title="Python و Java: الاستخدام والأداء والتعلم"></a>Python و Java: الاستخدام والأداء والتعلم</h1><p>في مجال علوم الكمبيوتر ، هناك العديد من لغات البرمجة ، ولا تتفوق لغة واحدة على لغة أخرى. بعبارة أخرى ، ** كل لغة هي الأفضل لحل مشاكل معينة *<em>. في الواقع ، بالنسبة لمشروع برمجة معين ، لا توجد عادة لغة واحدة أفضل للاختيار من بينها. لذلك ، بالنسبة للطلاب الذين يرغبون في تطوير البرامج أو حل المشكلات المثيرة للاهتمام من خلال التعليمات البرمجية ، من المهم جدًا أن يكون لديهم أساس قوي في علوم الكمبيوتر *</em> ينطبق على أي لغة برمجة **. </p><a id="more"></a><p>تميل لغات البرمجة إلى مشاركة خصائص معينة في طريقة عملها ، على سبيل المثال ، في التعامل مع استخدام الذاكرة أو كثافة استخدام الكائنات. عندما يتعرف الطلاب على المزيد من اللغات ، سيبدأون في رؤية هذه الأنماط. ستركز هذه المقالة على Python و Java ، وهما لغتا البرمجة الأكثر استخدامًا في العالم. على الرغم من صعوبة قياس معدل نمو كل لغة برمجة بدقة ، ** إنهما أكثر لغات البرمجة شيوعًا المستخدمة في الصناعة اليوم **. </p><p>الفرق الرئيسي بين Python و Java هو أن Python ** مكتوبة ديناميكيًا ** ، بينما Java ** مكتوبة بشكل ثابت *<em>. بشكل فضفاض ، هذا يعني أن Java أكثر صرامة في كيفية تعريف واستخدام المتغيرات في الكود. *</em> نتيجة لذلك ، تميل بنية Java إلى الإسهاب ، وهو أحد الأسباب التي تجعلنا نوصي المبتدئين بتعلم Python قبل Java. ** على سبيل المثال ، هذه هي الطريقة التي تنشئ بها “الأرقام” متغير اسم في بايثون يحمل الأرقام من 0 إلى 9: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">numbers = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">numbers.append(i)</span><br></pre></td></tr></table></figure><p>إليك كيف ستفعل نفس الشيء في Java: </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ArrayList numbers = <span class="keyword">new</span> ArrayList();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">    numbers.add(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>الفرق الرئيسي الآخر هو أن Java هي ** لغة مترجمة ** ، لذا فهي عادة ما تدير برامج أسرع من Python. هذا يعني أن المترجم يحول كود Java إلى كود على مستوى الآلة قبل تشغيل البرنامج بالفعل. في المقابل ، فإن Python هي لغة ** مفسرة ** ، مما يعني عدم وجود خطوات تجميع. </p><h2 id="الاستخدام-والتطبيق-العملي"><a href="#الاستخدام-والتطبيق-العملي" class="headerlink" title="الاستخدام والتطبيق العملي"></a>الاستخدام والتطبيق العملي</h2><p>من الناحية التاريخية ، أصبحت Java لغة أكثر شيوعًا ويرجع ذلك جزئيًا إلى تاريخها الطويل. ومع ذلك ، فإن بايثون تكتسب شعبية بسرعة. وفقًا لـ <a href="https://octoverse.github.com/">تقرير حالة أكتوبر من Github</a> ، فقد تجاوزت لغة Java مؤخرًا باعتبارها لغة البرمجة الأكثر استخدامًا. وفقًا لاستطلاع المطورين لعام 2018 ، ** تعد Python الآن لغة برمجة الكمبيوتر الأسرع نموًا **. </p><p>يحتوي كل من Python و Java على مجتمع كبير من المطورين. يمكنك الإجابة عن الأسئلة على مواقع الويب <a href="https://stackoverflow.com/">Stack Overflow</a>. من <a href="https://insights.stackoverflow.com/trends؟tags=python٪2Cjava">Stack Overflow Trends</a> ، يمكن ملاحظة أن النسبة المئوية للأسئلة التي طرحتها Python على Stack Overflow في عام 2017 تتجاوز تلك الخاصة بجافا **. في وقت كتابة هذا التقرير ، تم تمييز حوالي 13٪ من الأسئلة في Stack Overflow باستخدام Python ، وحوالي 8٪ تم تمييزها بـ Java! </p><h2 id="تطوير-الشبكة"><a href="#تطوير-الشبكة" class="headerlink" title="تطوير الشبكة"></a>تطوير الشبكة</h2><p>** يمكن استخدام كل من Python و Java لتطوير الويب الخلفي **. بشكل عام ، سيستخدم المطورون إطار عمل <a href="https://stackify.com/python-frameworks/">Django and Flask</a> لبايثون و <a href="https://spring.io/">Spring</a> لجافا. تشتهر Python بسهولة قراءة كودها ، مما يعني أن كود Python نظيف وسهل القراءة ومختصر. تحتوي Python أيضًا على عدد كبير من الوحدات والحزم والمكتبات الشاملة. تم تطوير هذه الوحدات النمطية والحزم والمكتبات بواسطة مجتمع متحمس Python ، بالإضافة إلى مكتبتها القياسية. تمتلك Java نظامًا بيئيًا مشابهًا ، وإن كان بدرجة أقل. </p><h2 id="تطوير-تطبيقات-الهاتف-المحمول"><a href="#تطوير-تطبيقات-الهاتف-المحمول" class="headerlink" title="تطوير تطبيقات الهاتف المحمول"></a>تطوير تطبيقات الهاتف المحمول</h2><p>** عندما يتعلق الأمر بتطوير تطبيقات الهاتف المحمول ، فإن Java تحتل مكانة مهيمنة ** لأن ** Java ** هي اللغة الرئيسية المستخدمة لإنشاء تطبيقات وألعاب Android. مع المكتبات المصممة خصيصًا المذكورة أعلاه ، يمكن للمطورين اختيار كتابة تطبيقات Android باستخدام أطر عمل وأدوات تطوير قوية مصممة خصيصًا لنظام التشغيل. حاليًا ، على الرغم من وجود أدوات مثل <a href="https://kivy.org/">Kivy</a> و <a href="https://beeware.org/">BeeWare 之</a> تتيح لك كتابة التعليمات البرمجية مرة واحدة وتشغيلها على أنظمة تشغيل Windows و OS X و iOS و انشر التطبيقات على نظام Android ، ولكن لا يتم استخدام Python غالبًا لتطوير الأجهزة المحمولة. </p><h2 id="التعلم-الآلي-والبيانات-الضخمة"><a href="#التعلم-الآلي-والبيانات-الضخمة" class="headerlink" title="التعلم الآلي والبيانات الضخمة"></a>التعلم الآلي والبيانات الضخمة</h2><p>في المقابل ، في التعلم الآلي و <a href="https://junilearning.com/blog/coding-and-data-science">علم البيانات</a> ، تعد Python اللغة الأكثر شيوعًا. تستخدم Python بشكل شائع في مشاريع البيانات الضخمة والحوسبة العلمية والذكاء الاصطناعي (AI). ** عند العمل في مشروعات تتضمن تحليل المشاعر ، يختار معظم علماء البيانات ومبرمجي التعلم الآلي استخدام Python بدلاً من Java **. في الوقت نفسه ، تجدر الإشارة إلى أن العديد من مبرمجي التعلم الآلي قد يختارون استخدام Java عند العمل في المشاريع المتعلقة بأمان الشبكة ومنع هجمات الشبكة واكتشاف الاحتيال. </p><h2 id="من-أين-أبدا"><a href="#من-أين-أبدا" class="headerlink" title="من أين أبدا"></a>من أين أبدا</h2><p>عند تعلم أساسيات البرمجة ** ، توصلت ** العديد من الدراسات إلى الاستنتاج ** ، بسبب التركيب البسيط والبديهي لبايثون ، فهي ** أسهل من Java ** ** \ * \ *** [تعلم بايثون](https : //junilearning.com/coding) ** ، كما هو موضح في المثال السابق. بالمقارنة مع Python ، عادةً ما تحتوي برامج Java على المزيد من التعليمات البرمجية المعيارية - يجب أن تحتوي على أجزاء من الكود مع تغييرات قليلة أو معدومة في العديد من الأماكن. بعد قولي هذا ، تتمتع Java ببعض المزايا المهمة ، خاصة سرعتها كلغة مترجمة. ** سيعرض تعلم Python و Java الطلاب على لغتين تستندان إلى مفاهيم علوم الكمبيوتر المتشابهة ولكنهما يختلفان في التعليم. \ * \ * </p><p>بشكل عام ، من الواضح أن Python و Java كلاهما لغات برمجة قوية في الممارسة العملية ، لذلك بالنسبة لأي مطور برامج طموح ، من الأفضل تعلم كلتا اللغتين بكفاءة. يجب على المبرمجين مقارنة Python و Java بناءً على الاحتياجات المحددة لكل مشروع تطوير برمجيات ، بدلاً من مجرد تعلم لغة يحبونها. باختصار ، ** لا توجد لغة واحدة تتفوق على لغة أخرى ، لذلك يجب على المبرمجين السعي للحصول على كلتا اللغتين في كلا الترميزين **. </p><table><thead><tr><th></th><th>بايثون</th><th>جافا</th></tr></thead><tbody><tr><td>أداء وقت التشغيل</td><td></td><td>الفائز</td></tr><tr><td>سهولة التعلم</td><td>الفائز</td><td></td></tr><tr><td>رشاقة عملية</td><td>التعادل</td><td>التعادل</td></tr><tr><td>تطوير تطبيقات الجوال</td><td></td><td>الفائز</td></tr><tr><td>البيانات الضخمة</td><td>الفائز</td><td></td></tr></tbody></table><hr>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;The&lt;/em&gt; &lt;a href=&quot;https://junilearning.com/blog/guide/python-vs-java/&quot;&gt;&lt;em&gt;Article&lt;/em&gt;&lt;/a&gt; _ ظهرت في الأصل في _ &lt;a href=&quot;https://junilearning.com/&quot;&gt;&lt;em&gt;junilearning.com&lt;/em&gt;&lt;/a&gt; &lt;/p&gt;
&lt;h1 id=&quot;Python-و-Java-الاستخدام-والأداء-والتعلم&quot;&gt;&lt;a href=&quot;#Python-و-Java-الاستخدام-والأداء-والتعلم&quot; class=&quot;headerlink&quot; title=&quot;Python و Java: الاستخدام والأداء والتعلم&quot;&gt;&lt;/a&gt;Python و Java: الاستخدام والأداء والتعلم&lt;/h1&gt;&lt;p&gt;في مجال علوم الكمبيوتر ، هناك العديد من لغات البرمجة ، ولا تتفوق لغة واحدة على لغة أخرى. بعبارة أخرى ، ** كل لغة هي الأفضل لحل مشاكل معينة *&lt;em&gt;. في الواقع ، بالنسبة لمشروع برمجة معين ، لا توجد عادة لغة واحدة أفضل للاختيار من بينها. لذلك ، بالنسبة للطلاب الذين يرغبون في تطوير البرامج أو حل المشكلات المثيرة للاهتمام من خلال التعليمات البرمجية ، من المهم جدًا أن يكون لديهم أساس قوي في علوم الكمبيوتر *&lt;/em&gt; ينطبق على أي لغة برمجة **. &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://leihao0.github.io/ar/tags/python/"/>
    
      <category term="Java" scheme="https://leihao0.github.io/ar/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>التوت 4.</title>
    <link href="https://leihao0.github.io/ar/Raspberry-Pi-4/"/>
    <id>https://leihao0.github.io/ar/Raspberry-Pi-4/</id>
    <published>2020-06-11T15:14:06.000Z</published>
    <updated>2021-03-08T16:29:05.922Z</updated>
    
    <content type="html"><![CDATA[<div class="group-picture"><div class="group-picture-row"><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Pi-Hole.png" alt=""></div><div class="group-picture-column"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Raspberrypi.png" alt=""></div></div></div><a id="more"></a><h2 id="التمهيد-دون-الشاشة"><a href="#التمهيد-دون-الشاشة" class="headerlink" title="التمهيد دون الشاشة"></a>التمهيد دون الشاشة</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev</span></span><br><span class="line"><span class="string">update_config=1</span></span><br><span class="line"><span class="string">country=CN</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">network=&#123;</span></span><br><span class="line"><span class="string"> ssid=&quot;xxx&quot;</span></span><br><span class="line"><span class="string"> psk=&quot;xxx&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; wpa_supplicant.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># نسخ wpa_supplicant، ssh أو ssh.txt إلى جذر بطاقة SD </span></span><br><span class="line"></span><br><span class="line">sudo raspi-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># كرونتاب </span></span><br><span class="line"><span class="comment"># @ Reboot Sudo IFDown WLAN1 </span></span><br><span class="line">sudo iwconfig wlan1 txpower off</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># EEPROM. </span></span><br><span class="line">sudo apt -y update</span><br><span class="line">sudo apt -y upgrade</span><br><span class="line">sudo apt -y install rpi-eeprom</span><br><span class="line">sudo rpi-eeprom-update</span><br><span class="line">sudo rpi-eeprom-update -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># يا بلدي زاش </span></span><br><span class="line">sudo apt-get install zsh</span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line">sudo apt -y install vim</span><br><span class="line"></span><br><span class="line">sudo chsh -s /bin/zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># pi-hole. </span></span><br><span class="line">curl -sSL https://install.pi-hole.net | bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pivpn. </span></span><br><span class="line">curl -L https://install.pivpn.io | bash</span><br><span class="line">pivpn add</span><br><span class="line">pivpn remove</span><br><span class="line">pivpn list</span><br><span class="line">pivpn -qr</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="SSH-بلا-مساعدة"><a href="#SSH-بلا-مساعدة" class="headerlink" title="SSH بلا مساعدة"></a>SSH بلا مساعدة</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ssh-keygen</span><br><span class="line"><span class="comment"># فطيرة التوت </span></span><br><span class="line">cat raspberrypi.pub</span><br><span class="line">cat ~/.ssh/raspberrypi.pub | ssh pi@192.168.2.2 <span class="string">&#x27;mkdir -p ~/.ssh &amp;&amp; cat &gt;&gt; ~/.ssh/authorized_keys&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="ثابت-عنوان-IP"><a href="#ثابت-عنوان-IP" class="headerlink" title="ثابت عنوان IP"></a>ثابت عنوان IP</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vim /etc/dhcpcd.conf. </span></span><br><span class="line"></span><br><span class="line">interface eth0</span><br><span class="line">static ip_address=192.168.0.4/24</span><br><span class="line">static routers=192.168.0.254</span><br><span class="line">static domain_name_servers=192.168.0.254 8.8.8.8</span><br></pre></td></tr></table></figure><h2 id="VNC"><a href="#VNC" class="headerlink" title="VNC"></a>VNC</h2><p>https: // 马 果… حول الجلد .org / المقالات / VNC-التوت البشرة </p><h2 id="Rclone-amp-Google-Drive"><a href="#Rclone-amp-Google-Drive" class="headerlink" title="Rclone &amp; Google Drive"></a>Rclone &amp; Google Drive</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install fuse</span><br><span class="line"></span><br><span class="line">curl -L https://raw.github.com/pageauc/rclone4pi/master/rclone-install.sh | bash</span><br><span class="line">rclone config</span><br><span class="line"></span><br><span class="line">mkdir -p /tmp/gdrive</span><br><span class="line">fusermount -u /tmp/gdrive</span><br><span class="line"></span><br><span class="line">sudo vim /etc/fuse.conf</span><br><span class="line"><span class="comment"># user_allow_other. </span></span><br></pre></td></tr></table></figure><h2 id="هذا-العقل"><a href="#هذا-العقل" class="headerlink" title="هذا العقل"></a>هذا العقل</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo blkid</span><br><span class="line"></span><br><span class="line"><span class="comment"># سودو vim / etc / fstab </span></span><br><span class="line"></span><br><span class="line">UUID=633a8bc8 /media/3T ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=d271d018 /media/TM ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line">UUID=53f3ce6b /media/8G ext4 defaults,auto,users,rw,nofail 0 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo chown -R pi:pi /media/3T /media/TM</span><br></pre></td></tr></table></figure><h2 id="ramdisk-amp-logs"><a href="#ramdisk-amp-logs" class="headerlink" title="ramdisk &amp; logs."></a>ramdisk &amp; logs.</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sudo Service RSYSLOG توقف </span></span><br><span class="line"><span class="comment"># SUDO SYSTEMSCTL تعطيل RSYSLOG </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># سودو vim / etc / fstab </span></span><br><span class="line"></span><br><span class="line">tmpfs /var/lib/plexmediaserver tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /home/pi./cache tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /tmp tmpfs defaults,noatime 0 0</span><br><span class="line">tmpfs /var/<span class="built_in">log</span> tmpfs defaults,noatime 0 0</span><br></pre></td></tr></table></figure><h2 id="إصلاح-ext4"><a href="#إصلاح-ext4" class="headerlink" title="إصلاح ext4."></a>إصلاح ext4.</h2><p><code>sudo fsck.ext4 -vy / dev / sda2</code> </p><h2 id="مساحة-المبادلة-على-القرص-الصلب-الخارجي"><a href="#مساحة-المبادلة-على-القرص-الصلب-الخارجي" class="headerlink" title="مساحة المبادلة على القرص الصلب الخارجي"></a>مساحة المبادلة على القرص الصلب الخارجي</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/dphys-swapfile</span><br><span class="line"></span><br><span class="line">CONF_SWAPFILE=/media/3T/swapfile</span><br><span class="line">CONF_SWAPSIZE=8192</span><br></pre></td></tr></table></figure><h2 id="AFP-وآلة-الوقت"><a href="#AFP-وآلة-الوقت" class="headerlink" title="AFP وآلة الوقت"></a>AFP وآلة الوقت</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install netatalk gparted</span><br><span class="line"></span><br><span class="line"><span class="comment"># sudo mkfs.ext4 / dev / sda2 </span></span><br><span class="line"><span class="comment"># سوده مقفص.يكست٤ /ضيف/صداع </span></span><br><span class="line"><span class="comment"># Sudo mkdir / وسائل الإعلام / TM </span></span><br><span class="line"><span class="comment"># سوده مونت /ضيف/صداع /ميديا/تم </span></span><br><span class="line"><span class="comment"># Suddo Poon -r Pi: ​​PI / Media / ZT </span></span><br><span class="line"><span class="comment"># Sudo Cheng -RPI: الجلد / وسائل الإعلام / TM </span></span><br><span class="line"></span><br><span class="line">sudo vim /etc/netatalk/afp.conf</span><br><span class="line"><span class="comment"># 3t. </span></span><br><span class="line"><span class="comment"># ؛ راتيش = / وسائل الإعلام / DT / </span></span><br><span class="line"><span class="comment"># ؛ [TMP] </span></span><br><span class="line"><span class="comment"># ؛ المسار = / TMP / </span></span><br><span class="line"><span class="comment"># [TM] </span></span><br><span class="line"><span class="comment"># المسار = / الوسائط / توم / </span></span><br><span class="line"><span class="comment"># آلة الزمن = نعم </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo systemctl restart netatalk</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="سامبا"><a href="#سامبا" class="headerlink" title="سامبا"></a>سامبا</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install samba samba-common-bin</span><br><span class="line"></span><br><span class="line">sudo vim /etc/samba/smb.conf</span><br><span class="line"><span class="comment"># [حصة pimylifeup] </span></span><br><span class="line"><span class="comment"># راتيش = / وسائل الإعلام / DT / </span></span><br><span class="line"><span class="comment"># قابل للكتابة = نعم </span></span><br><span class="line"><span class="comment"># إنشاء قناع = 0777 </span></span><br><span class="line"><span class="comment"># قناع الدليل = 0777 </span></span><br><span class="line"><span class="comment"># الجمهور = لا </span></span><br><span class="line"><span class="comment"># [TMP] </span></span><br><span class="line"><span class="comment"># المسار = / TMP / </span></span><br><span class="line"><span class="comment"># قابل للكتابة = نعم </span></span><br><span class="line"><span class="comment"># إنشاء قناع = 0777 </span></span><br><span class="line"><span class="comment"># قناع الدليل = 0777 </span></span><br><span class="line"><span class="comment"># الجمهور = لا </span></span><br><span class="line">sudo smbpasswd -a pi</span><br><span class="line">sudo systemctl restart smbd</span><br></pre></td></tr></table></figure><h2 id="خادم-الملفات"><a href="#خادم-الملفات" class="headerlink" title="خادم الملفات"></a>خادم الملفات</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="string">&quot;/tmp/plexmediaserver&quot;</span></span><br><span class="line">sudo mount -t tmpfs -o size=1000M tmpfs /tmp/plexmediaserver</span><br><span class="line">sudo chown -R pi:pi /var/lib/plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo apt -y install apt-transport-https</span><br><span class="line">curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list</span><br><span class="line">sudo apt -y install plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo vim /etc/default/plexmediaserver</span><br><span class="line"><span class="comment"># تصدير plex_media_server_user = pi </span></span><br><span class="line"></span><br><span class="line">hostname -I</span><br><span class="line">sudo vim /boot/cmdline.txt</span><br><span class="line"><span class="comment"># IP = ipaddress. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># سودو APT - تثبيت PMount </span></span><br><span class="line"><span class="comment"># Sudo Apt - احصل على تثبيت NTFS-3G EXFAT-FUSE EXFAT-UTILS PMUNT </span></span><br><span class="line"><span class="comment"># Sudo Apt - احصل على تثبيت HFSPlus HFSUTILS HFSProgs GDISK </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># lsblk. </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># / الأسبوع / النظام / النظام / التصوير الفوتوغرافي X Media Server.Service </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PLEX المستخدم إلى PI </span></span><br><span class="line">sudo mkdir -p /etc/systemd/system/plexmediaserver.service.d</span><br><span class="line">sudo vim /etc/systemd/system/plexmediaserver.service.d/override.conf</span><br><span class="line"><span class="comment"># [خدمة] </span></span><br><span class="line"><span class="comment"># المستخدم = PI. </span></span><br><span class="line"><span class="comment"># المجموعة = الجلد </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [خدمة] </span></span><br><span class="line"><span class="comment"># exectartartpre = / bin / sleep 120؛ / bin / sh -c &#x27;/ usr / bin / test -d &quot;$ &#123;plex_media_server_application_support_dir&#125;&quot; || / bin / mkdir -P &quot;$ &#123;plex_media_server_application_support_dir&#125;&quot; </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># مجلد البيانات </span></span><br><span class="line"></span><br><span class="line">sudo systemctl stop plexmediaserver</span><br><span class="line"></span><br><span class="line">sudo service plexmediaserver stop</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">enable</span> plexmediaserver.service</span><br><span class="line">sudo systemctl restart plexmediaserver.service</span><br></pre></td></tr></table></figure><h2 id="كرونتاب"><a href="#كرونتاب" class="headerlink" title="كرونتاب"></a>كرونتاب</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt -y install php php-curl</span><br></pre></td></tr></table></figure><p><code>crontab -e</code>. </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># Rclone. </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;mkdir -p /tmp/gdrive</span></span><br><span class="line"><span class="string">fusermount -u /tmp/gdrive</span></span><br><span class="line"><span class="string">/usr/bin/rclone mount Plex:Plex /tmp/gdrive --umask 0000 --default-permissions --allow-non-empty --allow-other --buffer-size 64M --dir-cache-time 48h --vfs-read-chunk-size 128M --vfs-read-chunk-size-limit 1500M &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; rclone.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># دعم </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># TAR - exclude = &quot;$ plexpath / logs&quot; - exclude = &quot;$ plexpath / cache&quot; - exclude = &quot;$ plexpath / crash replications&quot; -czf /tmp/gdrive/backup/plex.tar.gz / var / lib / plexmediaserver. </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">mkdir -p /tmp/gdrive/backup/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">tar cf - --exclude=&quot;$PlexPath/Logs&quot; --exclude=&quot;$PlexPath/Cache&quot; --exclude=&quot;$PlexPath/Crash Reports&quot; /var/lib/plexmediaserver | lz4 -f - /tmp/gdrive/backup/plex.tar.lz4</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; backup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># يعيد </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">lz4 -d /tmp/gdrive/backup/plex.tar.lz4 | tar -xC /</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">PlexPath=&quot;/var/lib/plexmediaserver/Library/Application Support/Plex Media Server&quot;</span></span><br><span class="line"><span class="string">mkdir -p &quot;$PlexPath/Logs&quot; &quot;$PlexPath/Cache&quot; &quot;$PlexPath/Crash Reports&quot;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; restore.sh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">chmod a+x backup.sh restore.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># تحديث </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">sudo apt update &amp;&amp; sudo apt upgrade &amp;&amp; sudo apt autoremove &amp;&amp; sudo apt clean</span></span><br><span class="line"><span class="string">pihole -up &amp;&amp; pihole -g</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; update.sh</span><br><span class="line"></span><br><span class="line">chmod a+x update.sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@reboot vncserver</span><br><span class="line"></span><br><span class="line"><span class="comment"># @ rubwite phots2 zt </span></span><br><span class="line"><span class="comment"># @ربوة بمعونة صداع تم </span></span><br><span class="line"></span><br><span class="line">@reboot /home/pi/rclone.sh</span><br><span class="line">@reboot sleep 30 &amp;&amp; /home/pi/restore.sh</span><br><span class="line"></span><br><span class="line">*/30 * * * * /home/pi/backup.sh</span><br><span class="line">0 3 * * * /home/pi/update.sh</span><br><span class="line"></span><br><span class="line">0 22 * * * <span class="built_in">cd</span> ~/Bot;python3 autoPill.py</span><br><span class="line">0 9 * * * php ~/Bot/bilibiliRun.ph</span><br></pre></td></tr></table></figure><p><code>Sudo Crontab -e</code> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 0 4 * * * &#x2F; sbin &#x2F; اغلاق -r </span><br><span class="line">@reboot sleep 90 &amp;&amp; sudo service plexmediaserver start</span><br></pre></td></tr></table></figure><h2 id="jellyfin"><a href="#jellyfin" class="headerlink" title="~ jellyfin ~."></a><del>~ jellyfin ~</del>.</h2><p>HTTPS: // jelly fat.org/ </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install apt-transport-https</span><br><span class="line">wget -O - https://repo.jellyfin.org/jellyfin_team.gpg.key | sudo apt-key add -</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [arch=<span class="subst">$( dpkg --print-architecture )</span>] https://repo.jellyfin.org/<span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^ID=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> <span class="subst">$( awk -F&#x27;=&#x27; &#x27;/^VERSION_CODENAME=/&#123; print $NF &#125;&#x27; /etc/os-release )</span> main&quot;</span> | sudo tee /etc/apt/sources.list.d/jellyfin.list</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># خدمة Jellyfin الحالة </span></span><br><span class="line"><span class="comment"># SystemCtl إعادة تشغيل Jelllyfin. </span></span><br><span class="line"><span class="comment"># sudo /etc/init.d/jellyfin توقف </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># . local / share / jellyfin </span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;&#x27;</span><span class="string">&#x27;#!/bin/zsh</span></span><br><span class="line"><span class="string">JELLYFINTMP=&quot;/tmp/jellyfin&quot;</span></span><br><span class="line"><span class="string">USRBIN=&quot;/usr/bin&quot;</span></span><br><span class="line"><span class="string">mkdir -p $JELLYFINTMP/log $JELLYFINTMP/cache $JELLYFINTMP/transcodes \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/data \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/metadata \</span></span><br><span class="line"><span class="string">$JELLYFINTMP/config</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$USRBIN/jellyfin \</span></span><br><span class="line"><span class="string"> -C $JELLYFINTMP/cache \</span></span><br><span class="line"><span class="string"> -l $JELLYFINTMP/log \</span></span><br><span class="line"><span class="string"> -d $JELLYFINTMP/data \</span></span><br><span class="line"><span class="string"> -c $JELLYFINTMP/config \</span></span><br><span class="line"><span class="string"> --ffmpeg $USRBIN/ffmpeg &amp;</span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&#x27;&#x27;</span> &gt; jellyfin.sh</span><br><span class="line"></span><br><span class="line">chmod a+x jellyfin.sh</span><br><span class="line">nohup ./jellyfin.sh &lt;/dev/null &amp;</span><br><span class="line"></span><br><span class="line">sudo systemctl <span class="built_in">disable</span> jellyfin</span><br><span class="line"></span><br><span class="line"><span class="comment"># https: // jelly fin.org/docs/general/administration/hardware-accleation.html </span></span><br><span class="line">sudo usermod -aG video jellyfin</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;group-picture&quot;&gt;&lt;div class=&quot;group-picture-row&quot;&gt;&lt;div class=&quot;group-picture-column&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Pi-Hole.png&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;div class=&quot;group-picture-column&quot;&gt;&lt;img src=&quot;https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/Raspberrypi.png&quot; alt=&quot;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;
    
    </summary>
    
    
    
      <category term="Raspberry" scheme="https://leihao0.github.io/ar/tags/raspberry/"/>
    
  </entry>
  
  <entry>
    <title>APN على أساس رمز iOS</title>
    <link href="https://leihao0.github.io/ar/iOS-Token-Based-APNs/"/>
    <id>https://leihao0.github.io/ar/iOS-Token-Based-APNs/</id>
    <published>2020-05-29T09:23:18.000Z</published>
    <updated>2020-12-22T00:32:16.905Z</updated>
    
    <content type="html"><![CDATA[<p>توفر Apple طريقة جديدة (رمز المصادقة) لأداء APN </p><p>مقارنة بالطريقة السابقة (شهادة الموفر) ، تنتهي صلاحية الشهادة “* .p12” كل عام </p><p>على أساس الرمز <code>* .p8</code> ** لا تنتهي الصلاحية أبدًا ** </p><a id="more"></a><ul><li><a href="https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/establishing_a_token-based_connection_to_apns">إنشاء اتصال قائم على الرمز المميز مع APN</a> </li><li><a href="https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/CommunicatingwithAPNs.html">التواصل مع APN</a> </li></ul><h2 id="للعملاء"><a href="#للعملاء" class="headerlink" title="للعملاء"></a>للعملاء</h2><p>الاختلاف الوحيد في العميل هو </p><ol><li>أنشئ مفتاح توقيع رمز المصادقة على <a href="https://developer.apple.com/">https://developer.apple.com/</a> </li><li>قم بتنزيل <code>* .p8</code> وأرسله إلى مهندس الواجهة الخلفية </li></ol><h2 id="للواجهة-الخلفية"><a href="#للواجهة-الخلفية" class="headerlink" title="للواجهة الخلفية"></a>للواجهة الخلفية</h2><p>تدعم العديد من الأطر “* .p8”. </p><p>على سبيل المثال: </p><p><a href="https://firebase.google.com/docs/cloud-messaging/ios/certs">Firebase</a> </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;توفر Apple طريقة جديدة (رمز المصادقة) لأداء APN &lt;/p&gt;
&lt;p&gt;مقارنة بالطريقة السابقة (شهادة الموفر) ، تنتهي صلاحية الشهادة “* .p12” كل عام &lt;/p&gt;
&lt;p&gt;على أساس الرمز &lt;code&gt;* .p8&lt;/code&gt; ** لا تنتهي الصلاحية أبدًا ** &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="iOS" scheme="https://leihao0.github.io/ar/tags/ios/"/>
    
      <category term="APNs" scheme="https://leihao0.github.io/ar/tags/apns/"/>
    
  </entry>
  
  <entry>
    <title>كتاب المقبرة</title>
    <link href="https://leihao0.github.io/ar/The-Graveyard-Book/"/>
    <id>https://leihao0.github.io/ar/The-Graveyard-Book/</id>
    <published>2020-05-07T00:55:21.000Z</published>
    <updated>2020-12-22T00:32:16.904Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ملاهي-🎠-كتاب"><a href="#ملاهي-🎠-كتاب" class="headerlink" title="ملاهي 🎠 كتاب"></a>ملاهي 🎠 كتاب</h1><div style="width: 300px"><img src="https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/The%20Graveyard%20Book.jpg" /></div><p>ليس لدى الأطفال مفهوم عن الحياة والموت ، والمقبرة أشبه بحديقة ترفيهية بالنسبة لهم </p><a id="more"></a><hr><p>شكرا 🙏 🐼 القارئ لإرسال كتاب آخر </p><p>بالخجل ، انخفض عدد القراءات بعد السفر إلى الخارج<br>من مئات الكتب سنويًا من قبل فجأة إلى رقم واحد الآن </p><p>فكر في القول المأثور بأن القراءة لا ينبغي أن تكون نفعية ، بل يجب أن تكون مدفوعة بالفائدة<br>الآن انها حقا صفعة على الوجه </p><p>ولكن هناك أيضًا أسباب موضوعية: </p><p>أحدها أن معظم الكتب التي أريد أن أقرأها الآن لها طبعات أصلية<br>نظرًا لوجود النسخة الأصلية ، لا أرغب حقًا في رؤية النسخة المترجمة </p><p>ثانيًا ، مر وقت سمع فيه صديق من جامعة سنغافورة الوطنية مكالمتي الهاتفية<br>بعد ذلك ، كررت مرارًا “لغتك الإنجليزية البلاستيكية” </p><p>لكن لدي عناد ، البطء بطيء ، لكنني متمسك بالنسخة الأصلية<br>يجب أن يكون هناك يومًا ما يمكنني الاستيقاظ فيه بسرعة الكتب الصينية </p><p>والثالث هو أن مقاطعة بو هي جزيرة ، ولا يوجد شيء مثل الجبال والأنهار الجيدة في الخارج ، لذلك أشعر بالوحدة.<br>وفي بداية هذا الوباء ، اعتقدت ذات مرة أن هذا المكان كان دولة متقدمة مع الأوراق.<br>بالإضافة إلى ذلك ، إنه الصيف طوال العام ، باستثناء الصيف الحار ، كل شيء آخر مريح للغاية<br>السماء الزرقاء والغيوم البيضاء ، الأمطار الغزيرة والرعد ، يبدو وكأن الوقت متجمد ، جيد جدًا </p><p>بدون النفعية ، بطبيعة الحال لا يوجد دافع للقراءة </p><p>قواطع الدائرة الآن ، لذلك لدي بعض الوقت والمزاج </p><hr><p>حصلت على هذا الكتاب أولا<br>اعتقدت أنه كان خيال علمي في البداية<br>سمعت أنني يمكن أن أكون غير مرئي واعتقدت أنه خيال<br>ظننت أنه كان حبًا عندما قابلت أخت الورقة<br>ذهبت إلى المدرسة واعتقدت أنها حرم جامعي<br>جاء أبي إلى اللعبة واعتقد أنها كانت والدًا وطفلًا<br>قُتلت الأسرة بأكملها واعتقدت أنه كان تشويقًا<br>في النهاية ، كنت أتحدث عن النمو </p><p>كما كتب المؤلف في النهاية: </p><blockquote><p>أنهيت الفصل السادس ، “أيام بيرتي المدرسية” في فندق رث في نيو أورلينز. أنهيت الصفحة الأخيرة في شرفة الحديقة في حديقتي ، ممسكًا بالدموع أثناء الكتابة. في تلك اللحظة فقط ، فهمت لماذا لم أكتب هذا الكتاب عندما كنت أبًا. لأنه قبل الإنشاء ، يجب أن أرافق أطفالي خلال عملية نموهم ، ورعايتهم ، وأحبهم ، وأخيراً أتعلم التخلي عنهم </p></blockquote><hr><p>بالإضافة إلى ذلك ، من الصعب المشاركة في القراءة<br>الكتاب بأكمله يعطيني الشعور بنسخة هاري بوتر </p><p>لكن هناك اختلاف كبير في هذه القراءة<br>في الماضي ، عندما كنت أقرأ مثل هذه الروايات ، كنت غالبًا ما أدخل الكتاب من منظور البطل<br>مع العمر<br>هذه المرة الأمر أكثر من منظور سيلاس </p><p>إذا كان هذا الكتاب روتينًا خياليًا شائعًا في الصين<br>من المؤكد أن بود سيختار الأخت سكارليت ، يروض سلير ، ويصبح سيد ، جاك ، ويجلس كرئيس جماعة الإخوان </p><p>ومع ذلك ، لم يحدث أي من هذا في نيل ، الذي كتب عن الآلهة الأمريكية.<br>بعد أن لعب بود دور الوحش ، كانت الورقة الشقيقة خائفة بعيدًا. بود مجرد شخص عادي ** العالم كبير جدًا ، أريد أن أرى ** </p><p>بصفتك أبًا ، هل تريد أن ترى بودك يصبح هو الشخص الموجود في البلد أم الموجود في الكتاب؟ </p><hr><p>هناك أيضًا بعض الأشياء الغبية التي تم القيام بها خلال فترة التمرد والتي تتطلب من الآباء دفع ثمنها<br>الآن بعد أن تقدمت في السن ، أدركت الصعوبات التي تنطوي عليها المحظورات المختلفة للوالدين. </p><p>لكن لا يسعني التفكير في الأمر<br>لم أكن أعرف ما أعرفه الآن </p><p>لقد تخيلت أنه إذا كانت الذات الآن والنفس حينها<br>بالتأكيد لن أكون مطيعًا في ذلك الوقت<br>يجب أن تُطرق في وجهك بقبضة المجتمع الحديدية لتستيقظ<br>افعل شيئًا بحزم </p><hr><p>بعد التعامل مع الشؤون العامة ، يومًا ما سيخرج من عالم القصص الخيالية ويدخل الحياة </p><blockquote><p>“وداعا ، إذن ، سيلاس.” مد بود يده ، كما فعل عندما كان صبيا ، وأخذها سيلاس بيد باردة بلون العاج القديم ، وهزها بشدة.<br>“وداعا ، لا أحد أوينز.”<br>التقط بود الحقيبة الصغيرة. فتح الباب ليسمح لنفسه بالخروج من القبو ، ومشى عائدًا من المنحدر اللطيف إلى الطريق دون النظر إلى الوراء “ </p></blockquote><p>كنت بائسة عندما خرجت ، لم يسلمني أحد ، ولا وداعًا<br>تم رد الإيجار في بكين واشتريت تذكرة ذهاب فقط<br>يتم تغليف جميع المتعلقات في ثلاث حقائب<br>استقل سيارة أجرة إلى المطار في الساعة 4 صباحًا<br>بعد الانتهاء من الإرسالية والصعود ثم المغادرة </p><blockquote><p>دون النظر الى الوراء </p></blockquote><p>كيف أتمنى أن أسمع أيضًا هلوسة بود السمعية: </p><blockquote><p>اتخذ خطوة للأمام … قال صوت ، “أنا فخور جدًا بك يا ابني.” </p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ملاهي-🎠-كتاب&quot;&gt;&lt;a href=&quot;#ملاهي-🎠-كتاب&quot; class=&quot;headerlink&quot; title=&quot;ملاهي 🎠 كتاب&quot;&gt;&lt;/a&gt;ملاهي 🎠 كتاب&lt;/h1&gt;&lt;div style=&quot;width: 300px&quot;&gt;
&lt;img src=&quot;https://raw.githubusercontent.com/LeiHao0/BlogAssets/assets/The%20Graveyard%20Book.jpg&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;ليس لدى الأطفال مفهوم عن الحياة والموت ، والمقبرة أشبه بحديقة ترفيهية بالنسبة لهم &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Reading" scheme="https://leihao0.github.io/ar/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>نصائح SwiftUI</title>
    <link href="https://leihao0.github.io/ar/SwiftUI-Tips/"/>
    <id>https://leihao0.github.io/ar/SwiftUI-Tips/</id>
    <published>2020-04-24T11:49:41.000Z</published>
    <updated>2020-12-22T00:32:16.904Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ملزمة-UserDefaults"><a href="#ملزمة-UserDefaults" class="headerlink" title="ملزمة UserDefaults"></a>ملزمة UserDefaults</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UD</span>: <span class="title">ObservableObject</span> </span>&#123;</span><br><span class="line">    @<span class="type">Published</span> <span class="keyword">var</span> date: <span class="type">Date</span> = <span class="type">UserDefaults</span>.standard.value(forKey: <span class="string">&quot;date&quot;</span>) <span class="keyword">as</span>? <span class="type">Date</span> ?? <span class="type">Date</span>() &#123;</span><br><span class="line">        <span class="keyword">didSet</span> &#123;</span><br><span class="line">            <span class="type">UserDefaults</span>.standard.<span class="keyword">set</span>(<span class="keyword">self</span>.date, forKey: <span class="string">&quot;date&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="مندوب-AppDelegate-gt-SceneDelegate"><a href="#مندوب-AppDelegate-gt-SceneDelegate" class="headerlink" title="مندوب AppDelegate -&gt; SceneDelegate"></a>مندوب AppDelegate -&gt; SceneDelegate</h2><p>انتقل العديد من المندوبين من “AppDelegate.swift” إلى “SceneDelegate.swift” </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">application</span><span class="params">(<span class="number">_</span> app: UIApplication, <span class="keyword">open</span> url: URL, options: [UIApplication.OpenURLOptionsKey : <span class="keyword">Any</span>] = [:])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// to</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">scene</span><span class="params">(<span class="number">_</span> scene: UIScene, openURLContexts URLContexts: Set&lt;UIOpenURLContext&gt;)</span></span> &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="NavigationView-و-NavigationBarItems-و-NavigationLink"><a href="#NavigationView-و-NavigationBarItems-و-NavigationLink" class="headerlink" title="NavigationView و NavigationBarItems و NavigationLink"></a>NavigationView و NavigationBarItems و NavigationLink</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ContentView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">EnvironmentObject</span> <span class="keyword">var</span> ud: <span class="type">UD</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> url = <span class="string">&quot;Title:status?date=\(String(ud.firstDate.timeIntervalSince1970))&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                qrCodeImage(<span class="keyword">for</span>: url)!</span><br><span class="line"></span><br><span class="line">                <span class="type">Spacer</span>().frame(height: <span class="number">50</span>)</span><br><span class="line"></span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;\(ud.firstDate)&quot;</span>)</span><br><span class="line">            &#125;.navigationBarTitle(<span class="string">&quot;Title&quot;</span>)</span><br><span class="line">                .navigationBarItems(trailing:</span><br><span class="line">                    <span class="type">HStack</span> &#123;</span><br><span class="line">                        <span class="type">NavigationLink</span>(destination: <span class="type">PickerView</span>(firstDate: $ud.firstDate)) &#123;</span><br><span class="line">                            <span class="type">Image</span>(systemName: <span class="string">&quot;gear&quot;</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">            )</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="PickerView-ملزم"><a href="#PickerView-ملزم" class="headerlink" title="PickerView ملزم"></a>PickerView ملزم</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">PickerView</span>: <span class="title">View</span> </span>&#123;</span><br><span class="line">    @<span class="type">Binding</span> <span class="keyword">var</span> date: <span class="type">Date</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> body: some <span class="type">View</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="type">NavigationView</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                <span class="type">DatePicker</span>(selection: $date, <span class="keyword">in</span>: ...<span class="type">Date</span>(), displayedComponents: .date) &#123;</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">&quot;&quot;</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="إصلاح-SwiftUI-صورة-العرض-الفارغ"><a href="#إصلاح-SwiftUI-صورة-العرض-الفارغ" class="headerlink" title="إصلاح SwiftUI صورة العرض الفارغ"></a>إصلاح SwiftUI صورة العرض الفارغ</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ciContext = <span class="type">CIContext</span>()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">qrCodeImage</span><span class="params">(<span class="keyword">for</span> string: String)</span></span> -&gt; <span class="type">Image?</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> data = string.data(using: <span class="type">String</span>.<span class="type">Encoding</span>.utf8)</span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> qrFilter = <span class="type">CIFilter</span>(name: <span class="string">&quot;CIQRCodeGenerator&quot;</span>) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">    qrFilter.setValue(data, forKey: <span class="string">&quot;inputMessage&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> transform = <span class="type">CGAffineTransform</span>(scaleX: <span class="number">10</span>, y: <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> ciImage = qrFilter.outputImage?.transformed(by: transform) <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> cgImage = ciContext.createCGImage(ciImage, from: ciImage.extent)</span><br><span class="line">    <span class="comment">// convert to UIImage</span></span><br><span class="line">    <span class="keyword">let</span> uiImage = <span class="type">UIImage</span>(cgImage: cgImage!)</span><br><span class="line">    <span class="keyword">let</span> image = <span class="type">Image</span>(uiImage: uiImage)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> image</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ملزمة-UserDefaults&quot;&gt;&lt;a href=&quot;#ملزمة-UserDefaults&quot; class=&quot;headerlink&quot; title=&quot;ملزمة UserDefaults&quot;&gt;&lt;/a&gt;ملزمة UserDefaults&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UD&lt;/span&gt;: &lt;span class=&quot;title&quot;&gt;ObservableObject&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    @&lt;span class=&quot;type&quot;&gt;Published&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; date: &lt;span class=&quot;type&quot;&gt;Date&lt;/span&gt; = &lt;span class=&quot;type&quot;&gt;UserDefaults&lt;/span&gt;.standard.value(forKey: &lt;span class=&quot;string&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt;? &lt;span class=&quot;type&quot;&gt;Date&lt;/span&gt; ?? &lt;span class=&quot;type&quot;&gt;Date&lt;/span&gt;() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;didSet&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;type&quot;&gt;UserDefaults&lt;/span&gt;.standard.&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.date, forKey: &lt;span class=&quot;string&quot;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="SwiftUI" scheme="https://leihao0.github.io/ar/tags/swiftui/"/>
    
  </entry>
  
  <entry>
    <title>كيفية تقليل مساحة تخزين iCloud عن طريق تقليص مقاطع الفيديو</title>
    <link href="https://leihao0.github.io/ar/How-to-reduce-iCloud-storage-by-shrink-videos/"/>
    <id>https://leihao0.github.io/ar/How-to-reduce-iCloud-storage-by-shrink-videos/</id>
    <published>2020-03-29T16:04:51.000Z</published>
    <updated>2020-12-22T00:32:16.903Z</updated>
    
    <content type="html"><![CDATA[<p>في الواقع ، يمكن أن يؤدي طرح المقاطع غير الضرورية من فيديو 4K إلى توفير المساحة بشكل أكثر فعالية </p><hr><p>عندما أقوم باستعراض مقاطع الفيديو في “الصور” ، ستظهر متى وأين التقطتها </p><p>هذه ميزة رائعة يمكن أن تساعدني في تذكر ذكرياتي<br>لكن 4K الأصلي يشغل مساحة كبيرة في iCloud </p><p>على سبيل المثال ، حتى مع HEVC (ترميز الفيديو عالي الكفاءة) ، سيشغل مقطع الفيديو 2:30 1 جيجابايت من المساحة<br>خطة iCloud 200G الخاصة بي ممتلئة تقريبًا </p><p>لذلك ، أخطط لضغط الفيديو قليلاً لتوفير بعض المساحة. </p><a id="more"></a><p>لكن، </p><h2 id="يحول-FFmpeg-الفيديو-،-حتى-إذا-كانت-هناك-بيانات-وصفية-،-فسيتم-فقد-GPS"><a href="#يحول-FFmpeg-الفيديو-،-حتى-إذا-كانت-هناك-بيانات-وصفية-،-فسيتم-فقد-GPS" class="headerlink" title="يحول FFmpeg الفيديو ، حتى إذا كانت هناك بيانات وصفية ، فسيتم فقد GPS"></a>يحول FFmpeg الفيديو ، حتى إذا كانت هناك بيانات وصفية ، فسيتم فقد GPS</h2><p>لحسن الحظ ، وجدت طريقة </p><h3 id="أدوات"><a href="#أدوات" class="headerlink" title="أدوات"></a>أدوات</h3><ul><li>FFmpeg </li><li>إكزفتول </li></ul><h4 id="تصدير-الفيديو-الأصلي-إلى-المجلد"><a href="#تصدير-الفيديو-الأصلي-إلى-المجلد" class="headerlink" title="تصدير الفيديو الأصلي إلى المجلد"></a>تصدير الفيديو الأصلي إلى المجلد</h4><p>الطريقة الشائعة لسحب مقطع فيديو من “صورة” إلى مجلد هي السماح لـ “صورة” بتحويل الفيديو </p><p>لذلك ، يجب تحديد جميع مقاطع الفيديو التي تريد تصديرها ، </p><p>`` ملف -&gt; تصدير -&gt; تصدير الأصل غير المعدل لـ … ‘’ </p><h4 id="تصغير-كل-فيديو"><a href="#تصغير-كل-فيديو" class="headerlink" title="تصغير كل فيديو"></a>تصغير كل فيديو</h4><p>تيار iPhone الافتراضي هو </p><p>“# 0: 0 (و): الفيديو: hevc (رئيسي) (hvc1 / 0x31637668) ، yuv420p (تلفزيون ، bt709)” </p><p>لذا فإن استخدام “-pix_fmt yuv420p10le” لإعادة الترميز إلى 10 بت لا يساعد </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">ffmov</span></span>() &#123;</span><br><span class="line">    mkdir -p shrunk</span><br><span class="line"></span><br><span class="line">    <span class="comment"># ffmpeg مع h265 </span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v libx265 -crf 28 -c:a copy -c:s copy -tag:v hvc1 shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    overwriteExif <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># نسخ معلومات Exif من الفيديو الأصلي إلى الحجم المنكمش * .mov </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## المشي من خلال جميع * .mov </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$f</span></span><br><span class="line">        ffmov <span class="variable">$f</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>بعد ذلك ، يمكنك نسخ هذه الرموز ولصقها في “Terminal” و “cd VideoFolder” ، ثم “shrinkVideos” </p><p>سوف يستغرق الانكماش وقتًا طويلاً </p><p>على جهاز MacBook Pro الخاص بي (15 بوصة ، 2018) 0.3 مرة فقط<br>لكن عادةً ما يتم تقليل الفيديو بمقدار 5 مرات دون فقدان الكثير من الجودة </p><p>عند الانتهاء من كل شيء ، سيتم وضع الفيديو المصغر أسفل مجلد “shrunk /“ </p><p>يمكنك بعد ذلك مقارنتها وحذف الفيديو الأصلي قبل استيراد الفيديو المصغر </p><p>حسنًا ، في النهاية لا يمكنني تحمل السرعة البطيئة للغاية ، لذلك أستخدم Nvidia 1080 GPU للتسريع لمعرفة المزيد: [CUDA GPU Accelerated h264 / h265 / HEVC Video Encoding with Staxrip](<a href="https://leihao0.github.io">https://leihao0.github.io</a> / CUDA-GPU-Accelerated-h264-h265-HEVC-Video-Encoding-with-Staxrip /) </p><p>الخطوة التالية هي وضع علامة على الفيديو المحول على أنه “hvc1” ، وإلا سيحدث خطأ عند استيراد الصور: </p><p>** غير صالح: لا يمكن إتمام العملية. (خطأ PHPhotosErrorDomain -1.) ** </p><p>لذا فإن الخطوة كلها </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">ffhvc1</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span> -&gt; <span class="variable">$1</span>.mov&quot;</span></span><br><span class="line">    ffmpeg -i <span class="string">&quot;<span class="variable">$1</span>&quot;</span> -c:v copy -c:a copy -c:s copy -tag:v hvc1 <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$1</span>.mov -&gt; <span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm <span class="string">&quot;<span class="variable">$1</span>&quot;</span>; mv <span class="string">&quot;<span class="variable">$1</span>.mov&quot;</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">overwriteExif</span></span>() &#123;</span><br><span class="line">    <span class="comment"># نسخ معلومات Exif من الفيديو الأصلي إلى الحجم المنكمش * .mov </span></span><br><span class="line">    exiftool -tagsFromFile <span class="string">&quot;<span class="variable">$1</span>&quot;</span> shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    exiftool shrunk/<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    rm shrunk/<span class="string">&quot;<span class="variable">$1_original</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">shrinkVideos</span></span>() &#123;</span><br><span class="line">    <span class="comment">## المشي من خلال جميع * .mov </span></span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> *.mov</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">        ffhvc1 <span class="string">&quot;shrunk/<span class="variable">$f</span>&quot;</span></span><br><span class="line">        overwriteExif <span class="string">&quot;<span class="variable">$f</span>&quot;</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># استخدم Staxrip لتحويل جميع مقاطع الفيديو إلى تقليص / </span></span><br><span class="line"><span class="comment"># ثم قم بتشغيل `shrinkVideos` </span></span><br></pre></td></tr></table></figure><hr><p>أتمنى أن يساعدك </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;في الواقع ، يمكن أن يؤدي طرح المقاطع غير الضرورية من فيديو 4K إلى توفير المساحة بشكل أكثر فعالية &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;عندما أقوم باستعراض مقاطع الفيديو في “الصور” ، ستظهر متى وأين التقطتها &lt;/p&gt;
&lt;p&gt;هذه ميزة رائعة يمكن أن تساعدني في تذكر ذكرياتي&lt;br&gt;لكن 4K الأصلي يشغل مساحة كبيرة في iCloud &lt;/p&gt;
&lt;p&gt;على سبيل المثال ، حتى مع HEVC (ترميز الفيديو عالي الكفاءة) ، سيشغل مقطع الفيديو 2:30 1 جيجابايت من المساحة&lt;br&gt;خطة iCloud 200G الخاصة بي ممتلئة تقريبًا &lt;/p&gt;
&lt;p&gt;لذلك ، أخطط لضغط الفيديو قليلاً لتوفير بعض المساحة. &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="FFmpeg" scheme="https://leihao0.github.io/ar/tags/ffmpeg/"/>
    
      <category term="Exiftool" scheme="https://leihao0.github.io/ar/tags/exiftool/"/>
    
      <category term="iCloud" scheme="https://leihao0.github.io/ar/tags/icloud/"/>
    
  </entry>
  
  <entry>
    <title>جدول تجزئة LeetCode</title>
    <link href="https://leihao0.github.io/ar/LeetCode-Hash-Table/"/>
    <id>https://leihao0.github.io/ar/LeetCode-Hash-Table/</id>
    <published>2020-01-11T16:00:00.000Z</published>
    <updated>2020-12-22T00:32:16.903Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Design-HashSet"><a href="#Design-HashSet" class="headerlink" title="Design HashSet"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashSet">Design HashSet</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: <span class="literal">false</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">         bucket[key] = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">contains</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="تصميم-HashMap"><a href="#تصميم-HashMap" class="headerlink" title="تصميم HashMap"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashMap">تصميم HashMap</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyHashMap</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> bucket = <span class="type">Array</span>(repeating: -<span class="number">1</span>, <span class="built_in">count</span>: <span class="number">1000001</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> key: Int, <span class="number">_</span> value: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">get</span><span class="params">(<span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> bucket[key]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> key: Int)</span></span> &#123;</span><br><span class="line">        bucket[key] = -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="يحتوي-على-نسخة-مكررة"><a href="#يحتوي-على-نسخة-مكررة" class="headerlink" title="يحتوي على نسخة مكررة"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate">يحتوي على نسخة مكررة</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(i) &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(i)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="رقم-فردي"><a href="#رقم-فردي" class="headerlink" title="رقم فردي"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Single-Number">رقم فردي</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">singleNumber</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">       <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> ^ $<span class="number">1</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="تقاطع-مصفوفتين-https-leihao0-github-io-LeetCode-Hash-Table-Intersection-of-Two-Arrays"><a href="#تقاطع-مصفوفتين-https-leihao0-github-io-LeetCode-Hash-Table-Intersection-of-Two-Arrays" class="headerlink" title="[تقاطع مصفوفتين](https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two- Arrays)"></a>[تقاطع مصفوفتين](<a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-">https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-</a> Arrays)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Happy-Number"><a href="#Happy-Number" class="headerlink" title="Happy Number"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Happy-Number">Happy Number</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> setI = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isHappy</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = n, r = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &gt; <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> t = i%<span class="number">10</span></span><br><span class="line">            r += t*t</span><br><span class="line">            i /= <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> setI.<span class="built_in">contains</span>(r) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        setI.insert(r)</span><br><span class="line">        <span class="keyword">return</span> isHappy(r)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="-1"><a href="#-1" class="headerlink" title=""></a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="مجموع-الفهرس-الأدنى-لقائمتين"><a href="#مجموع-الفهرس-الأدنى-لقائمتين" class="headerlink" title="مجموع الفهرس الأدنى لقائمتين"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Minimum-Index-Sum-of-Two-Lists">مجموع الفهرس الأدنى لقائمتين</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 452 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict2 = [<span class="type">String</span>: <span class="type">Int</span>](), least = <span class="type">Int</span>.<span class="built_in">max</span>, arr = [<span class="type">String</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list2.<span class="built_in">count</span> &#123;</span><br><span class="line">            dict2[ list2[i] ] = i</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;list1.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> j = dict2[ list1[i] ] &#123;</span><br><span class="line">                <span class="keyword">let</span> n = i+j</span><br><span class="line">                <span class="keyword">if</span> n &lt; least &#123;</span><br><span class="line">                    arr = [list1[i]]</span><br><span class="line">                    least = n</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> n == least &#123;</span><br><span class="line">                    arr.append(list1[i])</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2104 ms</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findRestaurant</span><span class="params">(<span class="number">_</span> list1: [String], <span class="number">_</span> list2: [String])</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> dict1 = list1.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict2 = list2.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1.1</span>] = $<span class="number">1.0</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> dict = <span class="type">Set</span>(dict1.keys).intersection(dict2.keys).<span class="built_in">reduce</span>(into: [<span class="type">String</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>] = dict1[$<span class="number">1</span>]! + dict2[$<span class="number">1</span>]! &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value == dict.<span class="built_in">map</span>(&#123; $<span class="number">0</span>.value &#125;).<span class="built_in">min</span>()  &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.key &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Intersection-of-Two-Arrays-II"><a href="#Intersection-of-Two-Arrays-II" class="headerlink" title="Intersection of Two Arrays II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Intersection-of-Two-Arrays-II">Intersection of Two Arrays II</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span>](), ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="يحتوي-على-نسخة-طبق-الأصل-II"><a href="#يحتوي-على-نسخة-طبق-الأصل-II" class="headerlink" title="يحتوي على نسخة طبق الأصل II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Contains-Duplicate-II">يحتوي على نسخة طبق الأصل II</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">containsNearbyDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: [<span class="type">Int</span>]]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> n = nums[i]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> arr = dict[n] &#123;</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> arr &#123;</span><br><span class="line">                    <span class="keyword">if</span> i-j &lt;= k &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                dict[n] = arr + [i]</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                dict[n] = [i]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="محدد-معدل-المسجل"><a href="#محدد-معدل-المسجل" class="headerlink" title="محدد معدل المسجل"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Logger-Rate-Limiter">محدد معدل المسجل</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Logger</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> logs = [<span class="type">String</span>: <span class="type">Int</span>]()</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">shouldPrintMessage</span><span class="params">(<span class="number">_</span> timestamp: Int, <span class="number">_</span> message: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> lastTimestamp = logs[message], timestamp - lastTimestamp &lt; <span class="number">10</span> &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        logs[message] = timestamp</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Group-Shifted-Strings"><a href="#Group-Shifted-Strings" class="headerlink" title="Group Shifted Strings"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Group-Shifted-Strings">Group Shifted Strings</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">groupStrings</span><span class="params">(<span class="number">_</span> strings: [String])</span></span> -&gt; [[<span class="type">String</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [[<span class="type">Int</span>]: [<span class="type">String</span>]]()</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> strings &#123;</span><br><span class="line">            <span class="keyword">let</span> arrS = <span class="type">Array</span>(s)</span><br><span class="line">            <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">1</span>..&lt;arrS.<span class="built_in">count</span>) &#123;</span><br><span class="line">                arr.append((<span class="type">Int</span>(arrS[i].asciiValue!)-<span class="type">Int</span>(arrS[i-<span class="number">1</span>].asciiValue!)+<span class="number">26</span>)%<span class="number">26</span>)</span><br><span class="line">            &#125;</span><br><span class="line">            dict[arr, <span class="keyword">default</span>: []] += [s]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dict.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="سودوكو-صالح"><a href="#سودوكو-صالح" class="headerlink" title="سودوكو صالح"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Valid-Sudoku">سودوكو صالح</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidSudoku</span><span class="params">(<span class="number">_</span> board: [[Character]])</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[i].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[i].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        sets = <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">9</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">9</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> <span class="built_in">c</span> = board[i][j]</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                <span class="keyword">if</span> sets[j].<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    sets[j].insert(<span class="built_in">c</span>)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> setC = <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;()</span><br><span class="line">                <span class="keyword">for</span> k <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">3</span> &#123;</span><br><span class="line">                        <span class="keyword">let</span> <span class="built_in">c</span> = board[i*<span class="number">3</span>+k][j*<span class="number">3</span>+l]</span><br><span class="line">                        <span class="keyword">if</span> <span class="built_in">c</span> == <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">continue</span> &#125;</span><br><span class="line">                        <span class="keyword">if</span> setC.<span class="built_in">contains</span>(<span class="built_in">c</span>) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            setC.insert(<span class="built_in">c</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="بحث-عن-الأشجار-الفرعية-المكررة"><a href="#بحث-عن-الأشجار-الفرعية-المكررة" class="headerlink" title="بحث عن الأشجار الفرعية المكررة"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Find-Duplicate-Subtrees">بحث عن الأشجار الفرعية المكررة</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicateSubtrees</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        dfs(root)</span><br><span class="line">        <span class="keyword">return</span> nodeDict.<span class="built_in">filter</span> &#123; $<span class="number">0</span>.value.<span class="number">1</span> &gt; <span class="number">1</span> &#125;.<span class="built_in">map</span> &#123; $<span class="number">0</span>.value.<span class="number">0</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> nodeDict = [[<span class="type">Int?</span>]: (<span class="type">TreeNode</span>, <span class="type">Int</span>)]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">dfs</span><span class="params">(<span class="number">_</span> node: TreeNode?)</span></span> -&gt; [<span class="type">Int?</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> node = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> [<span class="literal">nil</span>] &#125;</span><br><span class="line">        <span class="keyword">let</span> key: [<span class="type">Int?</span>] = [node.val] + dfs(node.<span class="keyword">left</span>) + dfs(node.<span class="keyword">right</span>)</span><br><span class="line">        nodeDict[key, <span class="keyword">default</span>: (node, <span class="number">0</span>)].<span class="number">1</span> += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> key</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="جواهر-وأحجار"><a href="#جواهر-وأحجار" class="headerlink" title="جواهر وأحجار"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Jewels-and-Stones">جواهر وأحجار</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">numJewelsInStones</span><span class="params">(<span class="number">_</span> J: String, <span class="number">_</span> S: String)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> j = <span class="type">Set</span>(<span class="type">J</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">S</span>.<span class="built_in">reduce</span>(<span class="number">0</span>) &#123; $<span class="number">0</span> + (j.<span class="built_in">contains</span>($<span class="number">1</span>) ? <span class="number">1</span> : <span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أطول-سلسلة-فرعية-بدون-تكرار-الأحرف"><a href="#أطول-سلسلة-فرعية-بدون-تكرار-الأحرف" class="headerlink" title="أطول سلسلة فرعية بدون تكرار الأحرف"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Longest-Substring-Without-Repeating-Characters">أطول سلسلة فرعية بدون تكرار الأحرف</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Two-Sum-III-Data-Structure-Design-https-leihao0-github-io-LeetCode-Hash-Table-Two-Sum-III-ie-structure-design"><a href="#Two-Sum-III-Data-Structure-Design-https-leihao0-github-io-LeetCode-Hash-Table-Two-Sum-III-ie-structure-design" class="headerlink" title="[Two Sum III - Data Structure Design](https://leihao0.github.io/LeetCode-Hash-Table/#Two-Sum-III-- ie-structure-design)"></a>[Two Sum III - Data Structure Design](<a href="https://leihao0.github.io/LeetCode-Hash-Table/#Two-Sum-III--">https://leihao0.github.io/LeetCode-Hash-Table/#Two-Sum-III--</a> ie-structure-design)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TwoSum</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> numbers = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> number: Int)</span></span> &#123;</span><br><span class="line">        numbers[number, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">find</span><span class="params">(<span class="number">_</span> value: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (k, v) <span class="keyword">in</span> numbers &#123;</span><br><span class="line">            <span class="keyword">let</span> rest = value-k</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> num = numbers[rest], (num &gt; ((rest == k) ? <span class="number">1</span> : <span class="number">0</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4Sum-II"><a href="#4Sum-II" class="headerlink" title="4Sum II"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#4Sum-II">4Sum II</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fourSumCount</span><span class="params">(<span class="number">_</span> A: [Int], <span class="number">_</span> B: [Int], <span class="number">_</span> C: [Int], <span class="number">_</span> D: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> num = <span class="number">0</span>, ab = [<span class="type">Int</span>: <span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">A</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">B</span> &#123;</span><br><span class="line">                ab[i+j, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="type">C</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="type">D</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> v = ab[-i-j] &#123; num += v &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أهم-عناصر-K"><a href="#أهم-عناصر-K" class="headerlink" title="أهم عناصر K"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Top-K-Frequent-Elements">أهم عناصر K</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">topKFrequent</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">reduce</span>(into: [<span class="type">Int</span>: <span class="type">Int</span>]()) &#123; $<span class="number">0</span>[$<span class="number">1</span>, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span> &#125;.sorted(by: &#123;$<span class="number">0</span>.value &gt; $<span class="number">1</span>.value&#125;)[..&lt;k].<span class="built_in">map</span>&#123;$<span class="number">0</span>.key&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="اختصار-فريد-للكلمة"><a href="#اختصار-فريد-للكلمة" class="headerlink" title="اختصار فريد للكلمة"></a><a href="https://leihao0.github.io/LeetCode-Hash-Table/#Unique-Word-Abbreviation">اختصار فريد للكلمة</a></h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ValidWordAbbr</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> abbrDict = [<span class="type">String</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;]()</span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> dictionary: [<span class="type">String</span>]) &#123;</span><br><span class="line">        dictionary.forEach &#123; abbrDict[abbreviate($<span class="number">0</span>), <span class="keyword">default</span>: <span class="type">Set</span>&lt;<span class="type">String</span>&gt;()].insert($<span class="number">0</span>) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isUnique</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> abbrSet = abbrDict[abbreviate(word)] &#123;</span><br><span class="line">            <span class="keyword">return</span> abbrSet.<span class="built_in">contains</span>(word) &amp;&amp; abbrSet.<span class="built_in">count</span> == <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">abbreviate</span><span class="params">(<span class="number">_</span> word: String)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> word.<span class="built_in">count</span> &lt; <span class="number">3</span> ? word : (<span class="type">String</span>(word.first!) + <span class="type">String</span>(word.<span class="built_in">count</span>-<span class="number">2</span>) + <span class="type">String</span>(word.last!))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="إدراج-حذف-GetRandom-O-1-lt-https-leihao0-github-io-LeetCode-Hash-Table-Insert-Delete-GetRandom-O-1-gt"><a href="#إدراج-حذف-GetRandom-O-1-lt-https-leihao0-github-io-LeetCode-Hash-Table-Insert-Delete-GetRandom-O-1-gt" class="headerlink" title="[إدراج حذف GetRandom O (1)](&lt;https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O (1)&gt;)"></a>[إدراج حذف GetRandom O (1)](&lt;<a href="https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O">https://leihao0.github.io/LeetCode-Hash-Table/#Insert-Delete-GetRandom-O</a> (1)&gt;)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 220 ms, 30.27%</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RandomizedSet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> vals = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.insert(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">remove</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> !vals.<span class="built_in">contains</span>(val) &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        vals.remove(val)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getRandom</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> vals.randomElement() ?? <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Design-HashSet&quot;&gt;&lt;a href=&quot;#Design-HashSet&quot; class=&quot;headerlink&quot; title=&quot;Design HashSet&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leihao0.github.io/LeetCode-Hash-Table/#Design-HashSet&quot;&gt;Design HashSet&lt;/a&gt;&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyHashSet&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; bucket = &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;(repeating: &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1000001&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: Int)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bucket[key] = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: Int)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         bucket[key] = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: Int)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; bucket[key]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ar/tags/leetcode/"/>
    
      <category term="Swift" scheme="https://leihao0.github.io/ar/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>شجرة بحث LeetCode الثنائية</title>
    <link href="https://leihao0.github.io/ar/LeetCode-Binary-Search-Tree/"/>
    <id>https://leihao0.github.io/ar/LeetCode-Binary-Search-Tree/</id>
    <published>2020-01-09T16:00:00.000Z</published>
    <updated>2020-12-22T00:32:16.902Z</updated>
    
    <content type="html"><![CDATA[<h2 id="تحقق-من-شجرة-البحث-الثنائية"><a href="#تحقق-من-شجرة-البحث-الثنائية" class="headerlink" title="تحقق من شجرة البحث الثنائية"></a>تحقق من شجرة البحث الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidBST</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">max</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> node: TreeNode?, <span class="number">_</span> lower: Int, <span class="number">_</span> upper: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> n = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> n.val &lt;= lower || n.val &gt;= upper &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper(n.<span class="keyword">left</span>, lower, n.val) &amp;&amp; helper(n.<span class="keyword">right</span>, n.val, upper)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="مكرر-شجرة-البحث-الثنائي"><a href="#مكرر-شجرة-البحث-الثنائي" class="headerlink" title="مكرر شجرة البحث الثنائي"></a>مكرر شجرة البحث الثنائي</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BSTIterator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> queue = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        helper(root.<span class="keyword">left</span>)</span><br><span class="line">        queue.append(root.val)</span><br><span class="line">        helper(root.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> root: <span class="type">TreeNode?</span>) &#123;</span><br><span class="line">        helper(root)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">next</span><span class="params">()</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> queue.removeFirst()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasNext</span><span class="params">()</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !queue.isEmpty</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="البحث-في-شجرة-البحث-الثنائية"><a href="#البحث-في-شجرة-البحث-الثنائية" class="headerlink" title="البحث في شجرة البحث الثنائية"></a>البحث في شجرة البحث الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == val &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">left</span>, val)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">right</span>, val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أدخل-العملية-في-شجرة-البحث-الثنائية"><a href="#أدخل-العملية-في-شجرة-البحث-الثنائية" class="headerlink" title="أدخل العملية في شجرة البحث الثنائية"></a>أدخل العملية في شجرة البحث الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">insertIntoBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(<span class="number">_</span> root: TreeNode? = root, <span class="number">_</span> val: Int = val)</span></span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> l = root.<span class="keyword">left</span> &#123;</span><br><span class="line">                    insert(l, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">left</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> r = root.<span class="keyword">right</span> &#123;</span><br><span class="line">                    insert(r, val)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    root.<span class="keyword">right</span> = <span class="type">TreeNode</span>(val)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        insert()</span><br><span class="line">        <span class="keyword">return</span> root ?? <span class="type">TreeNode</span>(val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="احذف-العقدة-في-شجرة-البحث-الثنائية"><a href="#احذف-العقدة-في-شجرة-البحث-الثنائية" class="headerlink" title="احذف العقدة في شجرة البحث الثنائية"></a>احذف العقدة في شجرة البحث الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deleteNode</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> key: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == key &#123;</span><br><span class="line">            <span class="keyword">if</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> != <span class="literal">nil</span> &#123;</span><br><span class="line">                <span class="keyword">var</span> p = root.<span class="keyword">right</span></span><br><span class="line">                <span class="keyword">while</span> p?.<span class="keyword">left</span> != <span class="literal">nil</span> &#123;  p = p?.<span class="keyword">left</span> &#125;</span><br><span class="line">                p?.<span class="keyword">left</span> = root.<span class="keyword">left</span></span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">right</span></span><br><span class="line">            &#125; <span class="keyword">else</span>  &#123;</span><br><span class="line">                <span class="keyword">return</span> root.<span class="keyword">left</span> != <span class="literal">nil</span> ? root.<span class="keyword">left</span> : root.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> key &lt; root.val &#123;</span><br><span class="line">            root.<span class="keyword">left</span> = deleteNode(root.<span class="keyword">left</span>, key)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            root.<span class="keyword">right</span> = deleteNode(root.<span class="keyword">right</span>, key)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أكبر-عنصر-في-دفق-البيانات"><a href="#أكبر-عنصر-في-دفق-البيانات" class="headerlink" title="أكبر عنصر في دفق البيانات"></a>أكبر عنصر في دفق البيانات</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">KthLargest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="type">Int</span>]()</span><br><span class="line">    <span class="keyword">var</span> k = <span class="number">0</span></span><br><span class="line">    <span class="keyword">init</span>(<span class="number">_</span> k: <span class="type">Int</span>, <span class="number">_</span> nums: [<span class="type">Int</span>]) &#123;</span><br><span class="line">        <span class="keyword">self</span>.k = k</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> nums &#123; add(i) &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(<span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.<span class="built_in">count</span> &lt; k || val &gt; arr.first! &#123;</span><br><span class="line">            <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">            <span class="keyword">while</span> i &lt; arr.<span class="built_in">count</span>, val &gt; arr[i] &#123;</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">            arr.insert(val, at: i)</span><br><span class="line">            <span class="keyword">if</span> arr.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">                arr.removeFirst()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr.first!</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أقرب-سلف-مشترك-لشجرة-البحث-الثنائية"><a href="#أقرب-سلف-مشترك-لشجرة-البحث-الثنائية" class="headerlink" title="أقرب سلف مشترك لشجرة البحث الثنائية"></a>أقرب سلف مشترك لشجرة البحث الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">lowestCommonAncestor</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root, <span class="keyword">let</span> pv = p?.val, <span class="keyword">let</span> qv = q?.val <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val &gt;= <span class="built_in">min</span>(pv, qv) &amp;&amp; root.val &lt;= <span class="built_in">max</span>(pv, qv) &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">return</span> root.val &gt; <span class="built_in">max</span>(pv, qv) ? lowestCommonAncestor(root.<span class="keyword">left</span>, p, q) : lowestCommonAncestor(root.<span class="keyword">right</span>, p, q)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="هناك-عناصر-مكررة-ثالثا"><a href="#هناك-عناصر-مكررة-ثالثا" class="headerlink" title="هناك عناصر مكررة ثالثا"></a>هناك عناصر مكررة ثالثا</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="شجرة-ثنائية-متوازنة"><a href="#شجرة-ثنائية-متوازنة" class="headerlink" title="شجرة ثنائية متوازنة"></a>شجرة ثنائية متوازنة</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isBalanced</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root).<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; (<span class="type">Int</span>, <span class="type">Bool</span>) &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> r = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> (<span class="number">0</span>, <span class="literal">true</span>) &#125;</span><br><span class="line">        <span class="keyword">let</span> rl = helper(r.<span class="keyword">left</span>), rr = helper(r.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span> + <span class="built_in">max</span>(rl.<span class="number">0</span>, rr.<span class="number">0</span>), rl.<span class="number">1</span> &amp;&amp; rr.<span class="number">1</span> &amp;&amp; <span class="built_in">abs</span>(rl.<span class="number">0</span> - rr.<span class="number">0</span>) &lt;= <span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="تحويل-مصفوفة-مرتبة-إلى-شجرة-بحث-ثنائية"><a href="#تحويل-مصفوفة-مرتبة-إلى-شجرة-بحث-ثنائية" class="headerlink" title="تحويل مصفوفة مرتبة إلى شجرة بحث ثنائية"></a>تحويل مصفوفة مرتبة إلى شجرة بحث ثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortedArrayToBST</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = nums.<span class="built_in">count</span>, h = n/<span class="number">2</span>, h1 = h+<span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> r = <span class="type">TreeNode</span>(nums[n/<span class="number">2</span>])</span><br><span class="line">        r.<span class="keyword">left</span> = sortedArrayToBST(<span class="type">Array</span>(nums[<span class="number">0</span>..&lt;h]))</span><br><span class="line">        r.<span class="keyword">right</span> = sortedArrayToBST(<span class="type">Array</span>(nums[h1...]))</span><br><span class="line">        <span class="keyword">return</span> r</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;تحقق-من-شجرة-البحث-الثنائية&quot;&gt;&lt;a href=&quot;#تحقق-من-شجرة-البحث-الثنائية&quot; class=&quot;headerlink&quot; title=&quot;تحقق من شجرة البحث الثنائية&quot;&gt;&lt;/a&gt;تحقق 
      
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ar/tags/leetcode/"/>
    
      <category term="Swift" scheme="https://leihao0.github.io/ar/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>شجرة LeetCode N-ary</title>
    <link href="https://leihao0.github.io/ar/leetcode-n-ary-tree/"/>
    <id>https://leihao0.github.io/ar/leetcode-n-ary-tree/</id>
    <published>2020-01-08T16:00:00.000Z</published>
    <updated>2020-12-22T00:32:16.902Z</updated>
    
    <content type="html"><![CDATA[<h2 id="اجتياز-N-ary-Tree-للطلب-المسبق"><a href="#اجتياز-N-ary-Tree-للطلب-المسبق" class="headerlink" title="اجتياز N-ary Tree للطلب المسبق"></a>اجتياز N-ary Tree للطلب المسبق</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children.reversed()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="N-و-Tree-Postorder-Traversal"><a href="#N-و-Tree-Postorder-Traversal" class="headerlink" title="N- و Tree Postorder Traversal"></a>N- و Tree Postorder Traversal</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">postorder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">    <span class="keyword">var</span> stack = [root], ans = [<span class="type">Int</span>]()</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> node = stack.popLast(), <span class="keyword">let</span> n = node &#123;</span><br><span class="line">            ans.append(n.val)</span><br><span class="line">            stack += n.children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans.reversed()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="اجتياز-ترتيب-مستوى-شجرة-N-ary"><a href="#اجتياز-ترتيب-مستوى-شجرة-N-ary" class="headerlink" title="اجتياز ترتيب مستوى شجرة N-ary"></a>اجتياز ترتيب مستوى شجرة N-ary</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> cur = [root], ans = [[root.val]]</span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            <span class="keyword">let</span> children = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            <span class="keyword">if</span> !children.isEmpty &#123; ans.append( children.<span class="built_in">map</span> &#123; $<span class="number">0</span>.val &#125; ) &#125;</span><br><span class="line">            cur = children</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أقصى-عمق-لشجرة-N-ary"><a href="#أقصى-عمق-لشجرة-N-ary" class="headerlink" title="أقصى عمق لشجرة N-ary"></a>أقصى عمق لشجرة N-ary</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> cur = root == <span class="literal">nil</span> ? [] : [root!], depth = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> !cur.isEmpty &#123;</span><br><span class="line">            cur = cur.flatMap &#123; $<span class="number">0</span>.children &#125;</span><br><span class="line">            depth += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> depth</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="تشفير-شجرة-N-ary-إلى-شجرة-ثنائية"><a href="#تشفير-شجرة-N-ary-إلى-شجرة-ثنائية" class="headerlink" title="تشفير شجرة N-ary إلى شجرة ثنائية"></a>تشفير شجرة N-ary إلى شجرة ثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">encode</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> tn = <span class="type">TreeNode</span>(root.val); <span class="keyword">var</span> p: <span class="type">TreeNode?</span> = tn</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> n = root.children.first &#123;</span><br><span class="line">            p?.<span class="keyword">left</span> = encode(n); p = p?.<span class="keyword">left</span></span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> root.children[<span class="number">1</span>...] &#123;</span><br><span class="line">                p?.<span class="keyword">right</span> = encode(n); p = p?.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> tn</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">decode</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> n = <span class="type">Node</span>(root.val); <span class="keyword">var</span> p = root.<span class="keyword">left</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> l = decode(p) &#123; n.children.append(l) &#125;</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> q = p?.<span class="keyword">right</span>, <span class="keyword">let</span> r = decode(q) &#123;</span><br><span class="line">            n.children.append(r); p = q</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="تسلسل-وإلغاء-تسلسل-شجرة-N-ary"><a href="#تسلسل-وإلغاء-تسلسل-شجرة-N-ary" class="headerlink" title="تسلسل وإلغاء تسلسل شجرة N-ary"></a>تسلسل وإلغاء تسلسل شجرة N-ary</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">serialize</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">&quot;$&quot;</span> &#125;</span><br><span class="line">    <span class="keyword">var</span> s = <span class="string">&quot;\(root.val),\(root.children.count),&quot;</span></span><br><span class="line">        <span class="keyword">for</span> child <span class="keyword">in</span> root.children &#123;</span><br><span class="line">            s += serialize(child)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">(<span class="number">_</span> data: String)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> arr = data.components(separatedBy: <span class="string">&quot;,&quot;</span>).<span class="built_in">compactMap</span> &#123; <span class="type">Int</span>($<span class="number">0</span>) &#125;; <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">()</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> i &gt;= arr.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">Node</span>(arr[i])</span><br><span class="line">            i += <span class="number">2</span>; <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;arr[i-<span class="number">1</span>] &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> a = deserialize() &#123; n.children.append(a) &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deserialize()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;اجتياز-N-ary-Tree-للطلب-المسبق&quot;&gt;&lt;a href=&quot;#اجتياز-N-ary-Tree-للطلب-المسبق&quot; class=&quot;headerlink&quot; title=&quot;اجتياز N-ary Tree للطلب المسبق&quot;&gt;&lt;/a&gt;اجتياز N-ary Tree للطلب المسبق&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;preorder&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; root: Node?)&lt;/span&gt;&lt;/span&gt; -&amp;gt; [&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; stack = [root], ans = [&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;]()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; node = stack.popLast(), &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; n = node &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans.append(n.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            stack += n.children.reversed()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ar/tags/leetcode/"/>
    
      <category term="Swift" scheme="https://leihao0.github.io/ar/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>بحث LeetCode الثنائي</title>
    <link href="https://leihao0.github.io/ar/LeetCode-Binary-Search/"/>
    <id>https://leihao0.github.io/ar/LeetCode-Binary-Search/</id>
    <published>2020-01-06T16:00:00.000Z</published>
    <updated>2020-12-22T00:32:16.901Z</updated>
    
    <content type="html"><![CDATA[<h2 id="بحث-ثنائي"><a href="#بحث-ثنائي" class="headerlink" title="بحث ثنائي"></a>بحث ثنائي</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123; i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; j = mid-<span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="سكرت-x"><a href="#سكرت-x" class="headerlink" title="سكرت (x)"></a>سكرت (x)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mySqrt</span><span class="params">(<span class="number">_</span> x: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> target = <span class="type">Int</span>(sqrt(<span class="type">Double</span>(x)))</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = x</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> mid == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            mid &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="تخمين-الرقم-أعلى-أو-أقل"><a href="#تخمين-الرقم-أعلى-أو-أقل" class="headerlink" title="تخمين الرقم أعلى أو أقل"></a>تخمين الرقم أعلى أو أقل</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> : <span class="title">GuessGame</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">guessNumber</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j-i)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">switch</span> guess(mid) &#123;</span><br><span class="line">                <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">                    j = mid-<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                    i = mid+<span class="number">1</span></span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                    <span class="keyword">return</span> mid</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="البحث-في-مصفوفة-تم-فرزها-بالتناوب"><a href="#البحث-في-مصفوفة-تم-فرزها-بالتناوب" class="headerlink" title="البحث في مصفوفة تم فرزها بالتناوب"></a>البحث في مصفوفة تم فرزها بالتناوب</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i + (j - i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &gt;= nums[i] &#123;</span><br><span class="line">                (target &gt;= nums[i] &amp;&amp; target &lt; nums[mid]) ? (j = mid-<span class="number">1</span>) : (i = mid+<span class="number">1</span>)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                (target &lt;= nums[j] &amp;&amp; target &gt; nums[mid]) ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>  -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أول-نسخة-سيئة"><a href="#أول-نسخة-سيئة" class="headerlink" title="أول نسخة سيئة"></a>أول نسخة سيئة</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>: <span class="title">VersionControl</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">firstBadVersion</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">1</span>, j = n</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> h = i + (j-i)/<span class="number">2</span></span><br><span class="line">            isBadVersion(h) ? (j = h-<span class="number">1</span>) : (i = h + <span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ابحث-عن-عنصر-الذروة"><a href="#ابحث-عن-عنصر-الذروة" class="headerlink" title="ابحث عن عنصر الذروة"></a>ابحث عن عنصر الذروة</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[mid+<span class="number">1</span>] ? (r = mid) : (l = mid+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findPeakElement</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> l: Int, <span class="number">_</span> r: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (l == r) &#123; <span class="keyword">return</span> l &#125;</span><br><span class="line">            <span class="keyword">let</span> mid = l + (r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> (nums[mid] &gt; nums[mid+<span class="number">1</span>]) ? search(l, mid) : search(mid+<span class="number">1</span>, r)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> search(<span class="number">0</span>, nums.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="البحث-عن-الحد-الأدنى-في-مصفوفة-تم-فرزها-مستديرة"><a href="#البحث-عن-الحد-الأدنى-في-مصفوفة-تم-فرزها-مستديرة" class="headerlink" title="البحث عن الحد الأدنى في مصفوفة تم فرزها مستديرة"></a>البحث عن الحد الأدنى في مصفوفة تم فرزها مستديرة</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)&gt;&gt;<span class="number">1</span></span><br><span class="line">            nums[mid] &gt; nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ابحث-عن-المدى"><a href="#ابحث-عن-المدى" class="headerlink" title="ابحث عن المدى"></a>ابحث عن المدى</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchRange</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.isEmpty &#123; <span class="keyword">return</span> [-<span class="number">1</span>, -<span class="number">1</span>] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] == target &#123;</span><br><span class="line">                i = mid; j = mid</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; target &#123;</span><br><span class="line">                i = mid+<span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                j = mid-<span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i-<span class="number">1</span> &gt;= <span class="number">0</span>, nums[i-<span class="number">1</span>] == target &#123; i -= <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j+<span class="number">1</span> &lt; nums.<span class="built_in">count</span>, nums[j+<span class="number">1</span>] == target &#123; j += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i] == target ? [i, j] : [-<span class="number">1</span>, -<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ابحث-عن-أقرب-عناصر-K"><a href="#ابحث-عن-أقرب-عناصر-K" class="headerlink" title="ابحث عن أقرب عناصر K."></a>ابحث عن أقرب عناصر K.</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findClosestElements</span><span class="params">(<span class="number">_</span> arr: [Int], <span class="number">_</span> k: Int, <span class="number">_</span> x: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> arr.isEmpty &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = arr.<span class="built_in">count</span>, ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> arr[mid] == x &#123; i = mid &#125;</span><br><span class="line">            arr[mid] &lt; x ? (i = mid+<span class="number">1</span>) : (j = mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        j = i+k &lt; arr.<span class="built_in">count</span> ? i+k : arr.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        i = (i-k) &gt;= <span class="number">0</span> ? (i-k) : <span class="number">0</span></span><br><span class="line">        ans = <span class="type">Array</span>(arr[i...j])</span><br><span class="line">        <span class="keyword">while</span> ans.<span class="built_in">count</span> &gt; k &#123;</span><br><span class="line">            <span class="built_in">abs</span>(x-ans.first!) &lt;= <span class="built_in">abs</span>(x-ans.last!) ? ans.removeLast() : ans.removeFirst()</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أقرب-قيمة-شجرة-بحث-ثنائية"><a href="#أقرب-قيمة-شجرة-بحث-ثنائية" class="headerlink" title="أقرب قيمة شجرة بحث ثنائية"></a>أقرب قيمة شجرة بحث ثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">closestValue</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> target: Double)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> p = root, v = p!.val</span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">abs</span>(<span class="type">Double</span>(p!.val)-target) &lt; <span class="built_in">abs</span>(<span class="type">Double</span>(v)-target) &#123; v = p!.val &#125;</span><br><span class="line">            p = target &lt; <span class="type">Double</span>(p!.val) ? p!.<span class="keyword">left</span> : p!.<span class="keyword">right</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ابحث-في-مصفوفة-مصنفة-ذات-حجم-غير-معروف"><a href="#ابحث-في-مصفوفة-مصنفة-ذات-حجم-غير-معروف" class="headerlink" title="ابحث في مصفوفة مصنفة ذات حجم غير معروف"></a>ابحث في مصفوفة مصنفة ذات حجم غير معروف</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">search</span><span class="params">(<span class="number">_</span> reader: ArrayReader, <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> reader.<span class="keyword">get</span>(<span class="number">0</span>) == target &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> reader.<span class="keyword">get</span>(j) &lt; target &#123;</span><br><span class="line">            i = j; j &lt;&lt;= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt;= j &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = i+(j-i)&gt;&gt;<span class="number">1</span>, v = reader.<span class="keyword">get</span>(mid)</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">return</span> mid &#125;</span><br><span class="line">            v &lt; target ? (i=mid+<span class="number">1</span>) : (j=mid-<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="الأسرى-س-،-ن"><a href="#الأسرى-س-،-ن" class="headerlink" title="الأسرى (س ، ن)"></a>الأسرى (س ، ن)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">myPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="number">0</span>: <span class="number">1.0</span>, <span class="number">1</span>: x]</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">fastPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n] &#123; <span class="keyword">return</span> v &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> h = fastPow(x, n/<span class="number">2</span>), v = n&amp;<span class="number">1</span> == <span class="number">0</span> ? h*h : x*h*h</span><br><span class="line">            dict[n] = v</span><br><span class="line">            <span class="keyword">return</span> v</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> v = fastPow(x, <span class="built_in">abs</span>(n))</span><br><span class="line">        <span class="keyword">return</span> n &lt; <span class="number">0</span> ? <span class="number">1</span>/v : v</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ساحة-مثالية-صالحة"><a href="#ساحة-مثالية-صالحة" class="headerlink" title="ساحة مثالية صالحة"></a>ساحة مثالية صالحة</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isPerfectSquare</span><span class="params">(<span class="number">_</span> num: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> x = (num+<span class="number">1</span>)/<span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> x*x &gt; num &#123;</span><br><span class="line">            x = (x + num/x) / <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> x*x == num</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="البحث-عن-أصغر-حرف-أكبر-من-الهدف"><a href="#البحث-عن-أصغر-حرف-أكبر-من-الهدف" class="headerlink" title="البحث عن أصغر حرف أكبر من الهدف"></a>البحث عن أصغر حرف أكبر من الهدف</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">nextGreatestLetter</span><span class="params">(<span class="number">_</span> letters: [Character], <span class="number">_</span> target: Character)</span></span> -&gt; <span class="type">Character</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> <span class="built_in">c</span> <span class="keyword">in</span> letters &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">c</span> &gt; target &#123; <span class="keyword">return</span> <span class="built_in">c</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> letters.first!</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="البحث-عن-الحد-الأدنى-في-مصفوفة-تم-فرزها-مستديرة-1"><a href="#البحث-عن-الحد-الأدنى-في-مصفوفة-تم-فرزها-مستديرة-1" class="headerlink" title="البحث عن الحد الأدنى في مصفوفة تم فرزها مستديرة"></a>البحث عن الحد الأدنى في مصفوفة تم فرزها مستديرة</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            nums[mid] &gt;= nums[r] ? (l = mid+<span class="number">1</span>) : (r = mid)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="البحث-عن-الحد-الأدنى-في-Rotated-Sorted-Array-II"><a href="#البحث-عن-الحد-الأدنى-في-Rotated-Sorted-Array-II" class="headerlink" title="البحث عن الحد الأدنى في Rotated Sorted Array II"></a>البحث عن الحد الأدنى في Rotated Sorted Array II</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMin</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, r = nums.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> l &lt; r &#123;</span><br><span class="line">            <span class="keyword">let</span> mid = l+(r-l)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> nums[mid] &gt; nums[r] &#123; l = mid+<span class="number">1</span> &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &lt; nums[r]  &#123; r = mid &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123; r -= <span class="number">1</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[l]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="تقاطع-صفيفين"><a href="#تقاطع-صفيفين" class="headerlink" title="تقاطع صفيفين"></a>تقاطع صفيفين</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersection</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">let</span> set1 = <span class="type">Set</span>(nums1), set2 = <span class="type">Set</span>(nums2)</span><br><span class="line">        <span class="keyword">return</span> <span class="type">Array</span>(set1.intersection(set2))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="تقاطع-صفيفين-II"><a href="#تقاطع-صفيفين-II" class="headerlink" title="تقاطع صفيفين II"></a>تقاطع صفيفين II</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">intersect</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> dict = [<span class="type">Int</span>: <span class="type">Int</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums1 &#123;</span><br><span class="line">            dict[n, <span class="keyword">default</span>: <span class="number">0</span>] += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> nums2 &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> v = dict[n], v &gt; <span class="number">0</span> &#123;</span><br><span class="line">                ans.append(n)</span><br><span class="line">                dict[n] = v - <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="اثنان-Sum-II-يتم-فرز-صفيف-الإدخال"><a href="#اثنان-Sum-II-يتم-فرز-صفيف-الإدخال" class="headerlink" title="اثنان Sum II - يتم فرز صفيف الإدخال"></a>اثنان Sum II - يتم فرز صفيف الإدخال</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">twoSum</span><span class="params">(<span class="number">_</span> numbers: [Int], <span class="number">_</span> target: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = numbers.<span class="built_in">count</span>-<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; j &#123;</span><br><span class="line">            <span class="keyword">let</span> v =  numbers[i]+numbers[j]</span><br><span class="line">            <span class="keyword">if</span> v == target &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            v &lt; target ? (i+=<span class="number">1</span>) : (j-=<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [i+<span class="number">1</span>, j+<span class="number">1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ابحث-عن-الرقم-المكرر"><a href="#ابحث-عن-الرقم-المكرر" class="headerlink" title="ابحث عن الرقم المكرر"></a>ابحث عن الرقم المكرر</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findDuplicate</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> <span class="keyword">set</span> = <span class="type">Set</span>&lt;<span class="type">Int</span>&gt;(), i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">set</span>.<span class="built_in">contains</span>(nums[i]) &#123; <span class="keyword">break</span> &#125;</span><br><span class="line">            <span class="keyword">set</span>.insert(nums[i]); i+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[i]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="وسيط-صفيفتين-تم-فرزهما"><a href="#وسيط-صفيفتين-تم-فرزهما" class="headerlink" title="وسيط صفيفتين تم فرزهما"></a>وسيط صفيفتين تم فرزهما</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="number">_</span> nums1: [Int], <span class="number">_</span> nums2: [Int])</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> nums = nums1+nums2</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span>, j &lt; nums2.<span class="built_in">count</span> &#123;</span><br><span class="line">            nums1[i] &lt; nums2[j] ? (nums[k] = nums1[i], i+=<span class="number">1</span>) : (nums[k] = nums2[j], j+=<span class="number">1</span>); k+=<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i &lt; nums1.<span class="built_in">count</span> &#123; nums[k] = nums1[i]; i+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">while</span> j &lt; nums2.<span class="built_in">count</span> &#123; nums[k] = nums2[j]; j+=<span class="number">1</span>; k+=<span class="number">1</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> h = nums.<span class="built_in">count</span>/<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> nums.<span class="built_in">count</span>&amp;<span class="number">1</span> == <span class="number">1</span> ? <span class="type">Double</span>(nums[h]) : <span class="type">Double</span>(nums[h-<span class="number">1</span>]+nums[h])/<span class="number">2.0</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ابحث-عن-أصغر-مسافة-زوج-من-K-th"><a href="#ابحث-عن-أصغر-مسافة-زوج-من-K-th" class="headerlink" title="ابحث عن أصغر مسافة زوج من K-th"></a>ابحث عن أصغر مسافة زوج من K-th</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">smallestDistancePair</span><span class="params">(<span class="number">_</span> nums: [Int], <span class="number">_</span> k: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> nums = nums.sorted()</span><br><span class="line">        <span class="keyword">var</span> l = <span class="number">0</span>, h = nums.last!-nums.first!</span><br><span class="line">        <span class="keyword">while</span> l &lt; h &#123;</span><br><span class="line">            <span class="keyword">let</span> m = (l+h)/<span class="number">2</span></span><br><span class="line">            <span class="keyword">var</span> <span class="built_in">count</span> = <span class="number">0</span>, l1 = <span class="number">0</span></span><br><span class="line">            <span class="keyword">for</span> r1 <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (nums[r1]-nums[l1]) &gt; m &#123; l1 += <span class="number">1</span> &#125;</span><br><span class="line">                <span class="built_in">count</span> += r1-l1</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">count</span> &gt;= k ? (h = m): (l = m+<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> l</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="انقسام-المصفوفة-أكبر-مجموع"><a href="#انقسام-المصفوفة-أكبر-مجموع" class="headerlink" title="انقسام المصفوفة أكبر مجموع"></a>انقسام المصفوفة أكبر مجموع</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;بحث-ثنائي&quot;&gt;&lt;a href=&quot;#بحث-ثنائي&quot; class=&quot;headerlink&quot; title=&quot;بحث ثنائي&quot;&gt;&lt;/a&gt;بحث ثنائي&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; nums: [Int], &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; target: Int)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, j = nums.&lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; i &amp;lt;= j &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; mid = i + (j-i)/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; nums[mid] == target &amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mid &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; nums[mid] &amp;lt; target &amp;#123; i = mid+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; j = mid-&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ar/tags/leetcode/"/>
    
      <category term="Swift" scheme="https://leihao0.github.io/ar/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>تكرار LeetCode 2</title>
    <link href="https://leihao0.github.io/ar/LeetCode-Recursion-2/"/>
    <id>https://leihao0.github.io/ar/LeetCode-Recursion-2/</id>
    <published>2020-01-04T16:00:00.000Z</published>
    <updated>2020-12-22T00:32:16.901Z</updated>
    
    <content type="html"><![CDATA[<h2 id="فرز-صفيف"><a href="#فرز-صفيف" class="headerlink" title="فرز صفيف"></a>فرز صفيف</h2><a id="more"></a><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">sortArray</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> nums &#125;</span><br><span class="line">        <span class="keyword">let</span> i = nums.<span class="built_in">count</span>/<span class="number">2</span>, l = sortArray(<span class="type">Array</span>(nums[..&lt;i])), r = sortArray(<span class="type">Array</span>(nums[i...]))</span><br><span class="line">        <span class="keyword">return</span> merge(l, r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(<span class="number">_</span> n1: [Int], <span class="number">_</span> n2: [Int])</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> i1 = <span class="number">0</span>, i2 = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> arr = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> i1 &lt; n1.<span class="built_in">count</span>, i2 &lt; n2.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> n1[i1] &lt; n2[i2] &#123;</span><br><span class="line">                arr.append(n1[i1])</span><br><span class="line">                i1 += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                arr.append(n2[i2])</span><br><span class="line">                i2 += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i1 &lt; n1.<span class="built_in">count</span> &#123;</span><br><span class="line">            arr.append(n1[i1])</span><br><span class="line">            i1 += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> i2 &lt; n2.<span class="built_in">count</span> &#123;</span><br><span class="line">            arr.append(n2[i2])</span><br><span class="line">            i2 += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="تحقق-من-صحة-شجرة-البحث-الثنائية"><a href="#تحقق-من-صحة-شجرة-البحث-الثنائية" class="headerlink" title="تحقق من صحة شجرة البحث الثنائية"></a>تحقق من صحة شجرة البحث الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isValidBST</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> helper(root, <span class="type">Int</span>.<span class="built_in">min</span>, <span class="type">Int</span>.<span class="built_in">max</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> node: TreeNode?, <span class="number">_</span> lower: Int, <span class="number">_</span> upper: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> n = node <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> n.val &lt;= lower || n.val &gt;= upper &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper(n.<span class="keyword">left</span>, lower, n.val) &amp;&amp; helper(n.<span class="keyword">right</span>, n.val, upper)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ابحث-في-2D-Matrix-II"><a href="#ابحث-في-2D-Matrix-II" class="headerlink" title="ابحث في 2D Matrix II"></a>ابحث في 2D Matrix II</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchMatrix</span><span class="params">(<span class="number">_</span> matrix: [[Int]], <span class="number">_</span> target: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> n = matrix.<span class="built_in">count</span>-<span class="number">1</span>, m = matrix.first?.<span class="built_in">count</span> ?? <span class="number">0</span>; <span class="keyword">var</span> i = n, j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &gt;= <span class="number">0</span> &amp;&amp; j &lt; m &#123;</span><br><span class="line">            <span class="keyword">if</span> target &gt; matrix[i][j] &#123;</span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> target &lt; matrix[i][j] &#123;</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="N-كوينز-الثاني"><a href="#N-كوينز-الثاني" class="headerlink" title="N- كوينز الثاني"></a>N- كوينز الثاني</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">totalNQueens</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">1</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(n-<span class="number">1</span>, <span class="type">Array</span>(repeating: <span class="type">Array</span>(repeating: <span class="number">1</span>, <span class="built_in">count</span>: n), <span class="built_in">count</span>: n)).<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> i: Int, <span class="number">_</span> board: [[Int]])</span></span> -&gt; [[[<span class="type">Int</span>]]] &#123;</span><br><span class="line">        <span class="keyword">if</span> i == <span class="number">0</span> &#123; <span class="keyword">return</span> put(i, board) &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(i-<span class="number">1</span>, board).<span class="built_in">reduce</span>( [[[<span class="type">Int</span>]]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> i: Int, <span class="number">_</span> board: [[Int]])</span></span> -&gt; [[[<span class="type">Int</span>]]] &#123;</span><br><span class="line">        <span class="keyword">var</span> boards = [[[<span class="type">Int</span>]]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;board.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> board[i][j] == <span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> board = put((i,j), board)</span><br><span class="line">                boards.append(board)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> boards</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> p: <span class="params">(Int, Int)</span></span></span>, <span class="number">_</span> board: [[<span class="type">Int</span>]]) -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">let</span> n = board.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> board = board</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;n &#123; board[i][p.<span class="number">1</span>] = <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;n &#123; board[p.<span class="number">0</span>][j] = <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">var</span> p0 = p.<span class="number">0</span>, p1 = p.<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> p0 &lt; n, p1 &lt; n, p0 &gt;= <span class="number">0</span>, p1 &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            board[p0][p1] = <span class="number">0</span></span><br><span class="line">            p0 += <span class="number">1</span>; p1 += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        p0 = p.<span class="number">0</span>; p1 = p.<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> p0 &lt; n, p1 &lt; n, p0 &gt;= <span class="number">0</span>, p1 &gt;= <span class="number">0</span> &#123;</span><br><span class="line">            board[p0][p1] = <span class="number">0</span></span><br><span class="line">            p0 += <span class="number">1</span>; p1 -= <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        board[p.<span class="number">0</span>][p.<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> board</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="منظف-غرفة-الروبوت"><a href="#منظف-غرفة-الروبوت" class="headerlink" title="منظف غرفة الروبوت"></a>منظف غرفة الروبوت</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">cleanRoom</span><span class="params">(<span class="number">_</span> robot: Robot)</span></span> &#123;</span><br><span class="line">        <span class="keyword">var</span> visited = <span class="type">Set</span>&lt;[<span class="type">Int</span>]&gt;()</span><br><span class="line">        <span class="keyword">let</span> directions = [[-<span class="number">1</span>,<span class="number">0</span>], [<span class="number">0</span>,<span class="number">1</span>], [<span class="number">1</span>,<span class="number">0</span>], [<span class="number">0</span>,-<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">backtrack</span><span class="params">(<span class="number">_</span> cell: [Int] = [<span class="number">0</span>,<span class="number">0</span>], <span class="number">_</span> d: Int = <span class="number">0</span>)</span></span> &#123;</span><br><span class="line">            <span class="function"><span class="keyword">func</span> <span class="title">goBack</span><span class="params">()</span></span> &#123;</span><br><span class="line">                <span class="function"><span class="keyword">func</span> <span class="title">uTurn</span><span class="params">()</span></span> &#123; robot.turnRight(); robot.turnRight() &#125;</span><br><span class="line">                uTurn(); robot.move(); uTurn()</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            visited.insert(cell)</span><br><span class="line">            robot.clean()</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;<span class="number">4</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> d = (d+i)%<span class="number">4</span>, cell = [cell[<span class="number">0</span>]+directions[d][<span class="number">0</span>], cell[<span class="number">1</span>]+directions[d][<span class="number">1</span>]]</span><br><span class="line">                <span class="keyword">if</span> !visited.<span class="built_in">contains</span>(cell) &amp;&amp; robot.move() &#123;</span><br><span class="line">                    backtrack(cell, d)</span><br><span class="line">                    goBack()</span><br><span class="line">                &#125;</span><br><span class="line">                robot.turnRight()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        backtrack()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="سودوكو-سولفر"><a href="#سودوكو-سولفر" class="headerlink" title="سودوكو سولفر"></a>سودوكو سولفر</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">solveSudoku</span><span class="params">(<span class="number">_</span> board: <span class="keyword">inout</span> [[Character]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">let</span> chars: [<span class="type">Character</span>] = [<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>,<span class="string">&quot;4&quot;</span>,<span class="string">&quot;5&quot;</span>,<span class="string">&quot;6&quot;</span>,<span class="string">&quot;7&quot;</span>,<span class="string">&quot;8&quot;</span>,<span class="string">&quot;9&quot;</span>]</span><br><span class="line">        <span class="keyword">var</span> boxes = <span class="type">Array</span>(repeating: <span class="type">Array</span>(repeating: <span class="type">Set</span>&lt;<span class="type">Character</span>&gt;(), <span class="built_in">count</span>: <span class="number">3</span>), <span class="built_in">count</span>: <span class="number">3</span>),  rows = (<span class="number">0</span>..&lt;<span class="number">9</span>).<span class="built_in">map</span> &#123; <span class="type">Set</span>(board[$<span class="number">0</span>]) &#125;, cols = (<span class="number">0</span>..&lt;<span class="number">9</span>).<span class="built_in">map</span> &#123; i <span class="keyword">in</span> <span class="type">Set</span>( (<span class="number">0</span>..&lt;<span class="number">9</span>).<span class="built_in">map</span> &#123; j <span class="keyword">in</span> board[j][i] &#125; )&#125;</span><br><span class="line">        (<span class="number">0</span>..&lt;<span class="number">9</span>).forEach &#123; i <span class="keyword">in</span> (<span class="number">0</span>..&lt;<span class="number">9</span>).forEach &#123; j <span class="keyword">in</span> boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].insert(board[i][j]) &#125; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">put</span><span class="params">(<span class="number">_</span> <span class="built_in">c</span>: Character, <span class="number">_</span> i: Int, <span class="number">_</span> j: Int)</span></span> &#123;</span><br><span class="line">            board[i][j] = <span class="built_in">c</span>; rows[i].insert(<span class="built_in">c</span>); cols[j].insert(<span class="built_in">c</span>); boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].insert(<span class="built_in">c</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">restore</span><span class="params">(<span class="number">_</span> <span class="built_in">c</span>: Character, <span class="number">_</span> i: Int, <span class="number">_</span> j: Int)</span></span> &#123;</span><br><span class="line">            board[i][j] = <span class="string">&quot;.&quot;</span>; rows[i].remove(<span class="built_in">c</span>); cols[j].remove(<span class="built_in">c</span>); boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].remove(<span class="built_in">c</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">backtrack</span><span class="params">(<span class="number">_</span> k: Int = <span class="number">0</span>)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> i = k/<span class="number">9</span>, j = k%<span class="number">9</span></span><br><span class="line">            <span class="keyword">if</span> k &gt;= <span class="number">81</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">            <span class="keyword">if</span> board[i][j] != <span class="string">&quot;.&quot;</span> &#123; <span class="keyword">return</span> backtrack(k+<span class="number">1</span>) &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> <span class="built_in">c</span> <span class="keyword">in</span> chars.<span class="built_in">filter</span>(&#123; !rows[i].<span class="built_in">contains</span>($<span class="number">0</span>) &amp;&amp; !cols[j].<span class="built_in">contains</span>($<span class="number">0</span>) &amp;&amp; !boxes[i/<span class="number">3</span>][j/<span class="number">3</span>].<span class="built_in">contains</span>($<span class="number">0</span>) &#125;) &#123;</span><br><span class="line">                put(<span class="built_in">c</span>, i, j)</span><br><span class="line">                <span class="keyword">if</span> backtrack(k+<span class="number">1</span>) &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">                restore(<span class="built_in">c</span>, i, j)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        backtrack()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="مجموعات"><a href="#مجموعات" class="headerlink" title="مجموعات"></a>مجموعات</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">combine</span><span class="params">(<span class="number">_</span> n: Int, <span class="number">_</span> k: Int)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> k &gt; n &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">let</span> b = (k...n).<span class="built_in">map</span> &#123; [$<span class="number">0</span>] &#125;</span><br><span class="line">        <span class="keyword">if</span> k == <span class="number">1</span> &#123; <span class="keyword">return</span> b &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> a = combine(n-<span class="number">1</span>, k-<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> a &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> b &#123;</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> last = i.last, <span class="keyword">let</span> first = j.first, last &lt; first &#123;</span><br><span class="line">                    ans.append(i + j)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="نفس-الشجرة"><a href="#نفس-الشجرة" class="headerlink" title="نفس الشجرة"></a>نفس الشجرة</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isSameTree</span><span class="params">(<span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> p = p, <span class="keyword">let</span> q = q, p.val == q.val &#123;</span><br><span class="line">            <span class="keyword">return</span> isSameTree(p.<span class="keyword">left</span>, q.<span class="keyword">left</span>) &amp;&amp; isSameTree(p.<span class="keyword">right</span>, q.<span class="keyword">right</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p == <span class="literal">nil</span> &amp;&amp; q == <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="إنشاء-أقواس"><a href="#إنشاء-أقواس" class="headerlink" title="إنشاء أقواس"></a>إنشاء أقواس</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateParenthesis</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">String</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">backtrack</span><span class="params">(<span class="number">_</span> s: String = <span class="string">&quot;&quot;</span>, <span class="number">_</span> l: Int = <span class="number">0</span>, <span class="number">_</span> r: Int = <span class="number">0</span>)</span></span> &#123;</span><br><span class="line">            <span class="keyword">if</span> s.<span class="built_in">count</span> == n*<span class="number">2</span> &#123;</span><br><span class="line">                ans.append(s); <span class="keyword">return</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> l &lt; n &#123; backtrack(s+<span class="string">&quot;(&quot;</span>, l+<span class="number">1</span>, r) &#125;</span><br><span class="line">            <span class="keyword">if</span> r &lt; l &#123; backtrack(s+<span class="string">&quot;)&quot;</span>, l, r+<span class="number">1</span>) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        backtrack()</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="الاجتياز-الداخلي-للشجرة-الثنائية"><a href="#الاجتياز-الداخلي-للشجرة-الثنائية" class="headerlink" title="الاجتياز الداخلي للشجرة الثنائية"></a>الاجتياز الداخلي للشجرة الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iteratively</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">inorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> || !stack.isEmpty &#123;</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">let</span> l = p &#123;</span><br><span class="line">                stack.append(l)</span><br><span class="line">                p = l.<span class="keyword">left</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> n = stack.popLast() &#123;</span><br><span class="line">                ans.append(n.val)</span><br><span class="line">                p = n.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="اجتياز-ترتيب-مستوى-الشجرة-الثنائية"><a href="#اجتياز-ترتيب-مستوى-الشجرة-الثنائية" class="headerlink" title="اجتياز ترتيب مستوى الشجرة الثنائية"></a>اجتياز ترتيب مستوى الشجرة الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        helper(root, <span class="number">0</span>, &amp;ans)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> level: Int, <span class="number">_</span> ans: <span class="keyword">inout</span> [[Int]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> level &gt;= ans.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans.append( [root.val] )</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ans[level].append(root.val)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        helper(root.<span class="keyword">left</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">        helper(root.<span class="keyword">right</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="تحويل-شجرة-البحث-الثنائية-إلى-قائمة-مرتبطة-بشكل-مضاعف-تم-فرزها"><a href="#تحويل-شجرة-البحث-الثنائية-إلى-قائمة-مرتبطة-بشكل-مضاعف-تم-فرزها" class="headerlink" title="تحويل شجرة البحث الثنائية إلى قائمة مرتبطة بشكل مضاعف تم فرزها"></a>تحويل شجرة البحث الثنائية إلى قائمة مرتبطة بشكل مضاعف تم فرزها</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">treeToDoublyList</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> first: <span class="type">Node?</span>, last: <span class="type">Node?</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> <span class="keyword">let</span> cur = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">            helper(cur.<span class="keyword">left</span>)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> last = last &#123;</span><br><span class="line">                last.<span class="keyword">right</span> = cur</span><br><span class="line">                cur.<span class="keyword">left</span> = last</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                first = cur</span><br><span class="line">            &#125;</span><br><span class="line">            last = cur</span><br><span class="line">            helper(cur.<span class="keyword">right</span>)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        helper(root)</span><br><span class="line">        last?.<span class="keyword">right</span> = first</span><br><span class="line">        first?.<span class="keyword">left</span> = last</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> first</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أكبر-مستطيل-في-الرسم-البياني"><a href="#أكبر-مستطيل-في-الرسم-البياني" class="headerlink" title="أكبر مستطيل في الرسم البياني"></a>أكبر مستطيل في الرسم البياني</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">largestRectangleArea</span><span class="params">(<span class="number">_</span> heights: [Int])</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> i: Int, <span class="number">_</span> j: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> i &lt;= j <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">            <span class="keyword">var</span> index = <span class="number">0</span>, v = <span class="type">Int</span>.<span class="built_in">max</span></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> i...j &#123;</span><br><span class="line">                <span class="keyword">if</span> heights[k] &lt; v &#123; index = k; v = heights[k] &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">max</span>(v*(j-i+<span class="number">1</span>), helper(i, index-<span class="number">1</span>), helper(index+<span class="number">1</span>, j))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(<span class="number">0</span>, heights.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="التباديل"><a href="#التباديل" class="headerlink" title="التباديل"></a>التباديل</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">permute</span><span class="params">(<span class="number">_</span> nums: [Int])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">if</span> nums.<span class="built_in">count</span> &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> [nums] &#125;</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nums.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> arr = nums; arr.remove(at: i)</span><br><span class="line">            ans += permute(arr).<span class="built_in">map</span> &#123; [nums[i]] + $<span class="number">0</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="مجموعات-الحروف-من-رقم-الهاتف"><a href="#مجموعات-الحروف-من-رقم-الهاتف" class="headerlink" title="مجموعات الحروف من رقم الهاتف"></a>مجموعات الحروف من رقم الهاتف</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">let</span> dict : [<span class="type">Character</span>: [<span class="type">String</span>]] = [<span class="string">&quot;2&quot;</span>:[<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>,<span class="string">&quot;c&quot;</span>],<span class="string">&quot;3&quot;</span>:[<span class="string">&quot;d&quot;</span>,<span class="string">&quot;e&quot;</span>,<span class="string">&quot;f&quot;</span>],<span class="string">&quot;4&quot;</span>:[<span class="string">&quot;g&quot;</span>,<span class="string">&quot;h&quot;</span>,<span class="string">&quot;i&quot;</span>],<span class="string">&quot;5&quot;</span>:[<span class="string">&quot;j&quot;</span>,<span class="string">&quot;k&quot;</span>,<span class="string">&quot;l&quot;</span>],<span class="string">&quot;6&quot;</span>:[<span class="string">&quot;m&quot;</span>,<span class="string">&quot;n&quot;</span>,<span class="string">&quot;o&quot;</span>],<span class="string">&quot;7&quot;</span>:[<span class="string">&quot;p&quot;</span>,<span class="string">&quot;q&quot;</span>,<span class="string">&quot;r&quot;</span>,<span class="string">&quot;s&quot;</span>],<span class="string">&quot;8&quot;</span>:[<span class="string">&quot;t&quot;</span>,<span class="string">&quot;u&quot;</span>,<span class="string">&quot;v&quot;</span>],<span class="string">&quot;9&quot;</span>:[<span class="string">&quot;w&quot;</span>,<span class="string">&quot;x&quot;</span>,<span class="string">&quot;y&quot;</span>,<span class="string">&quot;z&quot;</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">letterCombinations</span><span class="params">(<span class="number">_</span> digits: String)</span></span> -&gt; [<span class="type">String</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> digits.isEmpty ? [] : digits.<span class="built_in">reduce</span>([<span class="string">&quot;&quot;</span>]) &#123; (ans, digit) <span class="keyword">in</span></span><br><span class="line">            ans.flatMap &#123; s <span class="keyword">in</span> dict[digit, <span class="keyword">default</span>: [<span class="string">&quot;&quot;</span>]].<span class="built_in">map</span> &#123; <span class="built_in">c</span> <span class="keyword">in</span> s + <span class="built_in">c</span> &#125; &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="مشكلة-الأفق"><a href="#مشكلة-الأفق" class="headerlink" title="مشكلة الأفق"></a>مشكلة الأفق</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getSkyline</span><span class="params">(<span class="number">_</span> buildings: [[Int]])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">let</span> n = buildings.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">0</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">if</span> n == <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> [[buildings[<span class="number">0</span>][<span class="number">0</span>], buildings[<span class="number">0</span>][<span class="number">2</span>]], [buildings[<span class="number">0</span>][<span class="number">1</span>], <span class="number">0</span>]]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> l = getSkyline(<span class="type">Array</span>(buildings[..&lt;(n/<span class="number">2</span>)]))</span><br><span class="line">        <span class="keyword">let</span> r = getSkyline(<span class="type">Array</span>(buildings[(n/<span class="number">2</span>)...]))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> merge(l, r)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(<span class="number">_</span> l: [[Int]], <span class="number">_</span> r: [[Int]])</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">let</span> ln = l.<span class="built_in">count</span>, rn = r.<span class="built_in">count</span></span><br><span class="line">        <span class="keyword">var</span> lp = <span class="number">0</span>, rp = <span class="number">0</span></span><br><span class="line">        <span class="keyword">var</span> curY = <span class="number">0</span>, lY = <span class="number">0</span>, rY = <span class="number">0</span> , output = [[<span class="type">Int</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">update</span><span class="params">(<span class="number">_</span> x: Int, <span class="number">_</span> y: Int)</span></span> &#123;</span><br><span class="line">            <span class="keyword">if</span> output.isEmpty || output.last?.first != x &#123;</span><br><span class="line">                output.append([x, y])</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                output[output.<span class="built_in">count</span>-<span class="number">1</span>][<span class="number">1</span>] = y</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">append</span><span class="params">(<span class="number">_</span> p: Int, <span class="number">_</span> lst: [[Int]], <span class="number">_</span> n: Int, <span class="number">_</span> curY: Int)</span></span> &#123;</span><br><span class="line">            <span class="keyword">var</span> p = p, curY = curY</span><br><span class="line">            <span class="keyword">while</span> p &lt; n &#123;</span><br><span class="line">                <span class="keyword">let</span> (x, y) = (lst[p][<span class="number">0</span>], lst[p][<span class="number">1</span>])</span><br><span class="line">                p += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> curY != y &#123;</span><br><span class="line">                    update(x, y)</span><br><span class="line">                    curY = y</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> lp &lt; ln &amp;&amp; rp &lt; rn &#123;</span><br><span class="line">            <span class="keyword">let</span> lPoint = l[lp], rPoint = r[rp]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> x = <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> lPoint[<span class="number">0</span>] &lt; rPoint[<span class="number">0</span>] &#123;</span><br><span class="line">                (x, lY) = (lPoint[<span class="number">0</span>], lPoint[<span class="number">1</span>])</span><br><span class="line">                lp += <span class="number">1</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                (x, rY) = (rPoint[<span class="number">0</span>], rPoint[<span class="number">1</span>])</span><br><span class="line">                rp += <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> maxY = <span class="built_in">max</span>(lY, rY)</span><br><span class="line">            <span class="keyword">if</span> curY != maxY &#123;</span><br><span class="line">                update(x, maxY)</span><br><span class="line">                curY = maxY</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        append(lp, l, ln, curY)</span><br><span class="line">        append(rp, r, rn, curY)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> output</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;فرز-صفيف&quot;&gt;&lt;a href=&quot;#فرز-صفيف&quot; class=&quot;headerlink&quot; title=&quot;فرز صفيف&quot;&gt;&lt;/a&gt;فرز صفيف&lt;/h2&gt;
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ar/tags/leetcode/"/>
    
      <category term="Swift" scheme="https://leihao0.github.io/ar/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>تكرار LeetCode 1</title>
    <link href="https://leihao0.github.io/ar/LeetCode-Recursion-1/"/>
    <id>https://leihao0.github.io/ar/LeetCode-Recursion-1/</id>
    <published>2020-01-03T16:00:00.000Z</published>
    <updated>2020-12-22T00:32:16.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="سلسلة-عكسية"><a href="#سلسلة-عكسية" class="headerlink" title="سلسلة عكسية"></a>سلسلة عكسية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseString</span><span class="params">(<span class="number">_</span> s: <span class="keyword">inout</span> [Character])</span></span> &#123;</span><br><span class="line">        s.<span class="built_in">reverse</span>()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="تبادل-العقد-في-أزواج"><a href="#تبادل-العقد-في-أزواج" class="headerlink" title="تبادل العقد في أزواج"></a>تبادل العقد في أزواج</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">swapPairs</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> h = <span class="built_in">swap</span>(head)</span><br><span class="line">        h?.next?.next = swapPairs(h?.next?.next)</span><br><span class="line">        <span class="keyword">return</span> h</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">swap</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> h0 = head, <span class="keyword">let</span> h1 = h0.next &#123;</span><br><span class="line">            h0.next = h1.next</span><br><span class="line">            h1.next = h0</span><br><span class="line">            <span class="keyword">return</span> h1</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> head</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="قائمة-مرتبطة-عكسي"><a href="#قائمة-مرتبطة-عكسي" class="headerlink" title="قائمة مرتبطة عكسي"></a>قائمة مرتبطة عكسي</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">reverseList</span><span class="params">(<span class="number">_</span> head: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> prev: <span class="type">ListNode?</span> = <span class="literal">nil</span>, cur = head</span><br><span class="line">        <span class="keyword">while</span> cur != <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> p = cur?.next</span><br><span class="line">            cur?.next = prev</span><br><span class="line">            prev = cur</span><br><span class="line">            cur = p</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prev</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ابحث-في-شجرة-بحث-ثنائية"><a href="#ابحث-في-شجرة-بحث-ثنائية" class="headerlink" title="ابحث في شجرة بحث ثنائية"></a>ابحث في شجرة بحث ثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">searchBST</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> val: Int)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.val == val &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">if</span> val &lt; root.val &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">left</span>, val)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> searchBST(root.<span class="keyword">right</span>, val)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="مثلث-باسكال-II"><a href="#مثلث-باسكال-II" class="headerlink" title="مثلث باسكال II"></a>مثلث باسكال II</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">getRow</span><span class="params">(<span class="number">_</span> rowIndex: Int)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> arr = [<span class="number">1</span>], j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> <span class="number">_</span> <span class="keyword">in</span> <span class="number">0</span>..&lt;rowIndex &#123;</span><br><span class="line">            arr.append(<span class="number">1</span>)</span><br><span class="line">            j = arr.<span class="built_in">count</span> - <span class="number">2</span></span><br><span class="line">            <span class="keyword">while</span> j &gt; <span class="number">0</span> &#123;</span><br><span class="line">                arr[j] += arr[j-<span class="number">1</span>]</span><br><span class="line">                j -= <span class="number">1</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arr</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="رقم-فيبوناتشي"><a href="#رقم-فيبوناتشي" class="headerlink" title="رقم فيبوناتشي"></a>رقم فيبوناتشي</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = <span class="type">Array</span>(repeating: <span class="number">0</span>, <span class="built_in">count</span>: <span class="number">31</span>)</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fib</span><span class="params">(<span class="number">_</span> N: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        arr[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> <span class="type">N</span> &lt; <span class="number">2</span> || arr[<span class="type">N</span>] != <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> arr[<span class="type">N</span>]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            arr[<span class="type">N</span>-<span class="number">1</span>] = fib(<span class="type">N</span>-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> arr[<span class="type">N</span>-<span class="number">1</span>] + arr[<span class="type">N</span>-<span class="number">2</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="يصعد-الدرج"><a href="#يصعد-الدرج" class="headerlink" title="يصعد الدرج"></a>يصعد الدرج</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> arr = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>] + <span class="type">Array</span>(repeating: <span class="number">0</span>, <span class="built_in">count</span>: <span class="number">127</span>)</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">climbStairs</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">4</span> || arr[n] != <span class="number">0</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> arr[n]</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            arr[n-<span class="number">1</span>] = climbStairs(n-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> arr[n-<span class="number">1</span>] + arr[n-<span class="number">2</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أقصى-عمق-للشجرة-الثنائية"><a href="#أقصى-عمق-للشجرة-الثنائية" class="headerlink" title="أقصى عمق للشجرة الثنائية"></a>أقصى عمق للشجرة الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">max</span>(maxDepth(root.<span class="keyword">left</span>), maxDepth(root.<span class="keyword">right</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="الأسرى-س-،-ن"><a href="#الأسرى-س-،-ن" class="headerlink" title="الأسرى (س ، ن)"></a>الأسرى (س ، ن)</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">myPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int)</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> dic = [<span class="type">Int</span>:<span class="type">Double</span></span><br><span class="line">        dic[-<span class="number">1</span>] = <span class="number">1</span>/x; dic[<span class="number">0</span>] = <span class="number">1</span>; dic[<span class="number">1</span>] = x</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fastPow(x, n, &amp;dic)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">fastPow</span><span class="params">(<span class="number">_</span> x: Double, <span class="number">_</span> n: Int, <span class="number">_</span> arr: <span class="keyword">inout</span> [Int:Double])</span></span> -&gt; <span class="type">Double</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> v = arr[n] &#123; <span class="keyword">return</span> v &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> l = n / <span class="number">2</span>, r = n - l</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> arr[l] == <span class="literal">nil</span> &#123;</span><br><span class="line">            arr[l] = fastPow(x, l, &amp;arr)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> arr[r] == <span class="literal">nil</span> &#123;</span><br><span class="line">            arr[r] = fastPow(x, r, &amp;arr)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> arr[l]! * arr[r]!</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="دمج-قائمتين-تم-فرزهما"><a href="#دمج-قائمتين-تم-فرزهما" class="headerlink" title="دمج قائمتين تم فرزهما"></a>دمج قائمتين تم فرزهما</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mergeTwoLists</span><span class="params">(<span class="number">_</span> l1: ListNode?, <span class="number">_</span> l2: ListNode?)</span></span> -&gt; <span class="type">ListNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p1 = l1 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l2 &#125;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> p2 = l2 <span class="keyword">else</span> &#123; <span class="keyword">return</span> l1 &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> (p, q) = p1.val &lt;= p2.val ? (p1, p2) : (p2, p1)</span><br><span class="line">        p.next = mergeTwoLists(p.next, q)</span><br><span class="line">        <span class="keyword">return</span> p</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="K-th-الرمز-في-النحو"><a href="#K-th-الرمز-في-النحو" class="headerlink" title="K-th الرمز في النحو"></a>K-th الرمز في النحو</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">kthGrammar</span><span class="params">(<span class="number">_</span> N: Int, <span class="number">_</span> K: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> <span class="type">N</span> &lt; <span class="number">2</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> (kthGrammar(<span class="type">N</span>-<span class="number">1</span>, (<span class="type">K</span>+<span class="number">1</span>)/<span class="number">2</span>) == <span class="number">0</span>) ? <span class="number">1</span>-<span class="type">K</span>%<span class="number">2</span> : <span class="type">K</span>%<span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أشجار-البحث-الثنائية-الفريدة-II"><a href="#أشجار-البحث-الثنائية-الفريدة-II" class="headerlink" title="أشجار البحث الثنائية الفريدة II"></a>أشجار البحث الثنائية الفريدة II</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">generateTrees</span><span class="params">(<span class="number">_</span> n: Int)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> n &lt; <span class="number">1</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">return</span> helper(<span class="number">1</span>, n)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> i1: Int, <span class="number">_</span> i2:Int)</span></span> -&gt; [<span class="type">TreeNode?</span>] &#123;</span><br><span class="line">        <span class="keyword">if</span> i1 &gt; i2 &#123; <span class="keyword">return</span> [<span class="literal">nil</span>] &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> tn = [<span class="type">TreeNode</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> i1...i2 &#123;</span><br><span class="line">            <span class="keyword">let</span> l = helper(i1, i-<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">let</span> r = helper(i+<span class="number">1</span>, i2)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> li <span class="keyword">in</span> l &#123;</span><br><span class="line">                <span class="keyword">for</span> ri <span class="keyword">in</span> r &#123;</span><br><span class="line">                    <span class="keyword">let</span> n = <span class="type">TreeNode</span>(i)</span><br><span class="line">                    n.<span class="keyword">left</span> = li</span><br><span class="line">                    n.<span class="keyword">right</span> = ri</span><br><span class="line">                    tn.append(n)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> tn</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;سلسلة-عكسية&quot;&gt;&lt;a href=&quot;#سلسلة-عكسية&quot; class=&quot;headerlink&quot; title=&quot;سلسلة عكسية&quot;&gt;&lt;/a&gt;سلسلة عكسية&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reverseString&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; s: &lt;span class=&quot;keyword&quot;&gt;inout&lt;/span&gt; [Character])&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s.&lt;span class=&quot;built_in&quot;&gt;reverse&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ar/tags/leetcode/"/>
    
      <category term="Swift" scheme="https://leihao0.github.io/ar/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>شجرة LeetCode الثنائية</title>
    <link href="https://leihao0.github.io/ar/LeetCode-Binary-Tree/"/>
    <id>https://leihao0.github.io/ar/LeetCode-Binary-Tree/</id>
    <published>2020-01-02T16:00:00.000Z</published>
    <updated>2020-12-22T00:32:16.900Z</updated>
    
    <content type="html"><![CDATA[<h2 id="اجتياز-الشجرة-الثنائية-للطلب-المسبق"><a href="#اجتياز-الشجرة-الثنائية-للطلب-المسبق" class="headerlink" title="اجتياز الشجرة الثنائية للطلب المسبق"></a>اجتياز الشجرة الثنائية للطلب المسبق</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iterative</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">let</span> p = stack.popLast() &#123;</span><br><span class="line">            ans.append(p.val)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> r = p.<span class="keyword">right</span> &#123; stack.append(r) &#125;</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> l = p.<span class="keyword">left</span> &#123; stack.append(l) &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// recursive</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">preorderTraversal0</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">return</span> [root.val] + preorderTraversal(root.<span class="keyword">left</span>) + preorderTraversal(root.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="الاجتياز-الداخلي-للشجرة-الثنائية"><a href="#الاجتياز-الداخلي-للشجرة-الثنائية" class="headerlink" title="الاجتياز الداخلي للشجرة الثنائية"></a>الاجتياز الداخلي للشجرة الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// iteratively</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">inorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [<span class="type">Int</span></span><br><span class="line">        <span class="keyword">while</span> p != <span class="literal">nil</span> || !stack.isEmpty &#123;</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">let</span> l = p &#123;</span><br><span class="line">                stack.append(l)</span><br><span class="line">                p = l.<span class="keyword">left</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> n = stack.popLast() &#123;</span><br><span class="line">                ans.append(n.val)</span><br><span class="line">                p = n.<span class="keyword">right</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="الاجتياز-اللاحق-للأشجار-الثنائية"><a href="#الاجتياز-اللاحق-للأشجار-الثنائية" class="headerlink" title="الاجتياز اللاحق للأشجار الثنائية"></a>الاجتياز اللاحق للأشجار الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Recursive</span></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">postorderTraversal</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int</span>] &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> [] &#125;</span><br><span class="line">        <span class="keyword">return</span> postorderTraversal(root.<span class="keyword">left</span>) + postorderTraversal(root.<span class="keyword">right</span>) + [root.val]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="اجتياز-ترتيب-مستوى-الشجرة-الثنائية"><a href="#اجتياز-ترتيب-مستوى-الشجرة-الثنائية" class="headerlink" title="اجتياز ترتيب مستوى الشجرة الثنائية"></a>اجتياز ترتيب مستوى الشجرة الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">levelOrder</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [[<span class="type">Int</span>]] &#123;</span><br><span class="line">        <span class="keyword">var</span> ans = [[<span class="type">Int</span>]</span><br><span class="line">        helper(root, <span class="number">0</span>, &amp;ans)</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> level: Int, <span class="number">_</span> ans: <span class="keyword">inout</span> [[Int]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> level &gt;= ans.<span class="built_in">count</span> &#123;</span><br><span class="line">            ans.append( [root.val] )</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ans[level].append(root.val)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        helper(root.<span class="keyword">left</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">        helper(root.<span class="keyword">right</span>, level+<span class="number">1</span>, &amp;ans)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أقصى-عمق-للشجرة-الثنائية"><a href="#أقصى-عمق-للشجرة-الثنائية" class="headerlink" title="أقصى عمق للشجرة الثنائية"></a>أقصى عمق للشجرة الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">maxDepth</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> root != <span class="literal">nil</span> <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="number">0</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> + <span class="built_in">max</span>(maxDepth(root?.<span class="keyword">left</span>), maxDepth(root?.<span class="keyword">right</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="شجرة-متماثلة"><a href="#شجرة-متماثلة" class="headerlink" title="شجرة متماثلة"></a>شجرة متماثلة</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">isSymmetric</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> inOrder(root) == inOrder(<span class="built_in">reverse</span>(root))</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">reverse</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="built_in">reverse</span>(root.<span class="keyword">left</span>); <span class="built_in">reverse</span>(root.<span class="keyword">right</span>)</span><br><span class="line">        <span class="built_in">swap</span>(&amp;root.<span class="keyword">left</span>, &amp;root.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">inOrder</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; [<span class="type">Int?</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> root == <span class="literal">nil</span> ? [<span class="literal">nil</span>] : [root!.val] + inOrder(root!.<span class="keyword">left</span>) + inOrder(root!.<span class="keyword">right</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="مجموع-المسار"><a href="#مجموع-المسار" class="headerlink" title="مجموع المسار"></a>مجموع المسار</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">hasPathSum</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> sum: Int)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">false</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.<span class="keyword">left</span> == <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> == <span class="literal">nil</span> &amp;&amp; root.val == sum &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> hasPathSum(root.<span class="keyword">left</span>, sum-root.val) || hasPathSum(root.<span class="keyword">right</span>, sum-root.val)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="عد-الأشجار-الفرعية-Univalue"><a href="#عد-الأشجار-الفرعية-Univalue" class="headerlink" title="عد الأشجار الفرعية Univalue"></a>عد الأشجار الفرعية Univalue</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">countUnivalSubtrees</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        isUni(root)</span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">var</span> num = <span class="number">0</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">isUni</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">true</span> &#125;</span><br><span class="line">        <span class="keyword">if</span> root.<span class="keyword">left</span> == <span class="literal">nil</span> &amp;&amp; root.<span class="keyword">right</span> == <span class="literal">nil</span> &#123;</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">let</span> lv = root.<span class="keyword">left</span>?.val ?? root.<span class="keyword">right</span>!.val</span><br><span class="line">        <span class="keyword">let</span> rv = root.<span class="keyword">right</span>?.val ?? root.<span class="keyword">left</span>!.val</span><br><span class="line">        <span class="keyword">let</span> l = root.<span class="keyword">left</span> == <span class="literal">nil</span> ? <span class="literal">true</span> : isUni(root.<span class="keyword">left</span>)</span><br><span class="line">        <span class="keyword">let</span> r = root.<span class="keyword">right</span> == <span class="literal">nil</span> ? <span class="literal">true</span> : isUni(root.<span class="keyword">right</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> ans = l &amp;&amp; r &amp;&amp; (lv == root.val &amp;&amp; rv == root.val)</span><br><span class="line">        <span class="keyword">if</span> ans &#123; num += <span class="number">1</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> ans</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="إنشاء-شجرة-ثنائية-من-اجتياز-الطلب-الداخلي-والبريد"><a href="#إنشاء-شجرة-ثنائية-من-اجتياز-الطلب-الداخلي-والبريد" class="headerlink" title="إنشاء شجرة ثنائية من اجتياز الطلب الداخلي والبريد"></a>إنشاء شجرة ثنائية من اجتياز الطلب الداخلي والبريد</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">buildTree</span><span class="params">(<span class="number">_</span> inorder: [Int], <span class="number">_</span> postorder: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> dict = inorder.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">Int</span>:<span class="type">Int</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> inRange: <span class="params">(Int, Int)</span></span></span>, <span class="number">_</span> postI: <span class="type">Int</span>) -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> postI &lt; <span class="number">0</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> v = postorder[postI]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> i = dict[v], i &gt;= inRange.<span class="number">0</span> &amp;&amp; i &lt;= inRange.<span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> n = <span class="type">TreeNode</span>(v)</span><br><span class="line">                n.<span class="keyword">left</span> = helper((inRange.<span class="number">0</span>, i-<span class="number">1</span>), postI-<span class="number">1</span>)</span><br><span class="line">                n.<span class="keyword">right</span> = helper((i+<span class="number">1</span>, inRange.<span class="number">1</span>), postI-<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> n</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> helper(inRange, postI-<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper((<span class="number">0</span>, inorder.<span class="built_in">count</span>-<span class="number">1</span>), postorder.<span class="built_in">count</span>-<span class="number">1</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="إنشاء-شجرة-ثنائية-من-اجتياز-الطلب-المسبق-والداخل"><a href="#إنشاء-شجرة-ثنائية-من-اجتياز-الطلب-المسبق-والداخل" class="headerlink" title="إنشاء شجرة ثنائية من اجتياز الطلب المسبق والداخل"></a>إنشاء شجرة ثنائية من اجتياز الطلب المسبق والداخل</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">buildTree</span><span class="params">(<span class="number">_</span> preorder: [Int], <span class="number">_</span> inorder: [Int])</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> dict = inorder.enumerated().<span class="built_in">reduce</span>(into: [<span class="type">Int</span>: <span class="type">Int</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> inRange: <span class="params">(Int, Int)</span></span></span>, <span class="number">_</span> preI: <span class="type">Int</span>) -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> preI &gt;= preorder.<span class="built_in">count</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> v = preorder[preI]</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> i = dict[v], i &gt;= inRange.<span class="number">0</span> &amp;&amp; i &lt;= inRange.<span class="number">1</span> &#123;</span><br><span class="line">                <span class="keyword">let</span> n = <span class="type">TreeNode</span>(v)</span><br><span class="line">                n.<span class="keyword">left</span> = helper((inRange.<span class="number">0</span>, i-<span class="number">1</span>), preI+<span class="number">1</span>)</span><br><span class="line">                n.<span class="keyword">right</span> = helper((i+<span class="number">1</span>, inRange.<span class="number">1</span>), preI+<span class="number">1</span>)</span><br><span class="line">                <span class="keyword">return</span> n</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> helper(inRange, preI+<span class="number">1</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper((<span class="number">0</span>, inorder.<span class="built_in">count</span>-<span class="number">1</span>), <span class="number">0</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ملء-المؤشرات-اليمنى-التالية-في-كل-عقدة"><a href="#ملء-المؤشرات-اليمنى-التالية-في-كل-عقدة" class="headerlink" title="ملء المؤشرات اليمنى التالية في كل عقدة"></a>ملء المؤشرات اليمنى التالية في كل عقدة</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">connect</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        root.<span class="keyword">left</span>?.next = root.<span class="keyword">right</span></span><br><span class="line">        root.<span class="keyword">right</span>?.next = root.next?.<span class="keyword">left</span></span><br><span class="line">        connect(root.<span class="keyword">left</span>)</span><br><span class="line">        connect(root.<span class="keyword">right</span>)</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ملء-المؤشرات-اليمنى-التالية-في-كل-عقدة-II"><a href="#ملء-المؤشرات-اليمنى-التالية-في-كل-عقدة-II" class="headerlink" title="ملء المؤشرات اليمنى التالية في كل عقدة II"></a>ملء المؤشرات اليمنى التالية في كل عقدة II</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">connect</span><span class="params">(<span class="number">_</span> root: Node?)</span></span> -&gt; <span class="type">Node?</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> nodes = [[<span class="type">Node</span>]</span><br><span class="line">        helper(root, <span class="number">0</span>, &amp;nodes)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="number">0</span>..&lt;nodes.<span class="built_in">count</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="number">0</span>..&lt;(nodes[i].<span class="built_in">count</span>-<span class="number">1</span>) &#123;</span><br><span class="line">                nodes[i][j].next = nodes[i][j+<span class="number">1</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">(<span class="number">_</span> root: Node?, <span class="number">_</span> level: Int, <span class="number">_</span> nodes: <span class="keyword">inout</span> [[Node]])</span></span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> &#125;</span><br><span class="line">        level &lt; nodes.<span class="built_in">count</span> ? nodes[level].append(root) : nodes.append([root])</span><br><span class="line">        helper(root.<span class="keyword">left</span>, level+<span class="number">1</span>, &amp;nodes)</span><br><span class="line">        helper(root.<span class="keyword">right</span>, level+<span class="number">1</span>, &amp;nodes)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="أدنى-سلف-مشترك-لشجرة-ثنائية"><a href="#أدنى-سلف-مشترك-لشجرة-ثنائية" class="headerlink" title="أدنى سلف مشترك لشجرة ثنائية"></a>أدنى سلف مشترك لشجرة ثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">lowestCommonAncestor</span><span class="params">(<span class="number">_</span> root: TreeNode?, <span class="number">_</span> p: TreeNode?, <span class="number">_</span> q: TreeNode?)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root, <span class="keyword">let</span> p = p, <span class="keyword">let</span> q = q <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">        <span class="keyword">let</span> l = lowestCommonAncestor(root.<span class="keyword">left</span>, p, q), r = lowestCommonAncestor(root.<span class="keyword">right</span>, p, q)</span><br><span class="line">        <span class="keyword">if</span> root.val == p.val || root.val == q.val || (l != <span class="literal">nil</span> &amp;&amp; r != <span class="literal">nil</span>) &#123; <span class="keyword">return</span> root &#125;</span><br><span class="line">        <span class="keyword">return</span> l ?? r</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="تسلسل-وإلغاء-تسلسل-الشجرة-الثنائية"><a href="#تسلسل-وإلغاء-تسلسل-الشجرة-الثنائية" class="headerlink" title="تسلسل وإلغاء تسلسل الشجرة الثنائية"></a>تسلسل وإلغاء تسلسل الشجرة الثنائية</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Codec</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">serialize</span><span class="params">(<span class="number">_</span> root: TreeNode?)</span></span> -&gt; <span class="type">String</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> <span class="keyword">let</span> root = root <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="string">&quot;#&quot;</span> &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;\(root.val),\(serialize(root.left)),\(serialize(root.right))&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">deserialize</span><span class="params">(<span class="number">_</span> data: String)</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> vals = data.<span class="built_in">split</span>(separator: <span class="string">&quot;,&quot;</span>)</span><br><span class="line">        <span class="keyword">var</span> i = <span class="number">0</span></span><br><span class="line">        <span class="function"><span class="keyword">func</span> <span class="title">helper</span><span class="params">()</span></span> -&gt; <span class="type">TreeNode?</span> &#123;</span><br><span class="line">            <span class="keyword">guard</span> i &lt; vals.<span class="built_in">count</span>, <span class="keyword">let</span> v = <span class="type">Int</span>(vals[i]) <span class="keyword">else</span> &#123; <span class="keyword">return</span> <span class="literal">nil</span> &#125;</span><br><span class="line">            <span class="keyword">let</span> n = <span class="type">TreeNode</span>(v)</span><br><span class="line">            i += <span class="number">1</span>; n.<span class="keyword">left</span> = helper()</span><br><span class="line">            i += <span class="number">1</span>; n.<span class="keyword">right</span> = helper()</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> helper()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;اجتياز-الشجرة-الثنائية-للطلب-المسبق&quot;&gt;&lt;a href=&quot;#اجتياز-الشجرة-الثنائية-للطلب-المسبق&quot; class=&quot;headerlink&quot; title=&quot;اجتياز الشجرة الثنائية للطلب المسبق&quot;&gt;&lt;/a&gt;اجتياز الشجرة الثنائية للطلب المسبق&lt;/h2&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Solution&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// iterative&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;preorderTraversal&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; root: TreeNode?)&lt;/span&gt;&lt;/span&gt; -&amp;gt; [&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; ans = [&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; p = stack.popLast() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ans.append(p.val)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; r = p.&lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt; &amp;#123; stack.append(r) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; l = p.&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; &amp;#123; stack.append(l) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; ans&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// recursive&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;preorderTraversal0&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; root: TreeNode?)&lt;/span&gt;&lt;/span&gt; -&amp;gt; [&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;guard&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; root = root &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [] &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [root.val] + preorderTraversal(root.&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;) + preorderTraversal(root.&lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="LeetCode" scheme="https://leihao0.github.io/ar/tags/leetcode/"/>
    
      <category term="Swift" scheme="https://leihao0.github.io/ar/tags/swift/"/>
    
  </entry>
  
</feed>
